// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LocalDevicesColumns holds the columns for the "local_devices" table.
	LocalDevicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "system_name", Type: field.TypeString, Unique: true},
		{Name: "vendor_id", Type: field.TypeInt, Nullable: true},
		{Name: "product_id", Type: field.TypeInt, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "active", Type: field.TypeBool},
		{Name: "archived", Type: field.TypeBool, Default: false},
		{Name: "category", Type: field.TypeEnum, Enums: []string{"scanner", "printer"}},
	}
	// LocalDevicesTable holds the schema information for the "local_devices" table.
	LocalDevicesTable = &schema.Table{
		Name:       "local_devices",
		Columns:    LocalDevicesColumns,
		PrimaryKey: []*schema.Column{LocalDevicesColumns[0]},
	}
	// LogErrorsColumns holds the columns for the "log_errors" table.
	LogErrorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "error", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// LogErrorsTable holds the schema information for the "log_errors" table.
	LogErrorsTable = &schema.Table{
		Name:       "log_errors",
		Columns:    LogErrorsColumns,
		PrimaryKey: []*schema.Column{LogErrorsColumns[0]},
	}
	// PrintJobsColumns holds the columns for the "print_jobs" table.
	PrintJobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "pending_success", "success", "pending_cancel", "canceled"}},
		{Name: "file_extension", Type: field.TypeEnum, Enums: []string{"pdf", "zpl", "txt", "png"}},
		{Name: "use_shell", Type: field.TypeBool, Default: false},
		{Name: "base64_print_data", Type: field.TypeString},
		{Name: "messages", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "print_job_local_device", Type: field.TypeString},
	}
	// PrintJobsTable holds the schema information for the "print_jobs" table.
	PrintJobsTable = &schema.Table{
		Name:       "print_jobs",
		Columns:    PrintJobsColumns,
		PrimaryKey: []*schema.Column{PrintJobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "print_jobs_local_devices_local_device",
				Columns:    []*schema.Column{PrintJobsColumns[7]},
				RefColumns: []*schema.Column{LocalDevicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RecentScansColumns holds the columns for the "recent_scans" table.
	RecentScansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "scan_value", Type: field.TypeString},
		{Name: "response", Type: field.TypeString},
		{Name: "scan_type", Type: field.TypeEnum, Enums: []string{"label_request"}, Default: "label_request"},
		{Name: "created_at", Type: field.TypeTime},
	}
	// RecentScansTable holds the schema information for the "recent_scans" table.
	RecentScansTable = &schema.Table{
		Name:       "recent_scans",
		Columns:    RecentScansColumns,
		PrimaryKey: []*schema.Column{RecentScansColumns[0]},
	}
	// RemoteConnectionsColumns holds the columns for the "remote_connections" table.
	RemoteConnectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "remote_url", Type: field.TypeString, Unique: true},
		{Name: "registration_token", Type: field.TypeString},
		{Name: "workstation_name", Type: field.TypeString},
		{Name: "last_ping", Type: field.TypeTime, Nullable: true},
	}
	// RemoteConnectionsTable holds the schema information for the "remote_connections" table.
	RemoteConnectionsTable = &schema.Table{
		Name:       "remote_connections",
		Columns:    RemoteConnectionsColumns,
		PrimaryKey: []*schema.Column{RemoteConnectionsColumns[0]},
	}
	// UniqueComputersColumns holds the columns for the "unique_computers" table.
	UniqueComputersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
	}
	// UniqueComputersTable holds the schema information for the "unique_computers" table.
	UniqueComputersTable = &schema.Table{
		Name:       "unique_computers",
		Columns:    UniqueComputersColumns,
		PrimaryKey: []*schema.Column{UniqueComputersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LocalDevicesTable,
		LogErrorsTable,
		PrintJobsTable,
		RecentScansTable,
		RemoteConnectionsTable,
		UniqueComputersTable,
	}
)

func init() {
	PrintJobsTable.ForeignKeys[0].RefTable = LocalDevicesTable
}
