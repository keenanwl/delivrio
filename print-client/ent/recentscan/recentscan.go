// Code generated by ent, DO NOT EDIT.

package recentscan

import (
	"fmt"
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the recentscan type in the database.
	Label = "recent_scan"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldScanValue holds the string denoting the scan_value field in the database.
	FieldScanValue = "scan_value"
	// FieldResponse holds the string denoting the response field in the database.
	FieldResponse = "response"
	// FieldScanType holds the string denoting the scan_type field in the database.
	FieldScanType = "scan_type"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// Table holds the table name of the recentscan in the database.
	Table = "recent_scans"
)

// Columns holds all SQL columns for recentscan fields.
var Columns = []string{
	FieldID,
	FieldScanValue,
	FieldResponse,
	FieldScanType,
	FieldCreatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)

// ScanType defines the type for the "scan_type" enum field.
type ScanType string

// ScanTypeLabelRequest is the default value of the ScanType enum.
const DefaultScanType = ScanTypeLabelRequest

// ScanType values.
const (
	ScanTypeLabelRequest ScanType = "label_request"
)

func (st ScanType) String() string {
	return string(st)
}

// ScanTypeValidator is a validator for the "scan_type" field enum values. It is called by the builders before save.
func ScanTypeValidator(st ScanType) error {
	switch st {
	case ScanTypeLabelRequest:
		return nil
	default:
		return fmt.Errorf("recentscan: invalid enum value for scan_type field: %q", st)
	}
}

// OrderOption defines the ordering options for the RecentScan queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByScanValue orders the results by the scan_value field.
func ByScanValue(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldScanValue, opts...).ToFunc()
}

// ByResponse orders the results by the response field.
func ByResponse(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldResponse, opts...).ToFunc()
}

// ByScanType orders the results by the scan_type field.
func ByScanType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldScanType, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}
