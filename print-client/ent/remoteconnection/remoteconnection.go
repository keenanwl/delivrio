// Code generated by ent, DO NOT EDIT.

package remoteconnection

import (
	"delivrio.io/shared-utils/pulid"
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the remoteconnection type in the database.
	Label = "remote_connection"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRemoteURL holds the string denoting the remote_url field in the database.
	FieldRemoteURL = "remote_url"
	// FieldRegistrationToken holds the string denoting the registration_token field in the database.
	FieldRegistrationToken = "registration_token"
	// FieldWorkstationName holds the string denoting the workstation_name field in the database.
	FieldWorkstationName = "workstation_name"
	// FieldLastPing holds the string denoting the last_ping field in the database.
	FieldLastPing = "last_ping"
	// Table holds the table name of the remoteconnection in the database.
	Table = "remote_connections"
)

// Columns holds all SQL columns for remoteconnection fields.
var Columns = []string{
	FieldID,
	FieldRemoteURL,
	FieldRegistrationToken,
	FieldWorkstationName,
	FieldLastPing,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() pulid.ID
)

// OrderOption defines the ordering options for the RemoteConnection queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRemoteURL orders the results by the remote_url field.
func ByRemoteURL(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRemoteURL, opts...).ToFunc()
}

// ByRegistrationToken orders the results by the registration_token field.
func ByRegistrationToken(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRegistrationToken, opts...).ToFunc()
}

// ByWorkstationName orders the results by the workstation_name field.
func ByWorkstationName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldWorkstationName, opts...).ToFunc()
}

// ByLastPing orders the results by the last_ping field.
func ByLastPing(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastPing, opts...).ToFunc()
}
