schema:
  - ./gengql/*.graphql

exec:
  layout: follow-schema
  dir: ./gengql/generated
  package: generated

model:
  filename: gengql/generated/models/models_gen.go
  package: models

resolver:
  # Tell gqlgen to generate resolvers next to the schema file.
  layout: follow-schema
  dir: ./gengql

#struct_tag: gqlgen

# gqlgen will search for any type names in the schema in the generated
# ent package. If they match it will use them, otherwise it will new ones.
autobind:
  - delivrio.io/go/ent
  - delivrio.io/go/utils

models:
  ID:
    model:
      - delivrio.io/shared-utils/pulid.ID
  Node:
    model:
      # ent.Noder is the new interface generated by the Node template.
      - delivrio.io/go/ent.Noder
  DeliveryRuleConstraintSelectedValue:
    model:
      - delivrio.io/go/schema/fieldjson.DeliveryRuleConstraintSelectedValue
  DeliveryRuleConstraintSelectedValueInput:
    model:
      - delivrio.io/go/schema/fieldjson.DeliveryRuleConstraintSelectedValue
  #NoteAttribute:
  #  model:
  #    - delivrio.io/go/schema/fieldjson.NoteAttribute
