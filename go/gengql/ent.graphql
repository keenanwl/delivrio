directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION
directive @goModel(model: String, models: [String!], forceGenerate: Boolean) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION
type APIToken implements Node {
  id: ID!
  tenantID: ID!
  """
  User supplied name for this token
  """
  name: String!
  createdAt: Time
  lastUsed: Time
  tenant: Tenant!
  user: User!
}
"""
A connection to a list of items.
"""
type APITokenConnection {
  """
  A list of edges.
  """
  edges: [APITokenEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type APITokenEdge {
  """
  The item at the end of the edge.
  """
  node: APIToken
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
APITokenWhereInput is used for filtering APIToken objects.
Input was generated by ent.
"""
input APITokenWhereInput {
  not: APITokenWhereInput
  and: [APITokenWhereInput!]
  or: [APITokenWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  last_used field predicates
  """
  lastUsed: Time
  lastUsedNEQ: Time
  lastUsedIn: [Time!]
  lastUsedNotIn: [Time!]
  lastUsedGT: Time
  lastUsedGTE: Time
  lastUsedLT: Time
  lastUsedLTE: Time
  lastUsedIsNil: Boolean
  lastUsedNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
type AccessRight implements Node {
  id: ID!
  label: String!
  internalID: String!
  assignedAccessRight: [SeatGroup!]
  seatGroupAccessRight: [SeatGroupAccessRight!]
}
"""
A connection to a list of items.
"""
type AccessRightConnection {
  """
  A list of edges.
  """
  edges: [AccessRightEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type AccessRightEdge {
  """
  The item at the end of the edge.
  """
  node: AccessRight
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
AccessRightWhereInput is used for filtering AccessRight objects.
Input was generated by ent.
"""
input AccessRightWhereInput {
  not: AccessRightWhereInput
  and: [AccessRightWhereInput!]
  or: [AccessRightWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  internal_id field predicates
  """
  internalID: String
  internalIDNEQ: String
  internalIDIn: [String!]
  internalIDNotIn: [String!]
  internalIDGT: String
  internalIDGTE: String
  internalIDLT: String
  internalIDLTE: String
  internalIDContains: String
  internalIDHasPrefix: String
  internalIDHasSuffix: String
  internalIDEqualFold: String
  internalIDContainsFold: String
  """
  assigned_access_right edge predicates
  """
  hasAssignedAccessRight: Boolean
  hasAssignedAccessRightWith: [SeatGroupWhereInput!]
  """
  seat_group_access_right edge predicates
  """
  hasSeatGroupAccessRight: Boolean
  hasSeatGroupAccessRightWith: [SeatGroupAccessRightWhereInput!]
}
type Address implements Node {
  id: ID!
  tenantID: ID!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  """
  Some applications have both mobile and generic
  """
  phoneNumber2: String
  """
  Electronic customs
  """
  vatNumber: String
  company: String
  addressOne: String!
  addressTwo: String!
  city: String!
  state: String
  zip: String!
  tenant: Tenant!
  recipientColli: [Colli!]
  recipientConsolidation: Consolidation
  companyAddress: [Tenant!]
  location: [Location!]
  senderColli: [Colli!]
  senderConsolidation: Consolidation
  returnSenderColli: [ReturnColli!]
  returnRecipientColli: [ReturnColli!]
  country: Country!
}
"""
A connection to a list of items.
"""
type AddressConnection {
  """
  A list of edges.
  """
  edges: [AddressEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type AddressEdge {
  """
  The item at the end of the edge.
  """
  node: Address
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type AddressGlobal implements Node {
  id: ID!
  company: String
  addressOne: String!
  addressTwo: String
  city: String!
  state: String
  zip: String!
  latitude: Float!
  longitude: Float!
  parcelShopPostNordDelivery: ParcelShopPostNord
  parcelShopBringDelivery: ParcelShopBring
  parcelShop: ParcelShop
  country: Country!
}
"""
A connection to a list of items.
"""
type AddressGlobalConnection {
  """
  A list of edges.
  """
  edges: [AddressGlobalEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type AddressGlobalEdge {
  """
  The item at the end of the edge.
  """
  node: AddressGlobal
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
AddressGlobalWhereInput is used for filtering AddressGlobal objects.
Input was generated by ent.
"""
input AddressGlobalWhereInput {
  not: AddressGlobalWhereInput
  and: [AddressGlobalWhereInput!]
  or: [AddressGlobalWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  company field predicates
  """
  company: String
  companyNEQ: String
  companyIn: [String!]
  companyNotIn: [String!]
  companyGT: String
  companyGTE: String
  companyLT: String
  companyLTE: String
  companyContains: String
  companyHasPrefix: String
  companyHasSuffix: String
  companyIsNil: Boolean
  companyNotNil: Boolean
  companyEqualFold: String
  companyContainsFold: String
  """
  address_one field predicates
  """
  addressOne: String
  addressOneNEQ: String
  addressOneIn: [String!]
  addressOneNotIn: [String!]
  addressOneGT: String
  addressOneGTE: String
  addressOneLT: String
  addressOneLTE: String
  addressOneContains: String
  addressOneHasPrefix: String
  addressOneHasSuffix: String
  addressOneEqualFold: String
  addressOneContainsFold: String
  """
  address_two field predicates
  """
  addressTwo: String
  addressTwoNEQ: String
  addressTwoIn: [String!]
  addressTwoNotIn: [String!]
  addressTwoGT: String
  addressTwoGTE: String
  addressTwoLT: String
  addressTwoLTE: String
  addressTwoContains: String
  addressTwoHasPrefix: String
  addressTwoHasSuffix: String
  addressTwoIsNil: Boolean
  addressTwoNotNil: Boolean
  addressTwoEqualFold: String
  addressTwoContainsFold: String
  """
  city field predicates
  """
  city: String
  cityNEQ: String
  cityIn: [String!]
  cityNotIn: [String!]
  cityGT: String
  cityGTE: String
  cityLT: String
  cityLTE: String
  cityContains: String
  cityHasPrefix: String
  cityHasSuffix: String
  cityEqualFold: String
  cityContainsFold: String
  """
  state field predicates
  """
  state: String
  stateNEQ: String
  stateIn: [String!]
  stateNotIn: [String!]
  stateGT: String
  stateGTE: String
  stateLT: String
  stateLTE: String
  stateContains: String
  stateHasPrefix: String
  stateHasSuffix: String
  stateIsNil: Boolean
  stateNotNil: Boolean
  stateEqualFold: String
  stateContainsFold: String
  """
  zip field predicates
  """
  zip: String
  zipNEQ: String
  zipIn: [String!]
  zipNotIn: [String!]
  zipGT: String
  zipGTE: String
  zipLT: String
  zipLTE: String
  zipContains: String
  zipHasPrefix: String
  zipHasSuffix: String
  zipEqualFold: String
  zipContainsFold: String
  """
  latitude field predicates
  """
  latitude: Float
  latitudeNEQ: Float
  latitudeIn: [Float!]
  latitudeNotIn: [Float!]
  latitudeGT: Float
  latitudeGTE: Float
  latitudeLT: Float
  latitudeLTE: Float
  """
  longitude field predicates
  """
  longitude: Float
  longitudeNEQ: Float
  longitudeIn: [Float!]
  longitudeNotIn: [Float!]
  longitudeGT: Float
  longitudeGTE: Float
  longitudeLT: Float
  longitudeLTE: Float
  """
  parcel_shop_post_nord_delivery edge predicates
  """
  hasParcelShopPostNordDelivery: Boolean
  hasParcelShopPostNordDeliveryWith: [ParcelShopPostNordWhereInput!]
  """
  parcel_shop_bring_delivery edge predicates
  """
  hasParcelShopBringDelivery: Boolean
  hasParcelShopBringDeliveryWith: [ParcelShopBringWhereInput!]
  """
  parcel_shop edge predicates
  """
  hasParcelShop: Boolean
  hasParcelShopWith: [ParcelShopWhereInput!]
  """
  country edge predicates
  """
  hasCountry: Boolean
  hasCountryWith: [CountryWhereInput!]
}
"""
AddressWhereInput is used for filtering Address objects.
Input was generated by ent.
"""
input AddressWhereInput {
  not: AddressWhereInput
  and: [AddressWhereInput!]
  or: [AddressWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  phone_number field predicates
  """
  phoneNumber: String
  phoneNumberNEQ: String
  phoneNumberIn: [String!]
  phoneNumberNotIn: [String!]
  phoneNumberGT: String
  phoneNumberGTE: String
  phoneNumberLT: String
  phoneNumberLTE: String
  phoneNumberContains: String
  phoneNumberHasPrefix: String
  phoneNumberHasSuffix: String
  phoneNumberEqualFold: String
  phoneNumberContainsFold: String
  """
  phone_number_2 field predicates
  """
  phoneNumber2: String
  phoneNumber2NEQ: String
  phoneNumber2In: [String!]
  phoneNumber2NotIn: [String!]
  phoneNumber2GT: String
  phoneNumber2GTE: String
  phoneNumber2LT: String
  phoneNumber2LTE: String
  phoneNumber2Contains: String
  phoneNumber2HasPrefix: String
  phoneNumber2HasSuffix: String
  phoneNumber2IsNil: Boolean
  phoneNumber2NotNil: Boolean
  phoneNumber2EqualFold: String
  phoneNumber2ContainsFold: String
  """
  vat_number field predicates
  """
  vatNumber: String
  vatNumberNEQ: String
  vatNumberIn: [String!]
  vatNumberNotIn: [String!]
  vatNumberGT: String
  vatNumberGTE: String
  vatNumberLT: String
  vatNumberLTE: String
  vatNumberContains: String
  vatNumberHasPrefix: String
  vatNumberHasSuffix: String
  vatNumberIsNil: Boolean
  vatNumberNotNil: Boolean
  vatNumberEqualFold: String
  vatNumberContainsFold: String
  """
  company field predicates
  """
  company: String
  companyNEQ: String
  companyIn: [String!]
  companyNotIn: [String!]
  companyGT: String
  companyGTE: String
  companyLT: String
  companyLTE: String
  companyContains: String
  companyHasPrefix: String
  companyHasSuffix: String
  companyIsNil: Boolean
  companyNotNil: Boolean
  companyEqualFold: String
  companyContainsFold: String
  """
  address_one field predicates
  """
  addressOne: String
  addressOneNEQ: String
  addressOneIn: [String!]
  addressOneNotIn: [String!]
  addressOneGT: String
  addressOneGTE: String
  addressOneLT: String
  addressOneLTE: String
  addressOneContains: String
  addressOneHasPrefix: String
  addressOneHasSuffix: String
  addressOneEqualFold: String
  addressOneContainsFold: String
  """
  address_two field predicates
  """
  addressTwo: String
  addressTwoNEQ: String
  addressTwoIn: [String!]
  addressTwoNotIn: [String!]
  addressTwoGT: String
  addressTwoGTE: String
  addressTwoLT: String
  addressTwoLTE: String
  addressTwoContains: String
  addressTwoHasPrefix: String
  addressTwoHasSuffix: String
  addressTwoEqualFold: String
  addressTwoContainsFold: String
  """
  city field predicates
  """
  city: String
  cityNEQ: String
  cityIn: [String!]
  cityNotIn: [String!]
  cityGT: String
  cityGTE: String
  cityLT: String
  cityLTE: String
  cityContains: String
  cityHasPrefix: String
  cityHasSuffix: String
  cityEqualFold: String
  cityContainsFold: String
  """
  state field predicates
  """
  state: String
  stateNEQ: String
  stateIn: [String!]
  stateNotIn: [String!]
  stateGT: String
  stateGTE: String
  stateLT: String
  stateLTE: String
  stateContains: String
  stateHasPrefix: String
  stateHasSuffix: String
  stateIsNil: Boolean
  stateNotNil: Boolean
  stateEqualFold: String
  stateContainsFold: String
  """
  zip field predicates
  """
  zip: String
  zipNEQ: String
  zipIn: [String!]
  zipNotIn: [String!]
  zipGT: String
  zipGTE: String
  zipLT: String
  zipLTE: String
  zipContains: String
  zipHasPrefix: String
  zipHasSuffix: String
  zipEqualFold: String
  zipContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  recipient_colli edge predicates
  """
  hasRecipientColli: Boolean
  hasRecipientColliWith: [ColliWhereInput!]
  """
  recipient_consolidation edge predicates
  """
  hasRecipientConsolidation: Boolean
  hasRecipientConsolidationWith: [ConsolidationWhereInput!]
  """
  company_address edge predicates
  """
  hasCompanyAddress: Boolean
  hasCompanyAddressWith: [TenantWhereInput!]
  """
  location edge predicates
  """
  hasLocation: Boolean
  hasLocationWith: [LocationWhereInput!]
  """
  sender_colli edge predicates
  """
  hasSenderColli: Boolean
  hasSenderColliWith: [ColliWhereInput!]
  """
  sender_consolidation edge predicates
  """
  hasSenderConsolidation: Boolean
  hasSenderConsolidationWith: [ConsolidationWhereInput!]
  """
  return_sender_colli edge predicates
  """
  hasReturnSenderColli: Boolean
  hasReturnSenderColliWith: [ReturnColliWhereInput!]
  """
  return_recipient_colli edge predicates
  """
  hasReturnRecipientColli: Boolean
  hasReturnRecipientColliWith: [ReturnColliWhereInput!]
  """
  country edge predicates
  """
  hasCountry: Boolean
  hasCountryWith: [CountryWhereInput!]
}
type BusinessHoursPeriod implements Node {
  id: ID!
  dayOfWeek: BusinessHoursPeriodDayOfWeek!
  opening: Time!
  closing: Time!
  parcelShop: ParcelShop!
}
"""
A connection to a list of items.
"""
type BusinessHoursPeriodConnection {
  """
  A list of edges.
  """
  edges: [BusinessHoursPeriodEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
BusinessHoursPeriodDayOfWeek is enum for the field day_of_week
"""
enum BusinessHoursPeriodDayOfWeek @goModel(model: "delivrio.io/go/ent/businesshoursperiod.DayOfWeek") {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}
"""
An edge in a connection.
"""
type BusinessHoursPeriodEdge {
  """
  The item at the end of the edge.
  """
  node: BusinessHoursPeriod
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
BusinessHoursPeriodWhereInput is used for filtering BusinessHoursPeriod objects.
Input was generated by ent.
"""
input BusinessHoursPeriodWhereInput {
  not: BusinessHoursPeriodWhereInput
  and: [BusinessHoursPeriodWhereInput!]
  or: [BusinessHoursPeriodWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  day_of_week field predicates
  """
  dayOfWeek: BusinessHoursPeriodDayOfWeek
  dayOfWeekNEQ: BusinessHoursPeriodDayOfWeek
  dayOfWeekIn: [BusinessHoursPeriodDayOfWeek!]
  dayOfWeekNotIn: [BusinessHoursPeriodDayOfWeek!]
  """
  opening field predicates
  """
  opening: Time
  openingNEQ: Time
  openingIn: [Time!]
  openingNotIn: [Time!]
  openingGT: Time
  openingGTE: Time
  openingLT: Time
  openingLTE: Time
  """
  closing field predicates
  """
  closing: Time
  closingNEQ: Time
  closingIn: [Time!]
  closingNotIn: [Time!]
  closingGT: Time
  closingGTE: Time
  closingLT: Time
  closingLTE: Time
  """
  parcel_shop edge predicates
  """
  hasParcelShop: Boolean
  hasParcelShopWith: [ParcelShopWhereInput!]
}
type Carrier implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  syncCancelation: Boolean!
  tenant: Tenant!
  carrierBrand: CarrierBrand!
  carrierDAO: CarrierDAO
  carrierDF: CarrierDF
  carrierDSV: CarrierDSV
  carrierEasyPost: CarrierEasyPost
  carrierGLS: CarrierGLS
  carrierPostNord: CarrierPostNord
  carrierUSPS: CarrierUSPS
  carrierBring: CarrierBring
  deliveryOption: [DeliveryOption!]
  shipment: [Shipment!]
}
type CarrierAdditionalServiceBring implements Node {
  id: ID!
  label: String!
  apiCodeBooking: String!
  carrierServiceBring: CarrierServiceBring
  deliveryOptionBring: [DeliveryOptionBring!]
}
"""
A connection to a list of items.
"""
type CarrierAdditionalServiceBringConnection {
  """
  A list of edges.
  """
  edges: [CarrierAdditionalServiceBringEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierAdditionalServiceBringEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierAdditionalServiceBring
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierAdditionalServiceBringWhereInput is used for filtering CarrierAdditionalServiceBring objects.
Input was generated by ent.
"""
input CarrierAdditionalServiceBringWhereInput {
  not: CarrierAdditionalServiceBringWhereInput
  and: [CarrierAdditionalServiceBringWhereInput!]
  or: [CarrierAdditionalServiceBringWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  api_code_booking field predicates
  """
  apiCodeBooking: String
  apiCodeBookingNEQ: String
  apiCodeBookingIn: [String!]
  apiCodeBookingNotIn: [String!]
  apiCodeBookingGT: String
  apiCodeBookingGTE: String
  apiCodeBookingLT: String
  apiCodeBookingLTE: String
  apiCodeBookingContains: String
  apiCodeBookingHasPrefix: String
  apiCodeBookingHasSuffix: String
  apiCodeBookingEqualFold: String
  apiCodeBookingContainsFold: String
  """
  carrier_service_bring edge predicates
  """
  hasCarrierServiceBring: Boolean
  hasCarrierServiceBringWith: [CarrierServiceBringWhereInput!]
  """
  delivery_option_bring edge predicates
  """
  hasDeliveryOptionBring: Boolean
  hasDeliveryOptionBringWith: [DeliveryOptionBringWhereInput!]
}
type CarrierAdditionalServiceDAO implements Node {
  id: ID!
  label: String!
  apiCode: String!
  carrierServiceDAO: [CarrierServiceDAO!]
  deliveryOptionDAO: [DeliveryOptionDAO!]
}
"""
A connection to a list of items.
"""
type CarrierAdditionalServiceDAOConnection {
  """
  A list of edges.
  """
  edges: [CarrierAdditionalServiceDAOEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierAdditionalServiceDAOEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierAdditionalServiceDAO
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierAdditionalServiceDAOWhereInput is used for filtering CarrierAdditionalServiceDAO objects.
Input was generated by ent.
"""
input CarrierAdditionalServiceDAOWhereInput {
  not: CarrierAdditionalServiceDAOWhereInput
  and: [CarrierAdditionalServiceDAOWhereInput!]
  or: [CarrierAdditionalServiceDAOWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  api_code field predicates
  """
  apiCode: String
  apiCodeNEQ: String
  apiCodeIn: [String!]
  apiCodeNotIn: [String!]
  apiCodeGT: String
  apiCodeGTE: String
  apiCodeLT: String
  apiCodeLTE: String
  apiCodeContains: String
  apiCodeHasPrefix: String
  apiCodeHasSuffix: String
  apiCodeEqualFold: String
  apiCodeContainsFold: String
  """
  carrier_service_dao edge predicates
  """
  hasCarrierServiceDAO: Boolean
  hasCarrierServiceDAOWith: [CarrierServiceDAOWhereInput!]
  """
  delivery_option_dao edge predicates
  """
  hasDeliveryOptionDAO: Boolean
  hasDeliveryOptionDAOWith: [DeliveryOptionDAOWhereInput!]
}
type CarrierAdditionalServiceDF implements Node {
  id: ID!
  label: String!
  apiCode: String!
  carrierServiceDF: [CarrierServiceDF!]
  deliveryOptionDF: [DeliveryOptionDF!]
}
"""
A connection to a list of items.
"""
type CarrierAdditionalServiceDFConnection {
  """
  A list of edges.
  """
  edges: [CarrierAdditionalServiceDFEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierAdditionalServiceDFEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierAdditionalServiceDF
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierAdditionalServiceDFWhereInput is used for filtering CarrierAdditionalServiceDF objects.
Input was generated by ent.
"""
input CarrierAdditionalServiceDFWhereInput {
  not: CarrierAdditionalServiceDFWhereInput
  and: [CarrierAdditionalServiceDFWhereInput!]
  or: [CarrierAdditionalServiceDFWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  api_code field predicates
  """
  apiCode: String
  apiCodeNEQ: String
  apiCodeIn: [String!]
  apiCodeNotIn: [String!]
  apiCodeGT: String
  apiCodeGTE: String
  apiCodeLT: String
  apiCodeLTE: String
  apiCodeContains: String
  apiCodeHasPrefix: String
  apiCodeHasSuffix: String
  apiCodeEqualFold: String
  apiCodeContainsFold: String
  """
  carrier_service_df edge predicates
  """
  hasCarrierServiceDF: Boolean
  hasCarrierServiceDFWith: [CarrierServiceDFWhereInput!]
  """
  delivery_option_df edge predicates
  """
  hasDeliveryOptionDF: Boolean
  hasDeliveryOptionDFWith: [DeliveryOptionDFWhereInput!]
}
type CarrierAdditionalServiceDSV implements Node {
  id: ID!
  label: String!
  apiCode: String!
  carrierServiceDSV: [CarrierServiceDSV!]
  deliveryOptionDSV: [DeliveryOptionDSV!]
}
"""
A connection to a list of items.
"""
type CarrierAdditionalServiceDSVConnection {
  """
  A list of edges.
  """
  edges: [CarrierAdditionalServiceDSVEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierAdditionalServiceDSVEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierAdditionalServiceDSV
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierAdditionalServiceDSVWhereInput is used for filtering CarrierAdditionalServiceDSV objects.
Input was generated by ent.
"""
input CarrierAdditionalServiceDSVWhereInput {
  not: CarrierAdditionalServiceDSVWhereInput
  and: [CarrierAdditionalServiceDSVWhereInput!]
  or: [CarrierAdditionalServiceDSVWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  api_code field predicates
  """
  apiCode: String
  apiCodeNEQ: String
  apiCodeIn: [String!]
  apiCodeNotIn: [String!]
  apiCodeGT: String
  apiCodeGTE: String
  apiCodeLT: String
  apiCodeLTE: String
  apiCodeContains: String
  apiCodeHasPrefix: String
  apiCodeHasSuffix: String
  apiCodeEqualFold: String
  apiCodeContainsFold: String
  """
  carrier_service_dsv edge predicates
  """
  hasCarrierServiceDSV: Boolean
  hasCarrierServiceDSVWith: [CarrierServiceDSVWhereInput!]
  """
  delivery_option_dsv edge predicates
  """
  hasDeliveryOptionDSV: Boolean
  hasDeliveryOptionDSVWith: [DeliveryOptionDSVWhereInput!]
}
type CarrierAdditionalServiceEasyPost implements Node {
  id: ID!
  label: String!
  apiKey: String!
  apiValue: String!
  carrierServiceEasyPost: [CarrierServiceEasyPost!]
  deliveryOptionEasyPost: [DeliveryOptionEasyPost!]
}
"""
A connection to a list of items.
"""
type CarrierAdditionalServiceEasyPostConnection {
  """
  A list of edges.
  """
  edges: [CarrierAdditionalServiceEasyPostEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierAdditionalServiceEasyPostEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierAdditionalServiceEasyPost
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierAdditionalServiceEasyPostWhereInput is used for filtering CarrierAdditionalServiceEasyPost objects.
Input was generated by ent.
"""
input CarrierAdditionalServiceEasyPostWhereInput {
  not: CarrierAdditionalServiceEasyPostWhereInput
  and: [CarrierAdditionalServiceEasyPostWhereInput!]
  or: [CarrierAdditionalServiceEasyPostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  api_key field predicates
  """
  apiKey: String
  apiKeyNEQ: String
  apiKeyIn: [String!]
  apiKeyNotIn: [String!]
  apiKeyGT: String
  apiKeyGTE: String
  apiKeyLT: String
  apiKeyLTE: String
  apiKeyContains: String
  apiKeyHasPrefix: String
  apiKeyHasSuffix: String
  apiKeyEqualFold: String
  apiKeyContainsFold: String
  """
  api_value field predicates
  """
  apiValue: String
  apiValueNEQ: String
  apiValueIn: [String!]
  apiValueNotIn: [String!]
  apiValueGT: String
  apiValueGTE: String
  apiValueLT: String
  apiValueLTE: String
  apiValueContains: String
  apiValueHasPrefix: String
  apiValueHasSuffix: String
  apiValueEqualFold: String
  apiValueContainsFold: String
  """
  carrier_service_easy_post edge predicates
  """
  hasCarrierServiceEasyPost: Boolean
  hasCarrierServiceEasyPostWith: [CarrierServiceEasyPostWhereInput!]
  """
  delivery_option_easy_post edge predicates
  """
  hasDeliveryOptionEasyPost: Boolean
  hasDeliveryOptionEasyPostWith: [DeliveryOptionEasyPostWhereInput!]
}
type CarrierAdditionalServiceGLS implements Node {
  id: ID!
  label: String!
  mandatory: Boolean!
  """
  When false, only edge countries will validate on this consignor service
  """
  allCountriesConsignor: Boolean!
  """
  When false, only edge countries will validate on this consignee service
  """
  allCountriesConsignee: Boolean!
  internalID: String!
  carrierServiceGLS: CarrierServiceGLS
  deliveryOptionGLS: [DeliveryOptionGLS!]
  countriesConsignee: [Country!]
  countriesConsignor: [Country!]
}
"""
A connection to a list of items.
"""
type CarrierAdditionalServiceGLSConnection {
  """
  A list of edges.
  """
  edges: [CarrierAdditionalServiceGLSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierAdditionalServiceGLSEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierAdditionalServiceGLS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierAdditionalServiceGLSWhereInput is used for filtering CarrierAdditionalServiceGLS objects.
Input was generated by ent.
"""
input CarrierAdditionalServiceGLSWhereInput {
  not: CarrierAdditionalServiceGLSWhereInput
  and: [CarrierAdditionalServiceGLSWhereInput!]
  or: [CarrierAdditionalServiceGLSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  mandatory field predicates
  """
  mandatory: Boolean
  mandatoryNEQ: Boolean
  """
  all_countries_consignor field predicates
  """
  allCountriesConsignor: Boolean
  allCountriesConsignorNEQ: Boolean
  """
  all_countries_consignee field predicates
  """
  allCountriesConsignee: Boolean
  allCountriesConsigneeNEQ: Boolean
  """
  internal_id field predicates
  """
  internalID: String
  internalIDNEQ: String
  internalIDIn: [String!]
  internalIDNotIn: [String!]
  internalIDGT: String
  internalIDGTE: String
  internalIDLT: String
  internalIDLTE: String
  internalIDContains: String
  internalIDHasPrefix: String
  internalIDHasSuffix: String
  internalIDEqualFold: String
  internalIDContainsFold: String
  """
  carrier_service_gls edge predicates
  """
  hasCarrierServiceGLS: Boolean
  hasCarrierServiceGLSWith: [CarrierServiceGLSWhereInput!]
  """
  delivery_option_gls edge predicates
  """
  hasDeliveryOptionGLS: Boolean
  hasDeliveryOptionGLSWith: [DeliveryOptionGLSWhereInput!]
  """
  countries_consignee edge predicates
  """
  hasCountriesConsignee: Boolean
  hasCountriesConsigneeWith: [CountryWhereInput!]
  """
  countries_consignor edge predicates
  """
  hasCountriesConsignor: Boolean
  hasCountriesConsignorWith: [CountryWhereInput!]
}
type CarrierAdditionalServicePostNord implements Node {
  id: ID!
  label: String!
  mandatory: Boolean!
  """
  When false, only edge countries will validate on this consignor service
  """
  allCountriesConsignor: Boolean!
  """
  When false, only edge countries will validate on this consignee service
  """
  allCountriesConsignee: Boolean!
  internalID: String!
  """
  2 characters code identifying the additional service in the API request
  """
  apiCode: String!
  carrierServicePostNord: CarrierServicePostNord
  deliveryOptionPostNord: [DeliveryOptionPostNord!]
  countriesConsignee: [Country!]
  countriesConsignor: [Country!]
}
"""
A connection to a list of items.
"""
type CarrierAdditionalServicePostNordConnection {
  """
  A list of edges.
  """
  edges: [CarrierAdditionalServicePostNordEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierAdditionalServicePostNordEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierAdditionalServicePostNord
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierAdditionalServicePostNordWhereInput is used for filtering CarrierAdditionalServicePostNord objects.
Input was generated by ent.
"""
input CarrierAdditionalServicePostNordWhereInput {
  not: CarrierAdditionalServicePostNordWhereInput
  and: [CarrierAdditionalServicePostNordWhereInput!]
  or: [CarrierAdditionalServicePostNordWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  mandatory field predicates
  """
  mandatory: Boolean
  mandatoryNEQ: Boolean
  """
  all_countries_consignor field predicates
  """
  allCountriesConsignor: Boolean
  allCountriesConsignorNEQ: Boolean
  """
  all_countries_consignee field predicates
  """
  allCountriesConsignee: Boolean
  allCountriesConsigneeNEQ: Boolean
  """
  internal_id field predicates
  """
  internalID: String
  internalIDNEQ: String
  internalIDIn: [String!]
  internalIDNotIn: [String!]
  internalIDGT: String
  internalIDGTE: String
  internalIDLT: String
  internalIDLTE: String
  internalIDContains: String
  internalIDHasPrefix: String
  internalIDHasSuffix: String
  internalIDEqualFold: String
  internalIDContainsFold: String
  """
  api_code field predicates
  """
  apiCode: String
  apiCodeNEQ: String
  apiCodeIn: [String!]
  apiCodeNotIn: [String!]
  apiCodeGT: String
  apiCodeGTE: String
  apiCodeLT: String
  apiCodeLTE: String
  apiCodeContains: String
  apiCodeHasPrefix: String
  apiCodeHasSuffix: String
  apiCodeEqualFold: String
  apiCodeContainsFold: String
  """
  carrier_service_post_nord edge predicates
  """
  hasCarrierServicePostNord: Boolean
  hasCarrierServicePostNordWith: [CarrierServicePostNordWhereInput!]
  """
  delivery_option_post_nord edge predicates
  """
  hasDeliveryOptionPostNord: Boolean
  hasDeliveryOptionPostNordWith: [DeliveryOptionPostNordWhereInput!]
  """
  countries_consignee edge predicates
  """
  hasCountriesConsignee: Boolean
  hasCountriesConsigneeWith: [CountryWhereInput!]
  """
  countries_consignor edge predicates
  """
  hasCountriesConsignor: Boolean
  hasCountriesConsignorWith: [CountryWhereInput!]
}
type CarrierAdditionalServiceUSPS implements Node {
  id: ID!
  label: String!
  """
  For filtering away rarely used options in the UI
  """
  commonlyUsed: Boolean!
  internalID: CarrierAdditionalServiceUSPSInternalID!
  """
  ServiceID to be included in XML payload
  """
  apiCode: String!
  carrierServiceUSPS: CarrierServiceUSPS
  deliveryOptionUSPS: [DeliveryOptionUSPS!]
}
"""
A connection to a list of items.
"""
type CarrierAdditionalServiceUSPSConnection {
  """
  A list of edges.
  """
  edges: [CarrierAdditionalServiceUSPSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierAdditionalServiceUSPSEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierAdditionalServiceUSPS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierAdditionalServiceUSPSInternalID is enum for the field internal_id
"""
enum CarrierAdditionalServiceUSPSInternalID @goModel(model: "delivrio.io/go/ent/carrieradditionalserviceusps.InternalID") {
  global_direct_entry
  usps_label_delivery_service
  tracking_plus_6_months
  tracking_plus_1_year
  tracking_plus_3_years
  tracking_plus_5_years
  tracking_plus_7_years
  tracking_plus_10_years
  tracking_plus_signature_3_years
  tracking_plus_signature_5_years
  tracking_plus_signature_7_years
  tracking_plus_signature_10_years
  hazardous_materials_air_eligible_ethanol
  hazardous_materials_class_1_toy_propellant
  hazardous_materials_class_3_flammable_and_combustible_liquids
  hazardous_materials_class_7_radioactive_materials
  hazardous_materials_class_8_air_eligible_corrosive_materials
  hazardous_materials_class_8_nonspillable_wet_batteries
  hazardous_materials_class_9_lithium_battery_marked_ground_only
  hazardous_materials_class_9_lithium_battery_returns
  hazardous_materials_class_9_marked_lithium_battery
  hazardous_materials_class_9_dry_ice
  hazardous_materials_class_9_unmarked_lithium_batteries
  hazardous_materials_class_9_magnetized_materials
  hazardous_materials_division_4_1_mailable_flammable_solids_and_safety_matches
  hazardous_materials_division_5_2_organic_peroxides
  hazardous_materials_division_6_1_toxic_materials
  hazardous_materials_division_6_2_biological_materials
  hazardous_materials_excepted_quantity_provision
  hazardous_materials_ground_only_hazardous_materials
  hazardous_materials_air_eligible_id8000_consumer_commodity
  hazardous_materials_lighters
  hazardous_materials_limited_quantity_ground
  hazardous_materials_small_quantity_provision_markings_required
  hazardous_materials
  certified_mail
  certified_mail_restricted_delivery
  certified_mail_adult_signature_required
  certified_mail_adult_signature_restricted_delivery
  usps_tracking_electronic
  signature_confirmation
  adult_signature_required
  adult_signature_restricted_delivery
  signature_confirmation_restricted_delivery
  priority_mail_express_insurance
  insurance
  insurance_restricted_delivery
  return_receipt
  return_receipt_electronic
  signature_requested_priority_mail_express_only
  po_to_addressee_priority_mail_express_only
  sunday_delivery
}
"""
CarrierAdditionalServiceUSPSWhereInput is used for filtering CarrierAdditionalServiceUSPS objects.
Input was generated by ent.
"""
input CarrierAdditionalServiceUSPSWhereInput {
  not: CarrierAdditionalServiceUSPSWhereInput
  and: [CarrierAdditionalServiceUSPSWhereInput!]
  or: [CarrierAdditionalServiceUSPSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  commonly_used field predicates
  """
  commonlyUsed: Boolean
  commonlyUsedNEQ: Boolean
  """
  internal_id field predicates
  """
  internalID: CarrierAdditionalServiceUSPSInternalID
  internalIDNEQ: CarrierAdditionalServiceUSPSInternalID
  internalIDIn: [CarrierAdditionalServiceUSPSInternalID!]
  internalIDNotIn: [CarrierAdditionalServiceUSPSInternalID!]
  """
  api_code field predicates
  """
  apiCode: String
  apiCodeNEQ: String
  apiCodeIn: [String!]
  apiCodeNotIn: [String!]
  apiCodeGT: String
  apiCodeGTE: String
  apiCodeLT: String
  apiCodeLTE: String
  apiCodeContains: String
  apiCodeHasPrefix: String
  apiCodeHasSuffix: String
  apiCodeEqualFold: String
  apiCodeContainsFold: String
  """
  carrier_service_usps edge predicates
  """
  hasCarrierServiceUSPS: Boolean
  hasCarrierServiceUSPSWith: [CarrierServiceUSPSWhereInput!]
  """
  delivery_option_usps edge predicates
  """
  hasDeliveryOptionUSPS: Boolean
  hasDeliveryOptionUSPSWith: [DeliveryOptionUSPSWhereInput!]
}
type CarrierBrand implements Node {
  id: ID!
  label: String!
  """
  Accommodation for PostNord to become PN
  """
  labelShort: String!
  internalID: CarrierBrandInternalID!
  logoURL: String
  textColor: String
  backgroundColor: String
  carrierService: [CarrierService!]
  carrier: [Carrier!]
  parcelShop: [ParcelShop!]
  packaging: [Packaging!]
  document: [Document!]
}
"""
A connection to a list of items.
"""
type CarrierBrandConnection {
  """
  A list of edges.
  """
  edges: [CarrierBrandEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierBrandEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierBrand
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierBrandInternalID is enum for the field internal_id
"""
enum CarrierBrandInternalID @goModel(model: "delivrio.io/go/ent/carrierbrand.InternalID") {
  bring
  dao
  df
  dsv
  easy_post
  gls
  dhl
  post_nord
  usps
}
"""
CarrierBrandWhereInput is used for filtering CarrierBrand objects.
Input was generated by ent.
"""
input CarrierBrandWhereInput {
  not: CarrierBrandWhereInput
  and: [CarrierBrandWhereInput!]
  or: [CarrierBrandWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  label_short field predicates
  """
  labelShort: String
  labelShortNEQ: String
  labelShortIn: [String!]
  labelShortNotIn: [String!]
  labelShortGT: String
  labelShortGTE: String
  labelShortLT: String
  labelShortLTE: String
  labelShortContains: String
  labelShortHasPrefix: String
  labelShortHasSuffix: String
  labelShortEqualFold: String
  labelShortContainsFold: String
  """
  internal_id field predicates
  """
  internalID: CarrierBrandInternalID
  internalIDNEQ: CarrierBrandInternalID
  internalIDIn: [CarrierBrandInternalID!]
  internalIDNotIn: [CarrierBrandInternalID!]
  """
  logo_url field predicates
  """
  logoURL: String
  logoURLNEQ: String
  logoURLIn: [String!]
  logoURLNotIn: [String!]
  logoURLGT: String
  logoURLGTE: String
  logoURLLT: String
  logoURLLTE: String
  logoURLContains: String
  logoURLHasPrefix: String
  logoURLHasSuffix: String
  logoURLIsNil: Boolean
  logoURLNotNil: Boolean
  logoURLEqualFold: String
  logoURLContainsFold: String
  """
  text_color field predicates
  """
  textColor: String
  textColorNEQ: String
  textColorIn: [String!]
  textColorNotIn: [String!]
  textColorGT: String
  textColorGTE: String
  textColorLT: String
  textColorLTE: String
  textColorContains: String
  textColorHasPrefix: String
  textColorHasSuffix: String
  textColorIsNil: Boolean
  textColorNotNil: Boolean
  textColorEqualFold: String
  textColorContainsFold: String
  """
  background_color field predicates
  """
  backgroundColor: String
  backgroundColorNEQ: String
  backgroundColorIn: [String!]
  backgroundColorNotIn: [String!]
  backgroundColorGT: String
  backgroundColorGTE: String
  backgroundColorLT: String
  backgroundColorLTE: String
  backgroundColorContains: String
  backgroundColorHasPrefix: String
  backgroundColorHasSuffix: String
  backgroundColorIsNil: Boolean
  backgroundColorNotNil: Boolean
  backgroundColorEqualFold: String
  backgroundColorContainsFold: String
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
  """
  parcel_shop edge predicates
  """
  hasParcelShop: Boolean
  hasParcelShopWith: [ParcelShopWhereInput!]
  """
  packaging edge predicates
  """
  hasPackaging: Boolean
  hasPackagingWith: [PackagingWhereInput!]
  """
  document edge predicates
  """
  hasDocument: Boolean
  hasDocumentWith: [DocumentWhereInput!]
}
type CarrierBring implements Node {
  id: ID!
  tenantID: ID!
  apiKey: String
  customerNumber: String
  test: Boolean!
  tenant: Tenant!
  carrier: Carrier!
}
"""
A connection to a list of items.
"""
type CarrierBringConnection {
  """
  A list of edges.
  """
  edges: [CarrierBringEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierBringEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierBring
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierBringWhereInput is used for filtering CarrierBring objects.
Input was generated by ent.
"""
input CarrierBringWhereInput {
  not: CarrierBringWhereInput
  and: [CarrierBringWhereInput!]
  or: [CarrierBringWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  api_key field predicates
  """
  apiKey: String
  apiKeyNEQ: String
  apiKeyIn: [String!]
  apiKeyNotIn: [String!]
  apiKeyGT: String
  apiKeyGTE: String
  apiKeyLT: String
  apiKeyLTE: String
  apiKeyContains: String
  apiKeyHasPrefix: String
  apiKeyHasSuffix: String
  apiKeyIsNil: Boolean
  apiKeyNotNil: Boolean
  apiKeyEqualFold: String
  apiKeyContainsFold: String
  """
  customer_number field predicates
  """
  customerNumber: String
  customerNumberNEQ: String
  customerNumberIn: [String!]
  customerNumberNotIn: [String!]
  customerNumberGT: String
  customerNumberGTE: String
  customerNumberLT: String
  customerNumberLTE: String
  customerNumberContains: String
  customerNumberHasPrefix: String
  customerNumberHasSuffix: String
  customerNumberIsNil: Boolean
  customerNumberNotNil: Boolean
  customerNumberEqualFold: String
  customerNumberContainsFold: String
  """
  test field predicates
  """
  test: Boolean
  testNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
}
"""
A connection to a list of items.
"""
type CarrierConnection {
  """
  A list of edges.
  """
  edges: [CarrierEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
type CarrierDAO implements Node {
  id: ID!
  tenantID: ID!
  customerID: String
  apiKey: String
  test: Boolean!
  tenant: Tenant!
  carrier: Carrier!
}
"""
A connection to a list of items.
"""
type CarrierDAOConnection {
  """
  A list of edges.
  """
  edges: [CarrierDAOEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierDAOEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierDAO
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierDAOWhereInput is used for filtering CarrierDAO objects.
Input was generated by ent.
"""
input CarrierDAOWhereInput {
  not: CarrierDAOWhereInput
  and: [CarrierDAOWhereInput!]
  or: [CarrierDAOWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  customer_id field predicates
  """
  customerID: String
  customerIDNEQ: String
  customerIDIn: [String!]
  customerIDNotIn: [String!]
  customerIDGT: String
  customerIDGTE: String
  customerIDLT: String
  customerIDLTE: String
  customerIDContains: String
  customerIDHasPrefix: String
  customerIDHasSuffix: String
  customerIDIsNil: Boolean
  customerIDNotNil: Boolean
  customerIDEqualFold: String
  customerIDContainsFold: String
  """
  api_key field predicates
  """
  apiKey: String
  apiKeyNEQ: String
  apiKeyIn: [String!]
  apiKeyNotIn: [String!]
  apiKeyGT: String
  apiKeyGTE: String
  apiKeyLT: String
  apiKeyLTE: String
  apiKeyContains: String
  apiKeyHasPrefix: String
  apiKeyHasSuffix: String
  apiKeyIsNil: Boolean
  apiKeyNotNil: Boolean
  apiKeyEqualFold: String
  apiKeyContainsFold: String
  """
  Test field predicates
  """
  test: Boolean
  testNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
}
type CarrierDF implements Node {
  id: ID!
  tenantID: ID!
  customerID: String!
  agreementNumber: String!
  whoPays: CarrierDFWhoPays!
  test: Boolean!
  tenant: Tenant!
  carrier: Carrier!
}
"""
A connection to a list of items.
"""
type CarrierDFConnection {
  """
  A list of edges.
  """
  edges: [CarrierDFEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierDFEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierDF
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierDFWhereInput is used for filtering CarrierDF objects.
Input was generated by ent.
"""
input CarrierDFWhereInput {
  not: CarrierDFWhereInput
  and: [CarrierDFWhereInput!]
  or: [CarrierDFWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  customer_id field predicates
  """
  customerID: String
  customerIDNEQ: String
  customerIDIn: [String!]
  customerIDNotIn: [String!]
  customerIDGT: String
  customerIDGTE: String
  customerIDLT: String
  customerIDLTE: String
  customerIDContains: String
  customerIDHasPrefix: String
  customerIDHasSuffix: String
  customerIDEqualFold: String
  customerIDContainsFold: String
  """
  agreement_number field predicates
  """
  agreementNumber: String
  agreementNumberNEQ: String
  agreementNumberIn: [String!]
  agreementNumberNotIn: [String!]
  agreementNumberGT: String
  agreementNumberGTE: String
  agreementNumberLT: String
  agreementNumberLTE: String
  agreementNumberContains: String
  agreementNumberHasPrefix: String
  agreementNumberHasSuffix: String
  agreementNumberEqualFold: String
  agreementNumberContainsFold: String
  """
  who_pays field predicates
  """
  whoPays: CarrierDFWhoPays
  whoPaysNEQ: CarrierDFWhoPays
  whoPaysIn: [CarrierDFWhoPays!]
  whoPaysNotIn: [CarrierDFWhoPays!]
  """
  test field predicates
  """
  test: Boolean
  testNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
}
"""
CarrierDFWhoPays is enum for the field who_pays
"""
enum CarrierDFWhoPays @goModel(model: "delivrio.io/go/ent/carrierdf.WhoPays") {
  Prepaid
  Collect
}
type CarrierDSV implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  carrier: Carrier!
}
"""
A connection to a list of items.
"""
type CarrierDSVConnection {
  """
  A list of edges.
  """
  edges: [CarrierDSVEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierDSVEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierDSV
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierDSVWhereInput is used for filtering CarrierDSV objects.
Input was generated by ent.
"""
input CarrierDSVWhereInput {
  not: CarrierDSVWhereInput
  and: [CarrierDSVWhereInput!]
  or: [CarrierDSVWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
}
type CarrierEasyPost implements Node {
  id: ID!
  tenantID: ID!
  apiKey: String!
  test: Boolean!
  """
  When > 1, then we use rate, then buy. =1 one-call buy. Former not implemented in first round.
  """
  carrierAccounts: [String!]!
  tenant: Tenant!
  carrier: Carrier!
}
"""
A connection to a list of items.
"""
type CarrierEasyPostConnection {
  """
  A list of edges.
  """
  edges: [CarrierEasyPostEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierEasyPostEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierEasyPost
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierEasyPostWhereInput is used for filtering CarrierEasyPost objects.
Input was generated by ent.
"""
input CarrierEasyPostWhereInput {
  not: CarrierEasyPostWhereInput
  and: [CarrierEasyPostWhereInput!]
  or: [CarrierEasyPostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  api_key field predicates
  """
  apiKey: String
  apiKeyNEQ: String
  apiKeyIn: [String!]
  apiKeyNotIn: [String!]
  apiKeyGT: String
  apiKeyGTE: String
  apiKeyLT: String
  apiKeyLTE: String
  apiKeyContains: String
  apiKeyHasPrefix: String
  apiKeyHasSuffix: String
  apiKeyEqualFold: String
  apiKeyContainsFold: String
  """
  test field predicates
  """
  test: Boolean
  testNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
}
"""
An edge in a connection.
"""
type CarrierEdge {
  """
  The item at the end of the edge.
  """
  node: Carrier
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type CarrierGLS implements Node {
  id: ID!
  tenantID: ID!
  contactID: String
  glsUsername: String
  glsPassword: String
  customerID: String
  glsCountryCode: String
  syncShipmentCancellation: Boolean
  printErrorOnLabel: Boolean
  tenant: Tenant!
  carrier: Carrier!
}
"""
A connection to a list of items.
"""
type CarrierGLSConnection {
  """
  A list of edges.
  """
  edges: [CarrierGLSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierGLSEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierGLS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierGLSWhereInput is used for filtering CarrierGLS objects.
Input was generated by ent.
"""
input CarrierGLSWhereInput {
  not: CarrierGLSWhereInput
  and: [CarrierGLSWhereInput!]
  or: [CarrierGLSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  contact_id field predicates
  """
  contactID: String
  contactIDNEQ: String
  contactIDIn: [String!]
  contactIDNotIn: [String!]
  contactIDGT: String
  contactIDGTE: String
  contactIDLT: String
  contactIDLTE: String
  contactIDContains: String
  contactIDHasPrefix: String
  contactIDHasSuffix: String
  contactIDIsNil: Boolean
  contactIDNotNil: Boolean
  contactIDEqualFold: String
  contactIDContainsFold: String
  """
  gls_username field predicates
  """
  glsUsername: String
  glsUsernameNEQ: String
  glsUsernameIn: [String!]
  glsUsernameNotIn: [String!]
  glsUsernameGT: String
  glsUsernameGTE: String
  glsUsernameLT: String
  glsUsernameLTE: String
  glsUsernameContains: String
  glsUsernameHasPrefix: String
  glsUsernameHasSuffix: String
  glsUsernameIsNil: Boolean
  glsUsernameNotNil: Boolean
  glsUsernameEqualFold: String
  glsUsernameContainsFold: String
  """
  gls_password field predicates
  """
  glsPassword: String
  glsPasswordNEQ: String
  glsPasswordIn: [String!]
  glsPasswordNotIn: [String!]
  glsPasswordGT: String
  glsPasswordGTE: String
  glsPasswordLT: String
  glsPasswordLTE: String
  glsPasswordContains: String
  glsPasswordHasPrefix: String
  glsPasswordHasSuffix: String
  glsPasswordIsNil: Boolean
  glsPasswordNotNil: Boolean
  glsPasswordEqualFold: String
  glsPasswordContainsFold: String
  """
  customer_id field predicates
  """
  customerID: String
  customerIDNEQ: String
  customerIDIn: [String!]
  customerIDNotIn: [String!]
  customerIDGT: String
  customerIDGTE: String
  customerIDLT: String
  customerIDLTE: String
  customerIDContains: String
  customerIDHasPrefix: String
  customerIDHasSuffix: String
  customerIDIsNil: Boolean
  customerIDNotNil: Boolean
  customerIDEqualFold: String
  customerIDContainsFold: String
  """
  gls_country_code field predicates
  """
  glsCountryCode: String
  glsCountryCodeNEQ: String
  glsCountryCodeIn: [String!]
  glsCountryCodeNotIn: [String!]
  glsCountryCodeGT: String
  glsCountryCodeGTE: String
  glsCountryCodeLT: String
  glsCountryCodeLTE: String
  glsCountryCodeContains: String
  glsCountryCodeHasPrefix: String
  glsCountryCodeHasSuffix: String
  glsCountryCodeIsNil: Boolean
  glsCountryCodeNotNil: Boolean
  glsCountryCodeEqualFold: String
  glsCountryCodeContainsFold: String
  """
  sync_shipment_cancellation field predicates
  """
  syncShipmentCancellation: Boolean
  syncShipmentCancellationNEQ: Boolean
  syncShipmentCancellationIsNil: Boolean
  syncShipmentCancellationNotNil: Boolean
  """
  print_error_on_label field predicates
  """
  printErrorOnLabel: Boolean
  printErrorOnLabelNEQ: Boolean
  printErrorOnLabelIsNil: Boolean
  printErrorOnLabelNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
}
type CarrierPostNord implements Node {
  id: ID!
  tenantID: ID!
  """
  Default empty to allow creation from dialog with followup editing
  """
  customerNumber: String!
  tenant: Tenant!
  carrier: Carrier!
}
"""
A connection to a list of items.
"""
type CarrierPostNordConnection {
  """
  A list of edges.
  """
  edges: [CarrierPostNordEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierPostNordEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierPostNord
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierPostNordWhereInput is used for filtering CarrierPostNord objects.
Input was generated by ent.
"""
input CarrierPostNordWhereInput {
  not: CarrierPostNordWhereInput
  and: [CarrierPostNordWhereInput!]
  or: [CarrierPostNordWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  customer_number field predicates
  """
  customerNumber: String
  customerNumberNEQ: String
  customerNumberIn: [String!]
  customerNumberNotIn: [String!]
  customerNumberGT: String
  customerNumberGTE: String
  customerNumberLT: String
  customerNumberLTE: String
  customerNumberContains: String
  customerNumberHasPrefix: String
  customerNumberHasSuffix: String
  customerNumberEqualFold: String
  customerNumberContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
}
type CarrierService implements Node {
  id: ID!
  label: String!
  internalID: String!
  return: Boolean!
  consolidation: Boolean!
  deliveryPointOptional: Boolean!
  deliveryPointRequired: Boolean!
  carrierServicePostNord: CarrierServicePostNord
  carrierServiceDAO: CarrierServiceDAO
  carrierServiceDF: CarrierServiceDF
  carrierServiceDSV: CarrierServiceDSV
  carrierServEasyPost: CarrierServiceEasyPost
  carrierServiceGLS: CarrierServiceGLS
  carrierServiceUSPS: CarrierServiceUSPS
  carrierServiceBring: CarrierServiceBring
  carrierBrand: CarrierBrand!
  deliveryOption: [DeliveryOption!]
}
type CarrierServiceBring implements Node {
  id: ID!
  apiServiceCode: String!
  apiRequest: String!
  carrierService: CarrierService!
  carrierAdditionalServiceBring: [CarrierAdditionalServiceBring!]
}
"""
A connection to a list of items.
"""
type CarrierServiceBringConnection {
  """
  A list of edges.
  """
  edges: [CarrierServiceBringEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierServiceBringEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierServiceBring
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierServiceBringWhereInput is used for filtering CarrierServiceBring objects.
Input was generated by ent.
"""
input CarrierServiceBringWhereInput {
  not: CarrierServiceBringWhereInput
  and: [CarrierServiceBringWhereInput!]
  or: [CarrierServiceBringWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  api_service_code field predicates
  """
  apiServiceCode: String
  apiServiceCodeNEQ: String
  apiServiceCodeIn: [String!]
  apiServiceCodeNotIn: [String!]
  apiServiceCodeGT: String
  apiServiceCodeGTE: String
  apiServiceCodeLT: String
  apiServiceCodeLTE: String
  apiServiceCodeContains: String
  apiServiceCodeHasPrefix: String
  apiServiceCodeHasSuffix: String
  apiServiceCodeEqualFold: String
  apiServiceCodeContainsFold: String
  """
  api_request field predicates
  """
  apiRequest: String
  apiRequestNEQ: String
  apiRequestIn: [String!]
  apiRequestNotIn: [String!]
  apiRequestGT: String
  apiRequestGTE: String
  apiRequestLT: String
  apiRequestLTE: String
  apiRequestContains: String
  apiRequestHasPrefix: String
  apiRequestHasSuffix: String
  apiRequestEqualFold: String
  apiRequestContainsFold: String
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier_additional_service_bring edge predicates
  """
  hasCarrierAdditionalServiceBring: Boolean
  hasCarrierAdditionalServiceBringWith: [CarrierAdditionalServiceBringWhereInput!]
}
"""
A connection to a list of items.
"""
type CarrierServiceConnection {
  """
  A list of edges.
  """
  edges: [CarrierServiceEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
type CarrierServiceDAO implements Node {
  id: ID!
  carrierService: CarrierService!
  carrierAdditionalServiceDAO: [CarrierAdditionalServiceDAO!]
}
"""
A connection to a list of items.
"""
type CarrierServiceDAOConnection {
  """
  A list of edges.
  """
  edges: [CarrierServiceDAOEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierServiceDAOEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierServiceDAO
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierServiceDAOWhereInput is used for filtering CarrierServiceDAO objects.
Input was generated by ent.
"""
input CarrierServiceDAOWhereInput {
  not: CarrierServiceDAOWhereInput
  and: [CarrierServiceDAOWhereInput!]
  or: [CarrierServiceDAOWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier_additional_service_dao edge predicates
  """
  hasCarrierAdditionalServiceDAO: Boolean
  hasCarrierAdditionalServiceDAOWith: [CarrierAdditionalServiceDAOWhereInput!]
}
type CarrierServiceDF implements Node {
  id: ID!
  carrierService: CarrierService!
  carrierAdditionalServiceDF: [CarrierAdditionalServiceDF!]
}
"""
A connection to a list of items.
"""
type CarrierServiceDFConnection {
  """
  A list of edges.
  """
  edges: [CarrierServiceDFEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierServiceDFEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierServiceDF
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierServiceDFWhereInput is used for filtering CarrierServiceDF objects.
Input was generated by ent.
"""
input CarrierServiceDFWhereInput {
  not: CarrierServiceDFWhereInput
  and: [CarrierServiceDFWhereInput!]
  or: [CarrierServiceDFWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier_additional_service_df edge predicates
  """
  hasCarrierAdditionalServiceDF: Boolean
  hasCarrierAdditionalServiceDFWith: [CarrierAdditionalServiceDFWhereInput!]
}
type CarrierServiceDSV implements Node {
  id: ID!
  carrierService: CarrierService!
  carrierAdditionalServiceDSV: [CarrierAdditionalServiceDSV!]
}
"""
A connection to a list of items.
"""
type CarrierServiceDSVConnection {
  """
  A list of edges.
  """
  edges: [CarrierServiceDSVEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierServiceDSVEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierServiceDSV
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierServiceDSVWhereInput is used for filtering CarrierServiceDSV objects.
Input was generated by ent.
"""
input CarrierServiceDSVWhereInput {
  not: CarrierServiceDSVWhereInput
  and: [CarrierServiceDSVWhereInput!]
  or: [CarrierServiceDSVWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier_additional_service_dsv edge predicates
  """
  hasCarrierAdditionalServiceDSV: Boolean
  hasCarrierAdditionalServiceDSVWith: [CarrierAdditionalServiceDSVWhereInput!]
}
type CarrierServiceEasyPost implements Node {
  id: ID!
  carrierService: CarrierService!
  carrierAddServEasyPost: [CarrierAdditionalServiceEasyPost!]
}
"""
CarrierServiceEasyPostWhereInput is used for filtering CarrierServiceEasyPost objects.
Input was generated by ent.
"""
input CarrierServiceEasyPostWhereInput {
  not: CarrierServiceEasyPostWhereInput
  and: [CarrierServiceEasyPostWhereInput!]
  or: [CarrierServiceEasyPostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier_add_serv_easy_post edge predicates
  """
  hasCarrierAddServEasyPost: Boolean
  hasCarrierAddServEasyPostWith: [CarrierAdditionalServiceEasyPostWhereInput!]
}
"""
An edge in a connection.
"""
type CarrierServiceEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierService
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type CarrierServiceGLS implements Node {
  id: ID!
  apiKey: String
  apiValue: CarrierServiceGLSAPIValue!
  carrierService: CarrierService!
  carrierAdditionalServiceGLS: [CarrierAdditionalServiceGLS!]
}
"""
CarrierServiceGLSAPIValue is enum for the field api_value
"""
enum CarrierServiceGLSAPIValue @goModel(model: "delivrio.io/go/ent/carrierservicegls.APIValue") {
  Y
  numeric_string
  none
}
"""
CarrierServiceGLSWhereInput is used for filtering CarrierServiceGLS objects.
Input was generated by ent.
"""
input CarrierServiceGLSWhereInput {
  not: CarrierServiceGLSWhereInput
  and: [CarrierServiceGLSWhereInput!]
  or: [CarrierServiceGLSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  api_key field predicates
  """
  apiKey: String
  apiKeyNEQ: String
  apiKeyIn: [String!]
  apiKeyNotIn: [String!]
  apiKeyGT: String
  apiKeyGTE: String
  apiKeyLT: String
  apiKeyLTE: String
  apiKeyContains: String
  apiKeyHasPrefix: String
  apiKeyHasSuffix: String
  apiKeyIsNil: Boolean
  apiKeyNotNil: Boolean
  apiKeyEqualFold: String
  apiKeyContainsFold: String
  """
  api_value field predicates
  """
  apiValue: CarrierServiceGLSAPIValue
  apiValueNEQ: CarrierServiceGLSAPIValue
  apiValueIn: [CarrierServiceGLSAPIValue!]
  apiValueNotIn: [CarrierServiceGLSAPIValue!]
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier_additional_service_gls edge predicates
  """
  hasCarrierAdditionalServiceGLS: Boolean
  hasCarrierAdditionalServiceGLSWith: [CarrierAdditionalServiceGLSWhereInput!]
}
type CarrierServicePostNord implements Node {
  id: ID!
  label: String!
  internalID: String!
  apiCode: String!
  carrierService: CarrierService!
  carrierAddServPostNord: [CarrierAdditionalServicePostNord!]
}
"""
CarrierServicePostNordWhereInput is used for filtering CarrierServicePostNord objects.
Input was generated by ent.
"""
input CarrierServicePostNordWhereInput {
  not: CarrierServicePostNordWhereInput
  and: [CarrierServicePostNordWhereInput!]
  or: [CarrierServicePostNordWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  internal_id field predicates
  """
  internalID: String
  internalIDNEQ: String
  internalIDIn: [String!]
  internalIDNotIn: [String!]
  internalIDGT: String
  internalIDGTE: String
  internalIDLT: String
  internalIDLTE: String
  internalIDContains: String
  internalIDHasPrefix: String
  internalIDHasSuffix: String
  internalIDEqualFold: String
  internalIDContainsFold: String
  """
  api_code field predicates
  """
  apiCode: String
  apiCodeNEQ: String
  apiCodeIn: [String!]
  apiCodeNotIn: [String!]
  apiCodeGT: String
  apiCodeGTE: String
  apiCodeLT: String
  apiCodeLTE: String
  apiCodeContains: String
  apiCodeHasPrefix: String
  apiCodeHasSuffix: String
  apiCodeEqualFold: String
  apiCodeContainsFold: String
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier_add_serv_post_nord edge predicates
  """
  hasCarrierAddServPostNord: Boolean
  hasCarrierAddServPostNordWith: [CarrierAdditionalServicePostNordWhereInput!]
}
type CarrierServiceUSPS implements Node {
  id: ID!
  carrierService: CarrierService!
  carrierAdditionalServiceUSPS: [CarrierAdditionalServiceUSPS!]
}
"""
CarrierServiceUSPSWhereInput is used for filtering CarrierServiceUSPS objects.
Input was generated by ent.
"""
input CarrierServiceUSPSWhereInput {
  not: CarrierServiceUSPSWhereInput
  and: [CarrierServiceUSPSWhereInput!]
  or: [CarrierServiceUSPSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  carrier_additional_service_usps edge predicates
  """
  hasCarrierAdditionalServiceUSPS: Boolean
  hasCarrierAdditionalServiceUSPSWith: [CarrierAdditionalServiceUSPSWhereInput!]
}
"""
CarrierServiceWhereInput is used for filtering CarrierService objects.
Input was generated by ent.
"""
input CarrierServiceWhereInput {
  not: CarrierServiceWhereInput
  and: [CarrierServiceWhereInput!]
  or: [CarrierServiceWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  internal_id field predicates
  """
  internalID: String
  internalIDNEQ: String
  internalIDIn: [String!]
  internalIDNotIn: [String!]
  internalIDGT: String
  internalIDGTE: String
  internalIDLT: String
  internalIDLTE: String
  internalIDContains: String
  internalIDHasPrefix: String
  internalIDHasSuffix: String
  internalIDEqualFold: String
  internalIDContainsFold: String
  """
  return field predicates
  """
  return: Boolean
  returnNEQ: Boolean
  """
  consolidation field predicates
  """
  consolidation: Boolean
  consolidationNEQ: Boolean
  """
  delivery_point_optional field predicates
  """
  deliveryPointOptional: Boolean
  deliveryPointOptionalNEQ: Boolean
  """
  delivery_point_required field predicates
  """
  deliveryPointRequired: Boolean
  deliveryPointRequiredNEQ: Boolean
  """
  carrier_service_post_nord edge predicates
  """
  hasCarrierServicePostNord: Boolean
  hasCarrierServicePostNordWith: [CarrierServicePostNordWhereInput!]
  """
  carrier_service_dao edge predicates
  """
  hasCarrierServiceDAO: Boolean
  hasCarrierServiceDAOWith: [CarrierServiceDAOWhereInput!]
  """
  carrier_service_df edge predicates
  """
  hasCarrierServiceDF: Boolean
  hasCarrierServiceDFWith: [CarrierServiceDFWhereInput!]
  """
  carrier_service_dsv edge predicates
  """
  hasCarrierServiceDSV: Boolean
  hasCarrierServiceDSVWith: [CarrierServiceDSVWhereInput!]
  """
  carrier_serv_easy_post edge predicates
  """
  hasCarrierServEasyPost: Boolean
  hasCarrierServEasyPostWith: [CarrierServiceEasyPostWhereInput!]
  """
  carrier_service_gls edge predicates
  """
  hasCarrierServiceGLS: Boolean
  hasCarrierServiceGLSWith: [CarrierServiceGLSWhereInput!]
  """
  carrier_service_usps edge predicates
  """
  hasCarrierServiceUSPS: Boolean
  hasCarrierServiceUSPSWith: [CarrierServiceUSPSWhereInput!]
  """
  carrier_service_bring edge predicates
  """
  hasCarrierServiceBring: Boolean
  hasCarrierServiceBringWith: [CarrierServiceBringWhereInput!]
  """
  carrier_brand edge predicates
  """
  hasCarrierBrand: Boolean
  hasCarrierBrandWith: [CarrierBrandWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
}
type CarrierUSPS implements Node {
  id: ID!
  tenantID: ID!
  isTestAPI: Boolean!
  consumerKey: String
  consumerSecret: String
  mid: String
  manifestMid: String
  crid: String
  epsAccountNumber: String
  tenant: Tenant!
  carrier: Carrier!
}
"""
A connection to a list of items.
"""
type CarrierUSPSConnection {
  """
  A list of edges.
  """
  edges: [CarrierUSPSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CarrierUSPSEdge {
  """
  The item at the end of the edge.
  """
  node: CarrierUSPS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CarrierUSPSWhereInput is used for filtering CarrierUSPS objects.
Input was generated by ent.
"""
input CarrierUSPSWhereInput {
  not: CarrierUSPSWhereInput
  and: [CarrierUSPSWhereInput!]
  or: [CarrierUSPSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  is_test_api field predicates
  """
  isTestAPI: Boolean
  isTestAPINEQ: Boolean
  """
  consumer_key field predicates
  """
  consumerKey: String
  consumerKeyNEQ: String
  consumerKeyIn: [String!]
  consumerKeyNotIn: [String!]
  consumerKeyGT: String
  consumerKeyGTE: String
  consumerKeyLT: String
  consumerKeyLTE: String
  consumerKeyContains: String
  consumerKeyHasPrefix: String
  consumerKeyHasSuffix: String
  consumerKeyIsNil: Boolean
  consumerKeyNotNil: Boolean
  consumerKeyEqualFold: String
  consumerKeyContainsFold: String
  """
  consumer_secret field predicates
  """
  consumerSecret: String
  consumerSecretNEQ: String
  consumerSecretIn: [String!]
  consumerSecretNotIn: [String!]
  consumerSecretGT: String
  consumerSecretGTE: String
  consumerSecretLT: String
  consumerSecretLTE: String
  consumerSecretContains: String
  consumerSecretHasPrefix: String
  consumerSecretHasSuffix: String
  consumerSecretIsNil: Boolean
  consumerSecretNotNil: Boolean
  consumerSecretEqualFold: String
  consumerSecretContainsFold: String
  """
  mid field predicates
  """
  mid: String
  midNEQ: String
  midIn: [String!]
  midNotIn: [String!]
  midGT: String
  midGTE: String
  midLT: String
  midLTE: String
  midContains: String
  midHasPrefix: String
  midHasSuffix: String
  midIsNil: Boolean
  midNotNil: Boolean
  midEqualFold: String
  midContainsFold: String
  """
  manifest_mid field predicates
  """
  manifestMid: String
  manifestMidNEQ: String
  manifestMidIn: [String!]
  manifestMidNotIn: [String!]
  manifestMidGT: String
  manifestMidGTE: String
  manifestMidLT: String
  manifestMidLTE: String
  manifestMidContains: String
  manifestMidHasPrefix: String
  manifestMidHasSuffix: String
  manifestMidIsNil: Boolean
  manifestMidNotNil: Boolean
  manifestMidEqualFold: String
  manifestMidContainsFold: String
  """
  crid field predicates
  """
  crid: String
  cridNEQ: String
  cridIn: [String!]
  cridNotIn: [String!]
  cridGT: String
  cridGTE: String
  cridLT: String
  cridLTE: String
  cridContains: String
  cridHasPrefix: String
  cridHasSuffix: String
  cridIsNil: Boolean
  cridNotNil: Boolean
  cridEqualFold: String
  cridContainsFold: String
  """
  eps_account_number field predicates
  """
  epsAccountNumber: String
  epsAccountNumberNEQ: String
  epsAccountNumberIn: [String!]
  epsAccountNumberNotIn: [String!]
  epsAccountNumberGT: String
  epsAccountNumberGTE: String
  epsAccountNumberLT: String
  epsAccountNumberLTE: String
  epsAccountNumberContains: String
  epsAccountNumberHasPrefix: String
  epsAccountNumberHasSuffix: String
  epsAccountNumberIsNil: Boolean
  epsAccountNumberNotNil: Boolean
  epsAccountNumberEqualFold: String
  epsAccountNumberContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
}
"""
CarrierWhereInput is used for filtering Carrier objects.
Input was generated by ent.
"""
input CarrierWhereInput {
  not: CarrierWhereInput
  and: [CarrierWhereInput!]
  or: [CarrierWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  sync_cancelation field predicates
  """
  syncCancelation: Boolean
  syncCancelationNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier_brand edge predicates
  """
  hasCarrierBrand: Boolean
  hasCarrierBrandWith: [CarrierBrandWhereInput!]
  """
  carrier_dao edge predicates
  """
  hasCarrierDAO: Boolean
  hasCarrierDAOWith: [CarrierDAOWhereInput!]
  """
  carrier_df edge predicates
  """
  hasCarrierDF: Boolean
  hasCarrierDFWith: [CarrierDFWhereInput!]
  """
  carrier_dsv edge predicates
  """
  hasCarrierDSV: Boolean
  hasCarrierDSVWith: [CarrierDSVWhereInput!]
  """
  carrier_easy_post edge predicates
  """
  hasCarrierEasyPost: Boolean
  hasCarrierEasyPostWith: [CarrierEasyPostWhereInput!]
  """
  carrier_gls edge predicates
  """
  hasCarrierGLS: Boolean
  hasCarrierGLSWith: [CarrierGLSWhereInput!]
  """
  carrier_post_nord edge predicates
  """
  hasCarrierPostNord: Boolean
  hasCarrierPostNordWith: [CarrierPostNordWhereInput!]
  """
  carrier_usps edge predicates
  """
  hasCarrierUSPS: Boolean
  hasCarrierUSPSWith: [CarrierUSPSWhereInput!]
  """
  carrier_bring edge predicates
  """
  hasCarrierBring: Boolean
  hasCarrierBringWith: [CarrierBringWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
type ChangeHistory implements Node {
  id: ID!
  tenantID: ID!
  createdAt: Time!
  origin: ChangeHistoryOrigin!
  tenant: Tenant!
  planHistory: [PlanHistory!]
  user: User
  orderHistory: [OrderHistory!]
  shipmentHistory: [ShipmentHistory!]
  returnColliHistory: [ReturnColliHistory!]
}
"""
A connection to a list of items.
"""
type ChangeHistoryConnection {
  """
  A list of edges.
  """
  edges: [ChangeHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ChangeHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ChangeHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for ChangeHistory connections
"""
input ChangeHistoryOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order ChangeHistories.
  """
  field: ChangeHistoryOrderField!
}
"""
Properties by which ChangeHistory connections can be ordered.
"""
enum ChangeHistoryOrderField {
  CREATED_AT
}
"""
ChangeHistoryOrigin is enum for the field origin
"""
enum ChangeHistoryOrigin @goModel(model: "delivrio.io/go/ent/changehistory.Origin") {
  unknown
  background
  rest_api
  web_client
  print_client
  seed
}
"""
ChangeHistoryWhereInput is used for filtering ChangeHistory objects.
Input was generated by ent.
"""
input ChangeHistoryWhereInput {
  not: ChangeHistoryWhereInput
  and: [ChangeHistoryWhereInput!]
  or: [ChangeHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  origin field predicates
  """
  origin: ChangeHistoryOrigin
  originNEQ: ChangeHistoryOrigin
  originIn: [ChangeHistoryOrigin!]
  originNotIn: [ChangeHistoryOrigin!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  plan_history edge predicates
  """
  hasPlanHistory: Boolean
  hasPlanHistoryWith: [PlanHistoryWhereInput!]
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  order_history edge predicates
  """
  hasOrderHistory: Boolean
  hasOrderHistoryWith: [OrderHistoryWhereInput!]
  """
  shipment_history edge predicates
  """
  hasShipmentHistory: Boolean
  hasShipmentHistoryWith: [ShipmentHistoryWhereInput!]
  """
  return_colli_history edge predicates
  """
  hasReturnColliHistory: Boolean
  hasReturnColliHistoryWith: [ReturnColliHistoryWhereInput!]
}
type Colli implements Node {
  id: ID!
  tenantID: ID!
  """
  Code128 type C compatible for faster reads
  """
  internalBarcode: Int
  status: ColliStatus!
  slipPrintStatus: ColliSlipPrintStatus!
  createdAt: Time!
  """
  When filled, the packing slip email has been fired
  """
  emailPackingSlipPrintedAt: Time
  """
  When filled, the packing slip email has been fired. Consider moving to shipping parcel? There are trade offs
  """
  emailLabelPrintedAt: Time
  tenant: Tenant!
  recipient: Address!
  sender: Address!
  parcelShop: ParcelShop
  clickCollectLocation: Location
  orderLines: [OrderLine!]
  deliveryOption: DeliveryOption
  """
  Stores packing slips for quick printing. Carrier labels are attached to the shipment.
  """
  documentFile: [DocumentFile!]
  """
  A colli may only have 1 active shipment, cancelled shipments are moved to the other edge
  """
  shipmentParcel: ShipmentParcel
  """
  A ref to all cancelled shipments
  """
  cancelledShipmentParcel: [ShipmentParcel!]
  order: Order!
  """
  Allows packaging to be predefined for this colli and will be used for the shipment parcel
  """
  packaging: Packaging
  printJob: [PrintJob!]
}
"""
A connection to a list of items.
"""
type ColliConnection {
  """
  A list of edges.
  """
  edges: [ColliEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ColliEdge {
  """
  The item at the end of the edge.
  """
  node: Colli
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ColliSlipPrintStatus is enum for the field slip_print_status
"""
enum ColliSlipPrintStatus @goModel(model: "delivrio.io/go/ent/colli.SlipPrintStatus") {
  pending
  printed
}
"""
ColliStatus is enum for the field status
"""
enum ColliStatus @goModel(model: "delivrio.io/go/ent/colli.Status") {
  Pending
  Dispatched
  Cancelled
}
"""
ColliWhereInput is used for filtering Colli objects.
Input was generated by ent.
"""
input ColliWhereInput {
  not: ColliWhereInput
  and: [ColliWhereInput!]
  or: [ColliWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  internal_barcode field predicates
  """
  internalBarcode: Int
  internalBarcodeNEQ: Int
  internalBarcodeIn: [Int!]
  internalBarcodeNotIn: [Int!]
  internalBarcodeGT: Int
  internalBarcodeGTE: Int
  internalBarcodeLT: Int
  internalBarcodeLTE: Int
  internalBarcodeIsNil: Boolean
  internalBarcodeNotNil: Boolean
  """
  status field predicates
  """
  status: ColliStatus
  statusNEQ: ColliStatus
  statusIn: [ColliStatus!]
  statusNotIn: [ColliStatus!]
  """
  slip_print_status field predicates
  """
  slipPrintStatus: ColliSlipPrintStatus
  slipPrintStatusNEQ: ColliSlipPrintStatus
  slipPrintStatusIn: [ColliSlipPrintStatus!]
  slipPrintStatusNotIn: [ColliSlipPrintStatus!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  email_packing_slip_printed_at field predicates
  """
  emailPackingSlipPrintedAt: Time
  emailPackingSlipPrintedAtNEQ: Time
  emailPackingSlipPrintedAtIn: [Time!]
  emailPackingSlipPrintedAtNotIn: [Time!]
  emailPackingSlipPrintedAtGT: Time
  emailPackingSlipPrintedAtGTE: Time
  emailPackingSlipPrintedAtLT: Time
  emailPackingSlipPrintedAtLTE: Time
  emailPackingSlipPrintedAtIsNil: Boolean
  emailPackingSlipPrintedAtNotNil: Boolean
  """
  email_label_printed_at field predicates
  """
  emailLabelPrintedAt: Time
  emailLabelPrintedAtNEQ: Time
  emailLabelPrintedAtIn: [Time!]
  emailLabelPrintedAtNotIn: [Time!]
  emailLabelPrintedAtGT: Time
  emailLabelPrintedAtGTE: Time
  emailLabelPrintedAtLT: Time
  emailLabelPrintedAtLTE: Time
  emailLabelPrintedAtIsNil: Boolean
  emailLabelPrintedAtNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  recipient edge predicates
  """
  hasRecipient: Boolean
  hasRecipientWith: [AddressWhereInput!]
  """
  sender edge predicates
  """
  hasSender: Boolean
  hasSenderWith: [AddressWhereInput!]
  """
  parcel_shop edge predicates
  """
  hasParcelShop: Boolean
  hasParcelShopWith: [ParcelShopWhereInput!]
  """
  click_collect_location edge predicates
  """
  hasClickCollectLocation: Boolean
  hasClickCollectLocationWith: [LocationWhereInput!]
  """
  order_lines edge predicates
  """
  hasOrderLines: Boolean
  hasOrderLinesWith: [OrderLineWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  document_file edge predicates
  """
  hasDocumentFile: Boolean
  hasDocumentFileWith: [DocumentFileWhereInput!]
  """
  shipment_parcel edge predicates
  """
  hasShipmentParcel: Boolean
  hasShipmentParcelWith: [ShipmentParcelWhereInput!]
  """
  cancelled_shipment_parcel edge predicates
  """
  hasCancelledShipmentParcel: Boolean
  hasCancelledShipmentParcelWith: [ShipmentParcelWhereInput!]
  """
  order edge predicates
  """
  hasOrder: Boolean
  hasOrderWith: [OrderWhereInput!]
  """
  packaging edge predicates
  """
  hasPackaging: Boolean
  hasPackagingWith: [PackagingWhereInput!]
  """
  print_job edge predicates
  """
  hasPrintJob: Boolean
  hasPrintJobWith: [PrintJobWhereInput!]
}
type ConnectOptionCarrier implements Node {
  id: ID!
  name: String!
  tenant: [Tenant!]
}
"""
A connection to a list of items.
"""
type ConnectOptionCarrierConnection {
  """
  A list of edges.
  """
  edges: [ConnectOptionCarrierEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ConnectOptionCarrierEdge {
  """
  The item at the end of the edge.
  """
  node: ConnectOptionCarrier
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ConnectOptionCarrierWhereInput is used for filtering ConnectOptionCarrier objects.
Input was generated by ent.
"""
input ConnectOptionCarrierWhereInput {
  not: ConnectOptionCarrierWhereInput
  and: [ConnectOptionCarrierWhereInput!]
  or: [ConnectOptionCarrierWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
}
type ConnectOptionPlatform implements Node {
  id: ID!
  name: String!
  tenant: [Tenant!]
}
"""
A connection to a list of items.
"""
type ConnectOptionPlatformConnection {
  """
  A list of edges.
  """
  edges: [ConnectOptionPlatformEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ConnectOptionPlatformEdge {
  """
  The item at the end of the edge.
  """
  node: ConnectOptionPlatform
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ConnectOptionPlatformWhereInput is used for filtering ConnectOptionPlatform objects.
Input was generated by ent.
"""
input ConnectOptionPlatformWhereInput {
  not: ConnectOptionPlatformWhereInput
  and: [ConnectOptionPlatformWhereInput!]
  or: [ConnectOptionPlatformWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
}
type Connection implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  syncOrders: Boolean!
  syncProducts: Boolean!
  fulfillAutomatically: Boolean!
  dispatchAutomatically: Boolean!
  convertCurrency: Boolean!
  autoPrintParcelSlip: Boolean!
  tenant: Tenant!
  connectionBrand: ConnectionBrand!
  connectionShopify: ConnectionShopify
  orders: [Order!]
  senderLocation: Location!
  pickupLocation: Location!
  returnLocation: Location!
  sellerLocation: Location!
  deliveryOption: [DeliveryOption!]
  """
  Delivery option to be set when none specified via sync or API
  """
  defaultDeliveryOption: DeliveryOption
  returnPortal: ReturnPortal
  hypothesisTest: [HypothesisTest!]
  notifications: [Notification!]
  currency: Currency!
  packingSlipTemplate: Document
  connectionLookup: [ConnectionLookup!]
}
type ConnectionBrand implements Node {
  id: ID!
  label: String!
  internalID: ConnectionBrandInternalID!
  logoURL: String
  connection: [Connection!]
}
"""
A connection to a list of items.
"""
type ConnectionBrandConnection {
  """
  A list of edges.
  """
  edges: [ConnectionBrandEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ConnectionBrandEdge {
  """
  The item at the end of the edge.
  """
  node: ConnectionBrand
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ConnectionBrandInternalID is enum for the field internal_id
"""
enum ConnectionBrandInternalID @goModel(model: "delivrio.io/go/ent/connectionbrand.InternalID") {
  shopify
}
"""
ConnectionBrandWhereInput is used for filtering ConnectionBrand objects.
Input was generated by ent.
"""
input ConnectionBrandWhereInput {
  not: ConnectionBrandWhereInput
  and: [ConnectionBrandWhereInput!]
  or: [ConnectionBrandWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  internal_id field predicates
  """
  internalID: ConnectionBrandInternalID
  internalIDNEQ: ConnectionBrandInternalID
  internalIDIn: [ConnectionBrandInternalID!]
  internalIDNotIn: [ConnectionBrandInternalID!]
  """
  logo_url field predicates
  """
  logoURL: String
  logoURLNEQ: String
  logoURLIn: [String!]
  logoURLNotIn: [String!]
  logoURLGT: String
  logoURLGTE: String
  logoURLLT: String
  logoURLLTE: String
  logoURLContains: String
  logoURLHasPrefix: String
  logoURLHasSuffix: String
  logoURLIsNil: Boolean
  logoURLNotNil: Boolean
  logoURLEqualFold: String
  logoURLContainsFold: String
  """
  connection edge predicates
  """
  hasConnection: Boolean
  hasConnectionWith: [ConnectionWhereInput!]
}
"""
A connection to a list of items.
"""
type ConnectionConnection {
  """
  A list of edges.
  """
  edges: [ConnectionEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ConnectionEdge {
  """
  The item at the end of the edge.
  """
  node: Connection
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ConnectionLookup implements Node {
  id: ID!
  tenantID: ID!
  payload: String!
  optionsOutputCount: Int!
  error: String
  createdAt: Time!
  tenant: Tenant!
  connections: Connection
}
"""
A connection to a list of items.
"""
type ConnectionLookupConnection {
  """
  A list of edges.
  """
  edges: [ConnectionLookupEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ConnectionLookupEdge {
  """
  The item at the end of the edge.
  """
  node: ConnectionLookup
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for ConnectionLookup connections
"""
input ConnectionLookupOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order ConnectionLookups.
  """
  field: ConnectionLookupOrderField!
}
"""
Properties by which ConnectionLookup connections can be ordered.
"""
enum ConnectionLookupOrderField {
  CREATED_AT
}
"""
ConnectionLookupWhereInput is used for filtering ConnectionLookup objects.
Input was generated by ent.
"""
input ConnectionLookupWhereInput {
  not: ConnectionLookupWhereInput
  and: [ConnectionLookupWhereInput!]
  or: [ConnectionLookupWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  payload field predicates
  """
  payload: String
  payloadNEQ: String
  payloadIn: [String!]
  payloadNotIn: [String!]
  payloadGT: String
  payloadGTE: String
  payloadLT: String
  payloadLTE: String
  payloadContains: String
  payloadHasPrefix: String
  payloadHasSuffix: String
  payloadEqualFold: String
  payloadContainsFold: String
  """
  options_output_count field predicates
  """
  optionsOutputCount: Int
  optionsOutputCountNEQ: Int
  optionsOutputCountIn: [Int!]
  optionsOutputCountNotIn: [Int!]
  optionsOutputCountGT: Int
  optionsOutputCountGTE: Int
  optionsOutputCountLT: Int
  optionsOutputCountLTE: Int
  """
  error field predicates
  """
  error: String
  errorNEQ: String
  errorIn: [String!]
  errorNotIn: [String!]
  errorGT: String
  errorGTE: String
  errorLT: String
  errorLTE: String
  errorContains: String
  errorHasPrefix: String
  errorHasSuffix: String
  errorIsNil: Boolean
  errorNotNil: Boolean
  errorEqualFold: String
  errorContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  connections edge predicates
  """
  hasConnections: Boolean
  hasConnectionsWith: [ConnectionWhereInput!]
}
type ConnectionShopify implements Node {
  id: ID!
  tenantID: ID!
  """
  Since certain plans don't allow for external rates
  """
  rateIntegration: Boolean!
  storeURL: String
  apiKey: String
  """
  Used for token-authenticating Shopify rate lookups
  """
  lookupKey: String
  syncFrom: Time
  """
  When set, only orders with these tags will be synchronized. Supports a 
  """
  filterTags: [String!]
  tenant: Tenant!
  connection: Connection!
}
"""
A connection to a list of items.
"""
type ConnectionShopifyConnection {
  """
  A list of edges.
  """
  edges: [ConnectionShopifyEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ConnectionShopifyEdge {
  """
  The item at the end of the edge.
  """
  node: ConnectionShopify
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ConnectionShopifyWhereInput is used for filtering ConnectionShopify objects.
Input was generated by ent.
"""
input ConnectionShopifyWhereInput {
  not: ConnectionShopifyWhereInput
  and: [ConnectionShopifyWhereInput!]
  or: [ConnectionShopifyWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  rate_integration field predicates
  """
  rateIntegration: Boolean
  rateIntegrationNEQ: Boolean
  """
  store_url field predicates
  """
  storeURL: String
  storeURLNEQ: String
  storeURLIn: [String!]
  storeURLNotIn: [String!]
  storeURLGT: String
  storeURLGTE: String
  storeURLLT: String
  storeURLLTE: String
  storeURLContains: String
  storeURLHasPrefix: String
  storeURLHasSuffix: String
  storeURLIsNil: Boolean
  storeURLNotNil: Boolean
  storeURLEqualFold: String
  storeURLContainsFold: String
  """
  api_key field predicates
  """
  apiKey: String
  apiKeyNEQ: String
  apiKeyIn: [String!]
  apiKeyNotIn: [String!]
  apiKeyGT: String
  apiKeyGTE: String
  apiKeyLT: String
  apiKeyLTE: String
  apiKeyContains: String
  apiKeyHasPrefix: String
  apiKeyHasSuffix: String
  apiKeyIsNil: Boolean
  apiKeyNotNil: Boolean
  apiKeyEqualFold: String
  apiKeyContainsFold: String
  """
  lookup_key field predicates
  """
  lookupKey: String
  lookupKeyNEQ: String
  lookupKeyIn: [String!]
  lookupKeyNotIn: [String!]
  lookupKeyGT: String
  lookupKeyGTE: String
  lookupKeyLT: String
  lookupKeyLTE: String
  lookupKeyContains: String
  lookupKeyHasPrefix: String
  lookupKeyHasSuffix: String
  lookupKeyIsNil: Boolean
  lookupKeyNotNil: Boolean
  lookupKeyEqualFold: String
  lookupKeyContainsFold: String
  """
  sync_from field predicates
  """
  syncFrom: Time
  syncFromNEQ: Time
  syncFromIn: [Time!]
  syncFromNotIn: [Time!]
  syncFromGT: Time
  syncFromGTE: Time
  syncFromLT: Time
  syncFromLTE: Time
  syncFromIsNil: Boolean
  syncFromNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  connection edge predicates
  """
  hasConnection: Boolean
  hasConnectionWith: [ConnectionWhereInput!]
}
"""
ConnectionWhereInput is used for filtering Connection objects.
Input was generated by ent.
"""
input ConnectionWhereInput {
  not: ConnectionWhereInput
  and: [ConnectionWhereInput!]
  or: [ConnectionWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  sync_orders field predicates
  """
  syncOrders: Boolean
  syncOrdersNEQ: Boolean
  """
  sync_products field predicates
  """
  syncProducts: Boolean
  syncProductsNEQ: Boolean
  """
  fulfill_automatically field predicates
  """
  fulfillAutomatically: Boolean
  fulfillAutomaticallyNEQ: Boolean
  """
  dispatch_automatically field predicates
  """
  dispatchAutomatically: Boolean
  dispatchAutomaticallyNEQ: Boolean
  """
  convert_currency field predicates
  """
  convertCurrency: Boolean
  convertCurrencyNEQ: Boolean
  """
  auto_print_parcel_slip field predicates
  """
  autoPrintParcelSlip: Boolean
  autoPrintParcelSlipNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  connection_brand edge predicates
  """
  hasConnectionBrand: Boolean
  hasConnectionBrandWith: [ConnectionBrandWhereInput!]
  """
  connection_shopify edge predicates
  """
  hasConnectionShopify: Boolean
  hasConnectionShopifyWith: [ConnectionShopifyWhereInput!]
  """
  orders edge predicates
  """
  hasOrders: Boolean
  hasOrdersWith: [OrderWhereInput!]
  """
  sender_location edge predicates
  """
  hasSenderLocation: Boolean
  hasSenderLocationWith: [LocationWhereInput!]
  """
  pickup_location edge predicates
  """
  hasPickupLocation: Boolean
  hasPickupLocationWith: [LocationWhereInput!]
  """
  return_location edge predicates
  """
  hasReturnLocation: Boolean
  hasReturnLocationWith: [LocationWhereInput!]
  """
  seller_location edge predicates
  """
  hasSellerLocation: Boolean
  hasSellerLocationWith: [LocationWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  default_delivery_option edge predicates
  """
  hasDefaultDeliveryOption: Boolean
  hasDefaultDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  return_portal edge predicates
  """
  hasReturnPortal: Boolean
  hasReturnPortalWith: [ReturnPortalWhereInput!]
  """
  hypothesis_test edge predicates
  """
  hasHypothesisTest: Boolean
  hasHypothesisTestWith: [HypothesisTestWhereInput!]
  """
  notifications edge predicates
  """
  hasNotifications: Boolean
  hasNotificationsWith: [NotificationWhereInput!]
  """
  currency edge predicates
  """
  hasCurrency: Boolean
  hasCurrencyWith: [CurrencyWhereInput!]
  """
  packing_slip_template edge predicates
  """
  hasPackingSlipTemplate: Boolean
  hasPackingSlipTemplateWith: [DocumentWhereInput!]
  """
  connection_lookup edge predicates
  """
  hasConnectionLookup: Boolean
  hasConnectionLookupWith: [ConnectionLookupWhereInput!]
}
type Consolidation implements Node {
  id: ID!
  tenantID: ID!
  publicID: String!
  description: String
  status: ConsolidationStatus!
  createdAt: Time
  tenant: Tenant!
  pallets: [Pallet!]
  orders: [Order!]
  deliveryOption: DeliveryOption
  recipient: Address
  sender: Address
  shipment: Shipment
  cancelledShipments: [Shipment!]
}
"""
A connection to a list of items.
"""
type ConsolidationConnection {
  """
  A list of edges.
  """
  edges: [ConsolidationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ConsolidationEdge {
  """
  The item at the end of the edge.
  """
  node: Consolidation
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for Consolidation connections
"""
input ConsolidationOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Consolidations.
  """
  field: ConsolidationOrderField!
}
"""
Properties by which Consolidation connections can be ordered.
"""
enum ConsolidationOrderField {
  CREATED_AT
}
"""
ConsolidationStatus is enum for the field status
"""
enum ConsolidationStatus @goModel(model: "delivrio.io/go/ent/consolidation.Status") {
  Pending
  Prebooked
  Booked
  Cancelled
}
"""
ConsolidationWhereInput is used for filtering Consolidation objects.
Input was generated by ent.
"""
input ConsolidationWhereInput {
  not: ConsolidationWhereInput
  and: [ConsolidationWhereInput!]
  or: [ConsolidationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  public_id field predicates
  """
  publicID: String
  publicIDNEQ: String
  publicIDIn: [String!]
  publicIDNotIn: [String!]
  publicIDGT: String
  publicIDGTE: String
  publicIDLT: String
  publicIDLTE: String
  publicIDContains: String
  publicIDHasPrefix: String
  publicIDHasSuffix: String
  publicIDEqualFold: String
  publicIDContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  status field predicates
  """
  status: ConsolidationStatus
  statusNEQ: ConsolidationStatus
  statusIn: [ConsolidationStatus!]
  statusNotIn: [ConsolidationStatus!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  pallets edge predicates
  """
  hasPallets: Boolean
  hasPalletsWith: [PalletWhereInput!]
  """
  orders edge predicates
  """
  hasOrders: Boolean
  hasOrdersWith: [OrderWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  recipient edge predicates
  """
  hasRecipient: Boolean
  hasRecipientWith: [AddressWhereInput!]
  """
  sender edge predicates
  """
  hasSender: Boolean
  hasSenderWith: [AddressWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
  """
  cancelled_shipments edge predicates
  """
  hasCancelledShipments: Boolean
  hasCancelledShipmentsWith: [ShipmentWhereInput!]
}
type Contact implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  surname: String!
  email: String!
  phoneNumber: String!
  tenant: Tenant!
  billingContact: [Tenant!]
  adminContact: [Tenant!]
}
"""
A connection to a list of items.
"""
type ContactConnection {
  """
  A list of edges.
  """
  edges: [ContactEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ContactEdge {
  """
  The item at the end of the edge.
  """
  node: Contact
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ContactWhereInput is used for filtering Contact objects.
Input was generated by ent.
"""
input ContactWhereInput {
  not: ContactWhereInput
  and: [ContactWhereInput!]
  or: [ContactWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  surname field predicates
  """
  surname: String
  surnameNEQ: String
  surnameIn: [String!]
  surnameNotIn: [String!]
  surnameGT: String
  surnameGTE: String
  surnameLT: String
  surnameLTE: String
  surnameContains: String
  surnameHasPrefix: String
  surnameHasSuffix: String
  surnameEqualFold: String
  surnameContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  phone_number field predicates
  """
  phoneNumber: String
  phoneNumberNEQ: String
  phoneNumberIn: [String!]
  phoneNumberNotIn: [String!]
  phoneNumberGT: String
  phoneNumberGTE: String
  phoneNumberLT: String
  phoneNumberLTE: String
  phoneNumberContains: String
  phoneNumberHasPrefix: String
  phoneNumberHasSuffix: String
  phoneNumberEqualFold: String
  phoneNumberContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  billing_contact edge predicates
  """
  hasBillingContact: Boolean
  hasBillingContactWith: [TenantWhereInput!]
  """
  admin_contact edge predicates
  """
  hasAdminContact: Boolean
  hasAdminContactWith: [TenantWhereInput!]
}
type Country implements Node {
  id: ID!
  label: String!
  alpha2: String!
  alpha3: String!
  code: String!
  region: CountryRegion!
  deliveryRule: [DeliveryRule!]
  address: [Address!]
  addressGlobal: [AddressGlobal!]
  carrierAdditionalServicePostNordConsignee: [CarrierAdditionalServicePostNord!]
  carrierAdditionalServicePostNordConsignor: [CarrierAdditionalServicePostNord!]
  carrierAdditionalServiceGLSConsignee: [CarrierAdditionalServiceGLS!] @goField(name: "CarrierAdditionalServiceGLSConsignee", forceResolver: false)
  carrierAdditionalServiceGLSConsignor: [CarrierAdditionalServiceGLS!] @goField(name: "CarrierAdditionalServiceGLSConsignor", forceResolver: false)
  countryHarmonizedCode: [CountryHarmonizedCode!]
  inventoryItem: [InventoryItem!]
}
"""
A connection to a list of items.
"""
type CountryConnection {
  """
  A list of edges.
  """
  edges: [CountryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CountryEdge {
  """
  The item at the end of the edge.
  """
  node: Country
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type CountryHarmonizedCode implements Node {
  id: ID!
  tenantID: ID!
  code: String!
  tenant: Tenant!
  inventoryItem: InventoryItem!
  country: Country!
}
"""
A connection to a list of items.
"""
type CountryHarmonizedCodeConnection {
  """
  A list of edges.
  """
  edges: [CountryHarmonizedCodeEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type CountryHarmonizedCodeEdge {
  """
  The item at the end of the edge.
  """
  node: CountryHarmonizedCode
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CountryHarmonizedCodeWhereInput is used for filtering CountryHarmonizedCode objects.
Input was generated by ent.
"""
input CountryHarmonizedCodeWhereInput {
  not: CountryHarmonizedCodeWhereInput
  and: [CountryHarmonizedCodeWhereInput!]
  or: [CountryHarmonizedCodeWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  code field predicates
  """
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeEqualFold: String
  codeContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  inventory_item edge predicates
  """
  hasInventoryItem: Boolean
  hasInventoryItemWith: [InventoryItemWhereInput!]
  """
  country edge predicates
  """
  hasCountry: Boolean
  hasCountryWith: [CountryWhereInput!]
}
"""
CountryRegion is enum for the field region
"""
enum CountryRegion @goModel(model: "delivrio.io/go/ent/country.Region") {
  Asia
  Europe
  Oceania
  Americas
  Africa
}
"""
CountryWhereInput is used for filtering Country objects.
Input was generated by ent.
"""
input CountryWhereInput {
  not: CountryWhereInput
  and: [CountryWhereInput!]
  or: [CountryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  alpha_2 field predicates
  """
  alpha2: String
  alpha2NEQ: String
  alpha2In: [String!]
  alpha2NotIn: [String!]
  alpha2GT: String
  alpha2GTE: String
  alpha2LT: String
  alpha2LTE: String
  alpha2Contains: String
  alpha2HasPrefix: String
  alpha2HasSuffix: String
  alpha2EqualFold: String
  alpha2ContainsFold: String
  """
  alpha_3 field predicates
  """
  alpha3: String
  alpha3NEQ: String
  alpha3In: [String!]
  alpha3NotIn: [String!]
  alpha3GT: String
  alpha3GTE: String
  alpha3LT: String
  alpha3LTE: String
  alpha3Contains: String
  alpha3HasPrefix: String
  alpha3HasSuffix: String
  alpha3EqualFold: String
  alpha3ContainsFold: String
  """
  code field predicates
  """
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeEqualFold: String
  codeContainsFold: String
  """
  region field predicates
  """
  region: CountryRegion
  regionNEQ: CountryRegion
  regionIn: [CountryRegion!]
  regionNotIn: [CountryRegion!]
  """
  delivery_rule edge predicates
  """
  hasDeliveryRule: Boolean
  hasDeliveryRuleWith: [DeliveryRuleWhereInput!]
  """
  address edge predicates
  """
  hasAddress: Boolean
  hasAddressWith: [AddressWhereInput!]
  """
  address_global edge predicates
  """
  hasAddressGlobal: Boolean
  hasAddressGlobalWith: [AddressGlobalWhereInput!]
  """
  carrier_additional_service_post_nord_consignee edge predicates
  """
  hasCarrierAdditionalServicePostNordConsignee: Boolean
  hasCarrierAdditionalServicePostNordConsigneeWith: [CarrierAdditionalServicePostNordWhereInput!]
  """
  carrier_additional_service_post_nord_consignor edge predicates
  """
  hasCarrierAdditionalServicePostNordConsignor: Boolean
  hasCarrierAdditionalServicePostNordConsignorWith: [CarrierAdditionalServicePostNordWhereInput!]
  """
  carrier_additional_service_gls_consignee edge predicates
  """
  hasCarrierAdditionalServiceGLSConsignee: Boolean
  hasCarrierAdditionalServiceGLSConsigneeWith: [CarrierAdditionalServiceGLSWhereInput!]
  """
  carrier_additional_service_gls_consignor edge predicates
  """
  hasCarrierAdditionalServiceGLSConsignor: Boolean
  hasCarrierAdditionalServiceGLSConsignorWith: [CarrierAdditionalServiceGLSWhereInput!]
  """
  country_harmonized_code edge predicates
  """
  hasCountryHarmonizedCode: Boolean
  hasCountryHarmonizedCodeWith: [CountryHarmonizedCodeWhereInput!]
  """
  inventory_item edge predicates
  """
  hasInventoryItem: Boolean
  hasInventoryItemWith: [InventoryItemWhereInput!]
}
"""
CreateAddressGlobalInput is used for create AddressGlobal object.
Input was generated by ent.
"""
input CreateAddressGlobalInput {
  company: String
  addressOne: String!
  addressTwo: String
  city: String!
  state: String
  zip: String!
  latitude: Float
  longitude: Float
  parcelShopPostNordDeliveryID: ID
  parcelShopBringDeliveryID: ID
  parcelShopID: ID
  countryID: ID!
}
"""
CreateAddressInput is used for create Address object.
Input was generated by ent.
"""
input CreateAddressInput {
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  """
  Some applications have both mobile and generic
  """
  phoneNumber2: String
  """
  Electronic customs
  """
  vatNumber: String
  company: String
  addressOne: String!
  addressTwo: String!
  city: String!
  state: String
  zip: String!
  recipientColliIDs: [ID!]
  recipientConsolidationID: ID
  companyAddresIDs: [ID!]
  locationIDs: [ID!]
  senderColliIDs: [ID!]
  senderConsolidationID: ID
  returnSenderColliIDs: [ID!]
  returnRecipientColliIDs: [ID!]
  countryID: ID!
}
"""
CreateCarrierAdditionalServiceBringInput is used for create CarrierAdditionalServiceBring object.
Input was generated by ent.
"""
input CreateCarrierAdditionalServiceBringInput {
  label: String!
  apiCodeBooking: String!
  carrierServiceBringID: ID
  deliveryOptionBringIDs: [ID!]
}
"""
CreateCarrierAdditionalServiceDAOInput is used for create CarrierAdditionalServiceDAO object.
Input was generated by ent.
"""
input CreateCarrierAdditionalServiceDAOInput {
  label: String!
  apiCode: String!
  carrierServiceDAOIDs: [ID!]
  deliveryOptionDAOIDs: [ID!]
}
"""
CreateCarrierAdditionalServiceDSVInput is used for create CarrierAdditionalServiceDSV object.
Input was generated by ent.
"""
input CreateCarrierAdditionalServiceDSVInput {
  label: String!
  apiCode: String!
  carrierServiceDSVIDs: [ID!]
  deliveryOptionDSVIDs: [ID!]
}
"""
CreateCarrierAdditionalServiceGLSInput is used for create CarrierAdditionalServiceGLS object.
Input was generated by ent.
"""
input CreateCarrierAdditionalServiceGLSInput {
  label: String!
  mandatory: Boolean!
  """
  When false, only edge countries will validate on this consignor service
  """
  allCountriesConsignor: Boolean
  """
  When false, only edge countries will validate on this consignee service
  """
  allCountriesConsignee: Boolean
  internalID: String!
  carrierServiceGLSID: ID
  deliveryOptionGlIDs: [ID!]
  countriesConsigneeIDs: [ID!]
  countriesConsignorIDs: [ID!]
}
"""
CreateCarrierBringInput is used for create CarrierBring object.
Input was generated by ent.
"""
input CreateCarrierBringInput {
  apiKey: String
  customerNumber: String
  test: Boolean
  carrierID: ID!
}
"""
CreateCarrierDAOInput is used for create CarrierDAO object.
Input was generated by ent.
"""
input CreateCarrierDAOInput {
  customerID: String
  apiKey: String
  test: Boolean
  carrierID: ID!
}
"""
CreateCarrierDFInput is used for create CarrierDF object.
Input was generated by ent.
"""
input CreateCarrierDFInput {
  customerID: String!
  agreementNumber: String!
  whoPays: CarrierDFWhoPays
  test: Boolean
  carrierID: ID!
}
"""
CreateCarrierDSVInput is used for create CarrierDSV object.
Input was generated by ent.
"""
input CreateCarrierDSVInput {
  carrierID: ID!
}
"""
CreateCarrierEasyPostInput is used for create CarrierEasyPost object.
Input was generated by ent.
"""
input CreateCarrierEasyPostInput {
  apiKey: String!
  test: Boolean
  """
  When > 1, then we use rate, then buy. =1 one-call buy. Former not implemented in first round.
  """
  carrierAccounts: [String!]
  carrierID: ID!
}
"""
CreateCarrierGLSInput is used for create CarrierGLS object.
Input was generated by ent.
"""
input CreateCarrierGLSInput {
  contactID: String
  glsUsername: String
  glsPassword: String
  customerID: String
  glsCountryCode: String
  syncShipmentCancellation: Boolean
  printErrorOnLabel: Boolean
  carrierID: ID!
}
"""
CreateCarrierPostNordInput is used for create CarrierPostNord object.
Input was generated by ent.
"""
input CreateCarrierPostNordInput {
  """
  Default empty to allow creation from dialog with followup editing
  """
  customerNumber: String
  carrierID: ID!
}
"""
CreateCarrierUSPSInput is used for create CarrierUSPS object.
Input was generated by ent.
"""
input CreateCarrierUSPSInput {
  isTestAPI: Boolean
  consumerKey: String
  consumerSecret: String
  mid: String
  manifestMid: String
  crid: String
  epsAccountNumber: String
  carrierID: ID!
}
"""
CreateColliInput is used for create Colli object.
Input was generated by ent.
"""
input CreateColliInput {
  """
  Code128 type C compatible for faster reads
  """
  internalBarcode: Int
  slipPrintStatus: ColliSlipPrintStatus
  deliveryOptionID: ID
  documentFileIDs: [ID!]
  shipmentParcelID: ID
  cancelledShipmentParcelIDs: [ID!]
  orderID: ID!
  packagingID: ID
  printJobIDs: [ID!]
}
"""
CreateConnectOptionCarrierInput is used for create ConnectOptionCarrier object.
Input was generated by ent.
"""
input CreateConnectOptionCarrierInput {
  name: String!
  tenantIDs: [ID!]
}
"""
CreateConnectOptionPlatformInput is used for create ConnectOptionPlatform object.
Input was generated by ent.
"""
input CreateConnectOptionPlatformInput {
  name: String!
  tenantIDs: [ID!]
}
"""
CreateConnectionInput is used for create Connection object.
Input was generated by ent.
"""
input CreateConnectionInput {
  name: String!
  syncOrders: Boolean
  syncProducts: Boolean
  fulfillAutomatically: Boolean
  dispatchAutomatically: Boolean
  convertCurrency: Boolean
  autoPrintParcelSlip: Boolean
  connectionShopifyID: ID
  orderIDs: [ID!]
  senderLocationID: ID!
  pickupLocationID: ID!
  returnLocationID: ID!
  sellerLocationID: ID!
  deliveryOptionIDs: [ID!]
  defaultDeliveryOptionID: ID
  returnPortalID: ID
  hypothesisTestIDs: [ID!]
  notificationIDs: [ID!]
  currencyID: ID!
  packingSlipTemplateID: ID
  connectionLookupIDs: [ID!]
}
"""
CreateConnectionShopifyInput is used for create ConnectionShopify object.
Input was generated by ent.
"""
input CreateConnectionShopifyInput {
  """
  Since certain plans don't allow for external rates
  """
  rateIntegration: Boolean
  storeURL: String
  apiKey: String
  syncFrom: Time
  """
  When set, only orders with these tags will be synchronized. Supports a 
  """
  filterTags: [String!]
}
"""
CreateConsolidationInput is used for create Consolidation object.
Input was generated by ent.
"""
input CreateConsolidationInput {
  publicID: String!
  description: String
  status: ConsolidationStatus
  palletIDs: [ID!]
  orderIDs: [ID!]
  deliveryOptionID: ID
  shipmentID: ID
  cancelledShipmentIDs: [ID!]
}
"""
CreateContactInput is used for create Contact object.
Input was generated by ent.
"""
input CreateContactInput {
  name: String!
  surname: String!
  email: String!
  phoneNumber: String!
  billingContactIDs: [ID!]
  adminContactIDs: [ID!]
}
"""
CreateCountryHarmonizedCodeInput is used for create CountryHarmonizedCode object.
Input was generated by ent.
"""
input CreateCountryHarmonizedCodeInput {
  code: String!
  inventoryItemID: ID!
  countryID: ID!
}
"""
CreateDeliveryOptionBringInput is used for create DeliveryOptionBring object.
Input was generated by ent.
"""
input CreateDeliveryOptionBringInput {
  electronicCustoms: Boolean
}
"""
CreateDeliveryOptionEasyPostInput is used for create DeliveryOptionEasyPost object.
Input was generated by ent.
"""
input CreateDeliveryOptionEasyPostInput {
  deliveryOptionID: ID!
  carrierAddServEasyPostIDs: [ID!]
}
"""
CreateDeliveryOptionInput is used for create DeliveryOption object.
Input was generated by ent.
"""
input CreateDeliveryOptionInput {
  archivedAt: Time
  name: String!
  sortOrder: Int!
  clickOptionDisplayCount: Int
  description: String
  clickCollect: Boolean
  overrideSenderAddress: Boolean
  overrideReturnAddress: Boolean
  hideDeliveryOption: Boolean
  deliveryEstimateFrom: Int
  deliveryEstimateTo: Int
  webshipperIntegration: Boolean
  webshipperID: Int
  shipmondoIntegration: Boolean
  """
  May contain placeholders
  """
  shipmondoDeliveryOption: String
  """
  Since some services are customs optional
  """
  customsEnabled: Boolean
  """
  Who is responsible for signing of custom docs
  """
  customsSigner: String
  """
  Toggle to hide this rate if a company field is not provided.
  """
  hideIfCompanyEmpty: Boolean
  carrierID: ID!
  deliveryRuleIDs: [ID!]
  deliveryOptionDAOID: ID
  deliveryOptionDFID: ID
  deliveryOptionDSVID: ID
  deliveryOptionEasyPostID: ID
  deliveryOptionGLSID: ID
  deliveryOptionPostNordID: ID
  deliveryOptionUSPSID: ID
  deliveryOptionBringID: ID
  returnPortalIDs: [ID!]
  colliIDs: [ID!]
  returnColliIDs: [ID!]
  carrierServiceID: ID!
  connectionID: ID!
  connectionDefaultID: ID
  hypothesisTestDeliveryOptionGroupOneIDs: [ID!]
  hypothesisTestDeliveryOptionGroupTwoIDs: [ID!]
  hypothesisTestDeliveryOptionLookupIDs: [ID!]
  clickCollectLocationIDs: [ID!]
  emailClickCollectAtStoreID: ID
  consolidationIDs: [ID!]
  defaultPackagingID: ID
}
"""
CreateDeliveryOptionPostNordInput is used for create DeliveryOptionPostNord object.
Input was generated by ent.
"""
input CreateDeliveryOptionPostNordInput {
  formatZpl: Boolean
  deliveryOptionID: ID!
}
"""
CreateDeliveryOptionUSPSInput is used for create DeliveryOptionUSPS object.
Input was generated by ent.
"""
input CreateDeliveryOptionUSPSInput {
  formatZpl: Boolean
}
"""
CreateDeliveryRuleConstraintGroupInput is used for create DeliveryRuleConstraintGroup object.
Input was generated by ent.
"""
input CreateDeliveryRuleConstraintGroupInput {
  constraintLogic: DeliveryRuleConstraintGroupConstraintLogic
  deliveryRuleConstraintIDs: [ID!]
  deliveryRuleID: ID!
}
"""
CreateDeliveryRuleConstraintInput is used for create DeliveryRuleConstraint object.
Input was generated by ent.
"""
input CreateDeliveryRuleConstraintInput {
  propertyType: DeliveryRuleConstraintPropertyType!
  comparison: DeliveryRuleConstraintComparison!
  selectedValue: DeliveryRuleConstraintSelectedValueInput!
}
"""
CreateDeliveryRuleInput is used for create DeliveryRule object.
Input was generated by ent.
"""
input CreateDeliveryRuleInput {
  name: String!
  price: Float
  deliveryRuleConstraintGroupIDs: [ID!]
  deliveryOptionID: ID
  countryIDs: [ID!]
  currencyID: ID
}
"""
CreateDocumentInput is used for create Document object.
Input was generated by ent.
"""
input CreateDocumentInput {
  name: String!
  htmlTemplate: String
  htmlHeader: String
  htmlFooter: String
  """
  Facilitates printing by saving the latest version of this document
  """
  lastBase64Pdf: String
  mergeType: DocumentMergeType
  paperSize: DocumentPaperSize
  startAt: Time
  endAt: Time
  carrierBrandID: ID
  connectionPackingSlipIDs: [ID!]
}
"""
CreateEmailTemplateInput is used for create EmailTemplate object.
Input was generated by ent.
"""
input CreateEmailTemplateInput {
  name: String!
  subject: String
  htmlTemplate: String
  mergeType: EmailTemplateMergeType
  returnPortalConfirmationLabelIDs: [ID!]
  returnPortalConfirmationQrCodeIDs: [ID!]
  returnPortalReceivedIDs: [ID!]
  returnPortalAcceptedIDs: [ID!]
  deliveryOptionClickCollectAtStoreIDs: [ID!]
  notificationIDs: [ID!]
}
"""
CreateHypothesisTestDeliveryOptionInput is used for create HypothesisTestDeliveryOption object.
Input was generated by ent.
"""
input CreateHypothesisTestDeliveryOptionInput {
  randomizeWithinGroupSort: Boolean
  byIntervalRotation: Boolean
  rotationIntervalHours: Int
  byOrder: Boolean
  hypothesisTestID: ID!
  hypothesisTestDeliveryOptionRequestIDs: [ID!]
  deliveryOptionGroupOneIDs: [ID!]
  deliveryOptionGroupTwoIDs: [ID!]
}
"""
CreateHypothesisTestDeliveryOptionLookupInput is used for create HypothesisTestDeliveryOptionLookup object.
Input was generated by ent.
"""
input CreateHypothesisTestDeliveryOptionLookupInput {
  deliveryOptionID: ID!
  hypothesisTestDeliveryOptionRequestID: ID!
}
"""
CreateHypothesisTestDeliveryOptionRequestInput is used for create HypothesisTestDeliveryOptionRequest object.
Input was generated by ent.
"""
input CreateHypothesisTestDeliveryOptionRequestInput {
  orderHash: String!
  shippingAddressHash: String!
  isControlGroup: Boolean!
  requestCount: Int!
  hypothesisTestDeliveryOptionID: ID!
  orderID: ID
  hypothesisTestDeliveryOptionLookupIDs: [ID!]
}
"""
CreateHypothesisTestInput is used for create HypothesisTest object.
Input was generated by ent.
"""
input CreateHypothesisTestInput {
  name: String!
  active: Boolean
  hypothesisTestDeliveryOptionID: ID
  connectionID: ID!
}
"""
CreateInventoryItemInput is used for create InventoryItem object.
Input was generated by ent.
"""
input CreateInventoryItemInput {
  """
  Used when country specific code not available
  """
  code: String
  """
  Duplicated to match Shopify InventoryItem/ProductVariant
  """
  sku: String
  countryHarmonizedCodeIDs: [ID!]
  countryOfOriginID: ID
  productVariantID: ID!
}
"""
CreateLocationInput is used for create Location object.
Input was generated by ent.
"""
input CreateLocationInput {
  """
  Location name, not used in the address
  """
  name: String!
  locationTagIDs: [ID!]!
  senderConnectionIDs: [ID!]
  pickupConnectionIDs: [ID!]
  returnConnectionIDs: [ID!]
  sellerConnectionIDs: [ID!]
  returnPortalIDs: [ID!]
  deliveryOptionIDs: [ID!]
  colliIDs: [ID!]
}
"""
CreateNotificationInput is used for create Notification object.
Input was generated by ent.
"""
input CreateNotificationInput {
  name: String!
  active: Boolean
  connectionID: ID!
  emailTemplateID: ID!
}
"""
CreateOrderInput is used for create Order object.
Input was generated by ent.
"""
input CreateOrderInput {
  orderPublicID: String!
  commentInternal: String
  commentExternal: String
  connectionID: ID!
  returnColliIDs: [ID!]
  hypothesisTestDeliveryOptionRequestID: ID
  palletID: ID
  consolidationID: ID
}
"""
CreateOrderSenderInput is used for create OrderSender object.
Input was generated by ent.
"""
input CreateOrderSenderInput {
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  vatNumber: String!
}
"""
CreatePackagingDFInput is used for create PackagingDF object.
Input was generated by ent.
"""
input CreatePackagingDFInput {
  apiType: PackagingDFAPIType!
  maxWeight: Float
  minWeight: Float
  """
  Some carriers this is not boolean, so this is not a general toggle
  """
  stackable: Boolean
}
"""
CreatePackagingInput is used for create Packaging object.
Input was generated by ent.
"""
input CreatePackagingInput {
  archivedAt: Time
  name: String!
  heightCm: Int!
  widthCm: Int!
  lengthCm: Int!
  shipmentParcelIDs: [ID!]
  palletIDs: [ID!]
  colliIDs: [ID!]
  returnColliIDs: [ID!]
  packagingDFID: ID
  packagingUSPSID: ID
  carrierBrandID: ID
  deliveryOptionIDs: [ID!]
}
"""
CreatePackagingUSPSInput is used for create PackagingUSPS object.
Input was generated by ent.
"""
input CreatePackagingUSPSInput {
  packagingUSPSRateIndicatorID: ID!
  packagingUSPSProcessingCategoryID: ID!
}
"""
CreatePackagingUSPSProcessingCategoryInput is used for create PackagingUSPSProcessingCategory object.
Input was generated by ent.
"""
input CreatePackagingUSPSProcessingCategoryInput {
  name: String!
  processingCategory: PackagingUSPSProcessingCategoryProcessingCategory!
}
"""
CreatePalletInput is used for create Pallet object.
Input was generated by ent.
"""
input CreatePalletInput {
  publicID: String!
  description: String!
  orderIDs: [ID!]
  packagingID: ID
  consolidationID: ID!
  shipmentPalletID: ID
  cancelledShipmentPalletIDs: [ID!]
}
"""
CreateParcelShopBringInput is used for create ParcelShopBring object.
Input was generated by ent.
"""
input CreateParcelShopBringInput {
  """
  https://developer.bring.com/api/pickup-point/#pickup-point-types
  """
  pointType: ParcelShopBringPointType!
  bringID: String!
  parcelShopID: ID!
  addressDeliveryID: ID!
}
"""
CreateParcelShopDAOInput is used for create ParcelShopDAO object.
Input was generated by ent.
"""
input CreateParcelShopDAOInput {
  shopID: String!
  parcelShopID: ID!
}
"""
CreateParcelShopGLSInput is used for create ParcelShopGLS object.
Input was generated by ent.
"""
input CreateParcelShopGLSInput {
  glsParcelShopID: String!
  """
  Only available in Group API
  """
  partnerID: String
  """
  Only available in Group API
  """
  type: String
  parcelShopID: ID!
}
"""
CreateParcelShopInput is used for create ParcelShop object.
Input was generated by ent.
"""
input CreateParcelShopInput {
  name: String!
  parcelShopDAOID: ID
  parcelShopPostNordID: ID
  parcelShopGLSID: ID
  parcelShopBringID: ID
  carrierBrandID: ID!
  addressID: ID!
  colliIDs: [ID!]
  businessHoursPeriodIDs: [ID!]
}
"""
CreateParcelShopPostNordInput is used for create ParcelShopPostNord object.
Input was generated by ent.
"""
input CreateParcelShopPostNordInput {
  servicePointID: String!
  pudoid: String!
  """
  No idea what the options are aside from the default: 156. Maybe box, shop, etc??
  """
  typeID: String!
  parcelShopID: ID!
  addressDeliveryID: ID!
}
"""
CreatePrinterInput is used for create Printer object.
Input was generated by ent.
"""
input CreatePrinterInput {
  name: String!
  labelZpl: Boolean
  labelPdf: Boolean
  labelPng: Boolean
  document: Boolean
  rotate180: Boolean
  useShell: Boolean
  printSize: PrinterPrintSize
  workstationID: ID!
  printJobIDs: [ID!]
}
"""
CreateProductInput is used for create Product object.
Input was generated by ent.
"""
input CreateProductInput {
  title: String!
  bodyHTML: String
  status: ProductStatus
  productTagIDs: [ID!]
  productVariantIDs: [ID!]
  productImageIDs: [ID!]
}
"""
CreateProductTagInput is used for create ProductTag object.
Input was generated by ent.
"""
input CreateProductTagInput {
  name: String!
  createdAt: Time
  productIDs: [ID!]
}
"""
CreateProductVariantInput is used for create ProductVariant object.
Input was generated by ent.
"""
input CreateProductVariantInput {
  archived: Boolean
  description: String
  eanNumber: String
  weightG: Int
  dimensionLength: Int
  dimensionWidth: Int
  dimensionHeight: Int
  orderLineIDs: [ID!]
  productImageIDs: [ID!]
  inventoryItemID: ID
}
"""
CreateReturnColliInput is used for create ReturnColli object.
Input was generated by ent.
"""
input CreateReturnColliInput {
  expectedAt: Time
  labelPdf: String
  labelPng: String
  qrCodePng: String
  comment: String
  status: ReturnColliStatus
  """
  Timestamp of email successfully sent after status changed to received
  """
  emailReceived: Time
  """
  Timestamp of email successfully sent after status changed to accepted
  """
  emailAccepted: Time
  """
  Timestamp of email successfully sent after status changed to pending
  """
  emailConfirmationLabel: Time
  """
  Timestamp of email successfully sent after status changed to pending
  """
  emailConfirmationQrCode: Time
  orderID: ID!
  deliveryOptionID: ID
  returnPortalID: ID!
  packagingID: ID
  returnOrderLineIDs: [ID!]
}
"""
CreateReturnOrderLineInput is used for create ReturnOrderLine object.
Input was generated by ent.
"""
input CreateReturnOrderLineInput {
  units: Int!
  returnColliID: ID!
  orderLineID: ID!
  returnPortalClaimID: ID!
}
"""
CreateReturnPortalClaimInput is used for create ReturnPortalClaim object.
Input was generated by ent.
"""
input CreateReturnPortalClaimInput {
  name: String!
  description: String!
  restockable: Boolean!
  returnPortalID: ID!
  returnLocationID: ID
  returnOrderLineIDs: [ID!]
}
"""
CreateReturnPortalInput is used for create ReturnPortal object.
Input was generated by ent.
"""
input CreateReturnPortalInput {
  name: String!
  returnOpenHours: Int
  automaticallyAccept: Boolean
  returnPortalClaimIDs: [ID!]
  returnLocationIDs: [ID!]
  deliveryOptionIDs: [ID!]
  connectionID: ID
  emailConfirmationLabelID: ID
  emailConfirmationQrCodeID: ID
  emailReceivedID: ID
  emailAcceptedID: ID
  returnColliIDs: [ID!]
}
"""
CreateSeatGroupAccessRightInput is used for create SeatGroupAccessRight object.
Input was generated by ent.
"""
input CreateSeatGroupAccessRightInput {
  level: SeatGroupAccessRightLevel
  accessRightID: ID!
  seatGroupID: ID!
}
"""
CreateSeatGroupInput is used for create SeatGroup object.
Input was generated by ent.
"""
input CreateSeatGroupInput {
  name: String!
  createdAt: Time
  userIDs: [ID!]
  assignedAccessRightIDs: [ID!]
}
"""
CreateShipmentBringInput is used for create ShipmentBring object.
Input was generated by ent.
"""
input CreateShipmentBringInput {
  consignmentNumber: String!
  shipmentID: ID!
}
"""
CreateShipmentDAOInput is used for create ShipmentDAO object.
Input was generated by ent.
"""
input CreateShipmentDAOInput {
  barcodeID: String!
  shipmentID: ID!
}
"""
CreateShipmentDSVInput is used for create ShipmentDSV object.
Input was generated by ent.
"""
input CreateShipmentDSVInput {
  barcodeID: String!
  shipmentID: ID!
}
"""
CreateShipmentInput is used for create Shipment object.
Input was generated by ent.
"""
input CreateShipmentInput {
  shipmentPublicID: String!
  status: ShipmentStatus!
  carrierID: ID!
  shipmentHistoryIDs: [ID!]
  shipmentBringID: ID
  shipmentDAOID: ID
  shipmentDFID: ID
  shipmentDSVID: ID
  shipmentEasyPostID: ID
  shipmentPostNordID: ID
  shipmentGLSID: ID
  shipmentUSPSID: ID
  consolidationID: ID
  oldConsolidationIDs: [ID!]
  shipmentParcelIDs: [ID!]
  shipmentPalletIDs: [ID!]
}
"""
CreateShipmentPalletInput is used for create ShipmentPallet object.
Input was generated by ent.
"""
input CreateShipmentPalletInput {
  barcode: String!
  colliNumber: String!
  carrierID: String!
  labelPdf: String
  labelZpl: String
  status: ShipmentPalletStatus
  palletID: ID
  oldPalletIDs: [ID!]
  shipmentID: ID!
}
"""
CreateShipmentParcelInput is used for create ShipmentParcel object.
Input was generated by ent.
"""
input CreateShipmentParcelInput {
  itemID: String
  status: ShipmentParcelStatus
  ccPickupSignatureUrls: [String!]
  shipmentID: ID!
  colliID: ID
  oldColliIDs: [ID!]
  workspaceRecentScanIDs: [ID!]
  packagingID: ID
  printJobIDs: [ID!]
  documentFileID: ID
}
"""
CreateShipmentPostNordInput is used for create ShipmentPostNord object.
Input was generated by ent.
"""
input CreateShipmentPostNordInput {
  """
  Multiple labels. May contain unrelated shipments.
  """
  bookingID: String!
  """
  Individual label. Can be grouped to same address. Probably should not be on this ent?
  """
  itemID: String!
  """
  Shipment can contain multiple parcels to same address.
  """
  shipmentReferenceNo: String!
  shipmentID: ID!
}
"""
CreateShipmentUSPSInput is used for create ShipmentUSPS object.
Input was generated by ent.
"""
input CreateShipmentUSPSInput {
  trackingNumber: String
  postage: Float
  scheduledDeliveryDate: Time
  shipmentID: ID!
}
"""
CreateSignupOptionsInput is used for create SignupOptions object.
Input was generated by ent.
"""
input CreateSignupOptionsInput {
  betterDeliveryOptions: Boolean!
  improvePickPack: Boolean!
  shippingLabel: Boolean!
  customDocs: Boolean!
  reducedCosts: Boolean!
  easyReturns: Boolean!
  clickCollect: Boolean!
  numShipments: Int!
  usersID: ID!
}
"""
CreateTenantInput is used for create Tenant object.
Input was generated by ent.
"""
input CreateTenantInput {
  name: String!
  vatNumber: String
  invoiceReference: String
  connectOptionCarrierIDs: [ID!]
  connectOptionPlatformIDs: [ID!]
  companyAddressID: ID
  billingContactID: ID
  adminContactID: ID
}
"""
CreateUserInput is used for create User object.
Input was generated by ent.
"""
input CreateUserInput {
  name: String
  surname: String
  phoneNumber: String
  email: String!
  """
  Field is just for front end convenience. Password gets stored as hash.
  """
  password: String
  marketingConsent: Boolean
  createdAt: Time
  archivedAt: Time
  """
  When fulfilling, the next carrier pickup date for the package can be selected
  """
  pickupDay: UserPickupDay
  """
  So we can ask the user to confirm their pickup day after X hours
  """
  pickupDayLastChanged: Time
  otkRequestIDs: [ID!]
  signupOptionsID: ID
  languageID: ID
  changeHistoryIDs: [ID!]
  planHistoryUserIDs: [ID!]
  apiTokenIDs: [ID!]
  selectedWorkstationID: ID
  seatGroupID: ID
  workspaceRecentScanIDs: [ID!]
}
"""
CreateUserSeatInput is used for create UserSeat object.
Input was generated by ent.
"""
input CreateUserSeatInput {
  name: String
  surname: String
  email: String!
  createdAt: Time
}
"""
CreateWorkstationInput is used for create Workstation object.
Input was generated by ent.
"""
input CreateWorkstationInput {
  archivedAt: Time
  name: String!
  deviceType: WorkstationDeviceType
  status: WorkstationStatus
  autoPrintReceiver: Boolean
  printerIDs: [ID!]
  userID: ID
  selectedUserID: ID
}
type Currency implements Node {
  id: ID!
  display: String!
  currencyCode: CurrencyCurrencyCode!
  orderLine: [OrderLine!]
  deliveryRule: [DeliveryRule!]
}
"""
A connection to a list of items.
"""
type CurrencyConnection {
  """
  A list of edges.
  """
  edges: [CurrencyEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
CurrencyCurrencyCode is enum for the field currency_code
"""
enum CurrencyCurrencyCode @goModel(model: "delivrio.io/go/ent/currency.CurrencyCode") {
  DKK
  EUR
  SEK
  USD
}
"""
An edge in a connection.
"""
type CurrencyEdge {
  """
  The item at the end of the edge.
  """
  node: Currency
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
CurrencyWhereInput is used for filtering Currency objects.
Input was generated by ent.
"""
input CurrencyWhereInput {
  not: CurrencyWhereInput
  and: [CurrencyWhereInput!]
  or: [CurrencyWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  display field predicates
  """
  display: String
  displayNEQ: String
  displayIn: [String!]
  displayNotIn: [String!]
  displayGT: String
  displayGTE: String
  displayLT: String
  displayLTE: String
  displayContains: String
  displayHasPrefix: String
  displayHasSuffix: String
  displayEqualFold: String
  displayContainsFold: String
  """
  currency_code field predicates
  """
  currencyCode: CurrencyCurrencyCode
  currencyCodeNEQ: CurrencyCurrencyCode
  currencyCodeIn: [CurrencyCurrencyCode!]
  currencyCodeNotIn: [CurrencyCurrencyCode!]
  """
  order_line edge predicates
  """
  hasOrderLine: Boolean
  hasOrderLineWith: [OrderLineWhereInput!]
  """
  delivery_rule edge predicates
  """
  hasDeliveryRule: Boolean
  hasDeliveryRuleWith: [DeliveryRuleWhereInput!]
}
"""
Define a Relay Cursor type:
https://relay.dev/graphql/connections.htm#sec-Cursor
"""
scalar Cursor
type DeliveryOption implements Node {
  id: ID!
  tenantID: ID!
  archivedAt: Time
  name: String!
  sortOrder: Int!
  clickOptionDisplayCount: Int
  description: String
  clickCollect: Boolean
  overrideSenderAddress: Boolean
  overrideReturnAddress: Boolean
  hideDeliveryOption: Boolean
  deliveryEstimateFrom: Int
  deliveryEstimateTo: Int
  webshipperIntegration: Boolean!
  webshipperID: Int
  shipmondoIntegration: Boolean!
  """
  May contain placeholders
  """
  shipmondoDeliveryOption: String
  """
  Since some services are customs optional
  """
  customsEnabled: Boolean!
  """
  Who is responsible for signing of custom docs
  """
  customsSigner: String
  """
  Toggle to hide this rate if a company field is not provided.
  """
  hideIfCompanyEmpty: Boolean!
  tenant: Tenant!
  carrier: Carrier!
  deliveryRule: [DeliveryRule!]
  deliveryOptionDAO: DeliveryOptionDAO
  deliveryOptionDF: DeliveryOptionDF
  deliveryOptionDSV: DeliveryOptionDSV
  deliveryOptionEasyPost: DeliveryOptionEasyPost
  deliveryOptionGLS: DeliveryOptionGLS
  deliveryOptionPostNord: DeliveryOptionPostNord
  deliveryOptionUSPS: DeliveryOptionUSPS
  deliveryOptionBring: DeliveryOptionBring
  returnPortals: [ReturnPortal!]
  colli: [Colli!]
  returnColli: [ReturnColli!]
  carrierService: CarrierService!
  connection: Connection!
  """
  The default delivery option for the connection. Unique since DO is already pinned to a single connection.
  """
  connectionDefault: Connection
  hypothesisTestDeliveryOptionGroupOne: [HypothesisTestDeliveryOption!]
  hypothesisTestDeliveryOptionGroupTwo: [HypothesisTestDeliveryOption!]
  hypothesisTestDeliveryOptionLookup: [HypothesisTestDeliveryOptionLookup!]
  clickCollectLocation: [Location!]
  emailClickCollectAtStore: EmailTemplate
  consolidation: [Consolidation!]
  defaultPackaging: Packaging
}
type DeliveryOptionBring implements Node {
  id: ID!
  tenantID: ID!
  electronicCustoms: Boolean!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  carrierAdditionalServiceBring: [CarrierAdditionalServiceBring!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionBringConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionBringEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryOptionBringEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOptionBring
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryOptionBringWhereInput is used for filtering DeliveryOptionBring objects.
Input was generated by ent.
"""
input DeliveryOptionBringWhereInput {
  not: DeliveryOptionBringWhereInput
  and: [DeliveryOptionBringWhereInput!]
  or: [DeliveryOptionBringWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  electronic_customs field predicates
  """
  electronicCustoms: Boolean
  electronicCustomsNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  carrier_additional_service_bring edge predicates
  """
  hasCarrierAdditionalServiceBring: Boolean
  hasCarrierAdditionalServiceBringWith: [CarrierAdditionalServiceBringWhereInput!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
type DeliveryOptionDAO implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  carrierAdditionalServiceDAO: [CarrierAdditionalServiceDAO!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionDAOConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionDAOEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryOptionDAOEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOptionDAO
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryOptionDAOWhereInput is used for filtering DeliveryOptionDAO objects.
Input was generated by ent.
"""
input DeliveryOptionDAOWhereInput {
  not: DeliveryOptionDAOWhereInput
  and: [DeliveryOptionDAOWhereInput!]
  or: [DeliveryOptionDAOWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  carrier_additional_service_dao edge predicates
  """
  hasCarrierAdditionalServiceDAO: Boolean
  hasCarrierAdditionalServiceDAOWith: [CarrierAdditionalServiceDAOWhereInput!]
}
type DeliveryOptionDF implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  carrierAdditionalServiceDF: [CarrierAdditionalServiceDF!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionDFConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionDFEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryOptionDFEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOptionDF
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryOptionDFWhereInput is used for filtering DeliveryOptionDF objects.
Input was generated by ent.
"""
input DeliveryOptionDFWhereInput {
  not: DeliveryOptionDFWhereInput
  and: [DeliveryOptionDFWhereInput!]
  or: [DeliveryOptionDFWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  carrier_additional_service_df edge predicates
  """
  hasCarrierAdditionalServiceDF: Boolean
  hasCarrierAdditionalServiceDFWith: [CarrierAdditionalServiceDFWhereInput!]
}
type DeliveryOptionDSV implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  carrierAdditionalServiceDSV: [CarrierAdditionalServiceDSV!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionDSVConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionDSVEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryOptionDSVEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOptionDSV
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryOptionDSVWhereInput is used for filtering DeliveryOptionDSV objects.
Input was generated by ent.
"""
input DeliveryOptionDSVWhereInput {
  not: DeliveryOptionDSVWhereInput
  and: [DeliveryOptionDSVWhereInput!]
  or: [DeliveryOptionDSVWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  carrier_additional_service_dsv edge predicates
  """
  hasCarrierAdditionalServiceDSV: Boolean
  hasCarrierAdditionalServiceDSVWith: [CarrierAdditionalServiceDSVWhereInput!]
}
type DeliveryOptionEasyPost implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  carrierAddServEasyPost: [CarrierAdditionalServiceEasyPost!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionEasyPostConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionEasyPostEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryOptionEasyPostEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOptionEasyPost
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryOptionEasyPostWhereInput is used for filtering DeliveryOptionEasyPost objects.
Input was generated by ent.
"""
input DeliveryOptionEasyPostWhereInput {
  not: DeliveryOptionEasyPostWhereInput
  and: [DeliveryOptionEasyPostWhereInput!]
  or: [DeliveryOptionEasyPostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  carrier_add_serv_easy_post edge predicates
  """
  hasCarrierAddServEasyPost: Boolean
  hasCarrierAddServEasyPostWith: [CarrierAdditionalServiceEasyPostWhereInput!]
}
"""
An edge in a connection.
"""
type DeliveryOptionEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOption
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type DeliveryOptionGLS implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  """
  The lookup is done via the internalID, so edge input not included here. Consider refactoring to a generic entity on top of the GLS entity.
  """
  carrierAdditionalServiceGLS: [CarrierAdditionalServiceGLS!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionGLSConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionGLSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryOptionGLSEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOptionGLS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryOptionGLSWhereInput is used for filtering DeliveryOptionGLS objects.
Input was generated by ent.
"""
input DeliveryOptionGLSWhereInput {
  not: DeliveryOptionGLSWhereInput
  and: [DeliveryOptionGLSWhereInput!]
  or: [DeliveryOptionGLSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  carrier_additional_service_gls edge predicates
  """
  hasCarrierAdditionalServiceGLS: Boolean
  hasCarrierAdditionalServiceGLSWith: [CarrierAdditionalServiceGLSWhereInput!]
}
type DeliveryOptionPostNord implements Node {
  id: ID!
  tenantID: ID!
  formatZpl: Boolean!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  """
  The lookup is done via the internalID, so edge input not included here. Consider refactoring to a generic entity on top of the PN entity.
  """
  carrierAddServPostNord: [CarrierAdditionalServicePostNord!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionPostNordConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionPostNordEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryOptionPostNordEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOptionPostNord
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryOptionPostNordWhereInput is used for filtering DeliveryOptionPostNord objects.
Input was generated by ent.
"""
input DeliveryOptionPostNordWhereInput {
  not: DeliveryOptionPostNordWhereInput
  and: [DeliveryOptionPostNordWhereInput!]
  or: [DeliveryOptionPostNordWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  format_zpl field predicates
  """
  formatZpl: Boolean
  formatZplNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  carrier_add_serv_post_nord edge predicates
  """
  hasCarrierAddServPostNord: Boolean
  hasCarrierAddServPostNordWith: [CarrierAdditionalServicePostNordWhereInput!]
}
type DeliveryOptionUSPS implements Node {
  id: ID!
  tenantID: ID!
  formatZpl: Boolean!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  carrierAdditionalServiceUSPS: [CarrierAdditionalServiceUSPS!]
}
"""
A connection to a list of items.
"""
type DeliveryOptionUSPSConnection {
  """
  A list of edges.
  """
  edges: [DeliveryOptionUSPSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryOptionUSPSEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryOptionUSPS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryOptionUSPSWhereInput is used for filtering DeliveryOptionUSPS objects.
Input was generated by ent.
"""
input DeliveryOptionUSPSWhereInput {
  not: DeliveryOptionUSPSWhereInput
  and: [DeliveryOptionUSPSWhereInput!]
  or: [DeliveryOptionUSPSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  format_zpl field predicates
  """
  formatZpl: Boolean
  formatZplNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  carrier_additional_service_usps edge predicates
  """
  hasCarrierAdditionalServiceUSPS: Boolean
  hasCarrierAdditionalServiceUSPSWith: [CarrierAdditionalServiceUSPSWhereInput!]
}
"""
DeliveryOptionWhereInput is used for filtering DeliveryOption objects.
Input was generated by ent.
"""
input DeliveryOptionWhereInput {
  not: DeliveryOptionWhereInput
  and: [DeliveryOptionWhereInput!]
  or: [DeliveryOptionWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  archived_at field predicates
  """
  archivedAt: Time
  archivedAtNEQ: Time
  archivedAtIn: [Time!]
  archivedAtNotIn: [Time!]
  archivedAtGT: Time
  archivedAtGTE: Time
  archivedAtLT: Time
  archivedAtLTE: Time
  archivedAtIsNil: Boolean
  archivedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  sort_order field predicates
  """
  sortOrder: Int
  sortOrderNEQ: Int
  sortOrderIn: [Int!]
  sortOrderNotIn: [Int!]
  sortOrderGT: Int
  sortOrderGTE: Int
  sortOrderLT: Int
  sortOrderLTE: Int
  """
  click_option_display_count field predicates
  """
  clickOptionDisplayCount: Int
  clickOptionDisplayCountNEQ: Int
  clickOptionDisplayCountIn: [Int!]
  clickOptionDisplayCountNotIn: [Int!]
  clickOptionDisplayCountGT: Int
  clickOptionDisplayCountGTE: Int
  clickOptionDisplayCountLT: Int
  clickOptionDisplayCountLTE: Int
  clickOptionDisplayCountIsNil: Boolean
  clickOptionDisplayCountNotNil: Boolean
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  click_collect field predicates
  """
  clickCollect: Boolean
  clickCollectNEQ: Boolean
  clickCollectIsNil: Boolean
  clickCollectNotNil: Boolean
  """
  override_sender_address field predicates
  """
  overrideSenderAddress: Boolean
  overrideSenderAddressNEQ: Boolean
  overrideSenderAddressIsNil: Boolean
  overrideSenderAddressNotNil: Boolean
  """
  override_return_address field predicates
  """
  overrideReturnAddress: Boolean
  overrideReturnAddressNEQ: Boolean
  overrideReturnAddressIsNil: Boolean
  overrideReturnAddressNotNil: Boolean
  """
  hide_delivery_option field predicates
  """
  hideDeliveryOption: Boolean
  hideDeliveryOptionNEQ: Boolean
  hideDeliveryOptionIsNil: Boolean
  hideDeliveryOptionNotNil: Boolean
  """
  delivery_estimate_from field predicates
  """
  deliveryEstimateFrom: Int
  deliveryEstimateFromNEQ: Int
  deliveryEstimateFromIn: [Int!]
  deliveryEstimateFromNotIn: [Int!]
  deliveryEstimateFromGT: Int
  deliveryEstimateFromGTE: Int
  deliveryEstimateFromLT: Int
  deliveryEstimateFromLTE: Int
  deliveryEstimateFromIsNil: Boolean
  deliveryEstimateFromNotNil: Boolean
  """
  delivery_estimate_to field predicates
  """
  deliveryEstimateTo: Int
  deliveryEstimateToNEQ: Int
  deliveryEstimateToIn: [Int!]
  deliveryEstimateToNotIn: [Int!]
  deliveryEstimateToGT: Int
  deliveryEstimateToGTE: Int
  deliveryEstimateToLT: Int
  deliveryEstimateToLTE: Int
  deliveryEstimateToIsNil: Boolean
  deliveryEstimateToNotNil: Boolean
  """
  webshipper_integration field predicates
  """
  webshipperIntegration: Boolean
  webshipperIntegrationNEQ: Boolean
  """
  webshipper_id field predicates
  """
  webshipperID: Int
  webshipperIDNEQ: Int
  webshipperIDIn: [Int!]
  webshipperIDNotIn: [Int!]
  webshipperIDGT: Int
  webshipperIDGTE: Int
  webshipperIDLT: Int
  webshipperIDLTE: Int
  webshipperIDIsNil: Boolean
  webshipperIDNotNil: Boolean
  """
  shipmondo_integration field predicates
  """
  shipmondoIntegration: Boolean
  shipmondoIntegrationNEQ: Boolean
  """
  shipmondo_delivery_option field predicates
  """
  shipmondoDeliveryOption: String
  shipmondoDeliveryOptionNEQ: String
  shipmondoDeliveryOptionIn: [String!]
  shipmondoDeliveryOptionNotIn: [String!]
  shipmondoDeliveryOptionGT: String
  shipmondoDeliveryOptionGTE: String
  shipmondoDeliveryOptionLT: String
  shipmondoDeliveryOptionLTE: String
  shipmondoDeliveryOptionContains: String
  shipmondoDeliveryOptionHasPrefix: String
  shipmondoDeliveryOptionHasSuffix: String
  shipmondoDeliveryOptionIsNil: Boolean
  shipmondoDeliveryOptionNotNil: Boolean
  shipmondoDeliveryOptionEqualFold: String
  shipmondoDeliveryOptionContainsFold: String
  """
  customs_enabled field predicates
  """
  customsEnabled: Boolean
  customsEnabledNEQ: Boolean
  """
  customs_signer field predicates
  """
  customsSigner: String
  customsSignerNEQ: String
  customsSignerIn: [String!]
  customsSignerNotIn: [String!]
  customsSignerGT: String
  customsSignerGTE: String
  customsSignerLT: String
  customsSignerLTE: String
  customsSignerContains: String
  customsSignerHasPrefix: String
  customsSignerHasSuffix: String
  customsSignerIsNil: Boolean
  customsSignerNotNil: Boolean
  customsSignerEqualFold: String
  customsSignerContainsFold: String
  """
  hide_if_company_empty field predicates
  """
  hideIfCompanyEmpty: Boolean
  hideIfCompanyEmptyNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
  """
  delivery_rule edge predicates
  """
  hasDeliveryRule: Boolean
  hasDeliveryRuleWith: [DeliveryRuleWhereInput!]
  """
  delivery_option_dao edge predicates
  """
  hasDeliveryOptionDAO: Boolean
  hasDeliveryOptionDAOWith: [DeliveryOptionDAOWhereInput!]
  """
  delivery_option_df edge predicates
  """
  hasDeliveryOptionDF: Boolean
  hasDeliveryOptionDFWith: [DeliveryOptionDFWhereInput!]
  """
  delivery_option_dsv edge predicates
  """
  hasDeliveryOptionDSV: Boolean
  hasDeliveryOptionDSVWith: [DeliveryOptionDSVWhereInput!]
  """
  delivery_option_easy_post edge predicates
  """
  hasDeliveryOptionEasyPost: Boolean
  hasDeliveryOptionEasyPostWith: [DeliveryOptionEasyPostWhereInput!]
  """
  delivery_option_gls edge predicates
  """
  hasDeliveryOptionGLS: Boolean
  hasDeliveryOptionGLSWith: [DeliveryOptionGLSWhereInput!]
  """
  delivery_option_post_nord edge predicates
  """
  hasDeliveryOptionPostNord: Boolean
  hasDeliveryOptionPostNordWith: [DeliveryOptionPostNordWhereInput!]
  """
  delivery_option_usps edge predicates
  """
  hasDeliveryOptionUSPS: Boolean
  hasDeliveryOptionUSPSWith: [DeliveryOptionUSPSWhereInput!]
  """
  delivery_option_bring edge predicates
  """
  hasDeliveryOptionBring: Boolean
  hasDeliveryOptionBringWith: [DeliveryOptionBringWhereInput!]
  """
  return_portals edge predicates
  """
  hasReturnPortals: Boolean
  hasReturnPortalsWith: [ReturnPortalWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
  """
  return_colli edge predicates
  """
  hasReturnColli: Boolean
  hasReturnColliWith: [ReturnColliWhereInput!]
  """
  carrier_service edge predicates
  """
  hasCarrierService: Boolean
  hasCarrierServiceWith: [CarrierServiceWhereInput!]
  """
  connection edge predicates
  """
  hasConnection: Boolean
  hasConnectionWith: [ConnectionWhereInput!]
  """
  connection_default edge predicates
  """
  hasConnectionDefault: Boolean
  hasConnectionDefaultWith: [ConnectionWhereInput!]
  """
  hypothesis_test_delivery_option_group_one edge predicates
  """
  hasHypothesisTestDeliveryOptionGroupOne: Boolean
  hasHypothesisTestDeliveryOptionGroupOneWith: [HypothesisTestDeliveryOptionWhereInput!]
  """
  hypothesis_test_delivery_option_group_two edge predicates
  """
  hasHypothesisTestDeliveryOptionGroupTwo: Boolean
  hasHypothesisTestDeliveryOptionGroupTwoWith: [HypothesisTestDeliveryOptionWhereInput!]
  """
  hypothesis_test_delivery_option_lookup edge predicates
  """
  hasHypothesisTestDeliveryOptionLookup: Boolean
  hasHypothesisTestDeliveryOptionLookupWith: [HypothesisTestDeliveryOptionLookupWhereInput!]
  """
  click_collect_location edge predicates
  """
  hasClickCollectLocation: Boolean
  hasClickCollectLocationWith: [LocationWhereInput!]
  """
  email_click_collect_at_store edge predicates
  """
  hasEmailClickCollectAtStore: Boolean
  hasEmailClickCollectAtStoreWith: [EmailTemplateWhereInput!]
  """
  consolidation edge predicates
  """
  hasConsolidation: Boolean
  hasConsolidationWith: [ConsolidationWhereInput!]
  """
  default_packaging edge predicates
  """
  hasDefaultPackaging: Boolean
  hasDefaultPackagingWith: [PackagingWhereInput!]
}
type DeliveryRule implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  price: Float!
  tenant: Tenant!
  """
  Since constraint groups can be && or ||, we need to have groups of multiple constraints
  """
  deliveryRuleConstraintGroup: [DeliveryRuleConstraintGroup!]
  deliveryOption: DeliveryOption
  country: [Country!]
  currency: Currency
}
"""
A connection to a list of items.
"""
type DeliveryRuleConnection {
  """
  A list of edges.
  """
  edges: [DeliveryRuleEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
type DeliveryRuleConstraint implements Node {
  id: ID!
  tenantID: ID!
  propertyType: DeliveryRuleConstraintPropertyType!
  comparison: DeliveryRuleConstraintComparison!
  selectedValue: DeliveryRuleConstraintSelectedValue!
  tenant: Tenant!
  deliveryRuleConstraintGroup: DeliveryRuleConstraintGroup!
}
"""
DeliveryRuleConstraintComparison is enum for the field comparison
"""
enum DeliveryRuleConstraintComparison @goModel(model: "delivrio.io/go/ent/deliveryruleconstraint.Comparison") {
  equals
  not_equals
  between
  outside
  less_than
  greater_than
  contains
  prefix
  suffix
}
"""
A connection to a list of items.
"""
type DeliveryRuleConstraintConnection {
  """
  A list of edges.
  """
  edges: [DeliveryRuleConstraintEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DeliveryRuleConstraintEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryRuleConstraint
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type DeliveryRuleConstraintGroup implements Node {
  id: ID!
  tenantID: ID!
  constraintLogic: DeliveryRuleConstraintGroupConstraintLogic!
  tenant: Tenant!
  deliveryRuleConstraints: [DeliveryRuleConstraint!]
  deliveryRule: DeliveryRule!
}
"""
A connection to a list of items.
"""
type DeliveryRuleConstraintGroupConnection {
  """
  A list of edges.
  """
  edges: [DeliveryRuleConstraintGroupEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
DeliveryRuleConstraintGroupConstraintLogic is enum for the field constraint_logic
"""
enum DeliveryRuleConstraintGroupConstraintLogic @goModel(model: "delivrio.io/go/ent/deliveryruleconstraintgroup.ConstraintLogic") {
  and
  or
}
"""
An edge in a connection.
"""
type DeliveryRuleConstraintGroupEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryRuleConstraintGroup
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryRuleConstraintGroupWhereInput is used for filtering DeliveryRuleConstraintGroup objects.
Input was generated by ent.
"""
input DeliveryRuleConstraintGroupWhereInput {
  not: DeliveryRuleConstraintGroupWhereInput
  and: [DeliveryRuleConstraintGroupWhereInput!]
  or: [DeliveryRuleConstraintGroupWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  constraint_logic field predicates
  """
  constraintLogic: DeliveryRuleConstraintGroupConstraintLogic
  constraintLogicNEQ: DeliveryRuleConstraintGroupConstraintLogic
  constraintLogicIn: [DeliveryRuleConstraintGroupConstraintLogic!]
  constraintLogicNotIn: [DeliveryRuleConstraintGroupConstraintLogic!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_rule_constraints edge predicates
  """
  hasDeliveryRuleConstraints: Boolean
  hasDeliveryRuleConstraintsWith: [DeliveryRuleConstraintWhereInput!]
  """
  delivery_rule edge predicates
  """
  hasDeliveryRule: Boolean
  hasDeliveryRuleWith: [DeliveryRuleWhereInput!]
}
"""
DeliveryRuleConstraintPropertyType is enum for the field property_type
"""
enum DeliveryRuleConstraintPropertyType @goModel(model: "delivrio.io/go/ent/deliveryruleconstraint.PropertyType") {
  total_weight
  cart_total
  day_of_week
  time_of_day
  product_tag
  all_products_tagged
  sku
  order_lines
  postal_code_numeric
  postal_code_string
}
"""
DeliveryRuleConstraintWhereInput is used for filtering DeliveryRuleConstraint objects.
Input was generated by ent.
"""
input DeliveryRuleConstraintWhereInput {
  not: DeliveryRuleConstraintWhereInput
  and: [DeliveryRuleConstraintWhereInput!]
  or: [DeliveryRuleConstraintWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  property_type field predicates
  """
  propertyType: DeliveryRuleConstraintPropertyType
  propertyTypeNEQ: DeliveryRuleConstraintPropertyType
  propertyTypeIn: [DeliveryRuleConstraintPropertyType!]
  propertyTypeNotIn: [DeliveryRuleConstraintPropertyType!]
  """
  comparison field predicates
  """
  comparison: DeliveryRuleConstraintComparison
  comparisonNEQ: DeliveryRuleConstraintComparison
  comparisonIn: [DeliveryRuleConstraintComparison!]
  comparisonNotIn: [DeliveryRuleConstraintComparison!]
  """
  selected_value field predicates
  """
  selectedValue: DeliveryRuleConstraintSelectedValueInput
  selectedValueNEQ: DeliveryRuleConstraintSelectedValueInput
  selectedValueIn: [DeliveryRuleConstraintSelectedValueInput!]
  selectedValueNotIn: [DeliveryRuleConstraintSelectedValueInput!]
  selectedValueGT: DeliveryRuleConstraintSelectedValueInput
  selectedValueGTE: DeliveryRuleConstraintSelectedValueInput
  selectedValueLT: DeliveryRuleConstraintSelectedValueInput
  selectedValueLTE: DeliveryRuleConstraintSelectedValueInput
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_rule_constraint_group edge predicates
  """
  hasDeliveryRuleConstraintGroup: Boolean
  hasDeliveryRuleConstraintGroupWith: [DeliveryRuleConstraintGroupWhereInput!]
}
"""
An edge in a connection.
"""
type DeliveryRuleEdge {
  """
  The item at the end of the edge.
  """
  node: DeliveryRule
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DeliveryRuleWhereInput is used for filtering DeliveryRule objects.
Input was generated by ent.
"""
input DeliveryRuleWhereInput {
  not: DeliveryRuleWhereInput
  and: [DeliveryRuleWhereInput!]
  or: [DeliveryRuleWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  price field predicates
  """
  price: Float
  priceNEQ: Float
  priceIn: [Float!]
  priceNotIn: [Float!]
  priceGT: Float
  priceGTE: Float
  priceLT: Float
  priceLTE: Float
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_rule_constraint_group edge predicates
  """
  hasDeliveryRuleConstraintGroup: Boolean
  hasDeliveryRuleConstraintGroupWith: [DeliveryRuleConstraintGroupWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  country edge predicates
  """
  hasCountry: Boolean
  hasCountryWith: [CountryWhereInput!]
  """
  currency edge predicates
  """
  hasCurrency: Boolean
  hasCurrencyWith: [CurrencyWhereInput!]
}
type Document implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  htmlTemplate: String
  htmlHeader: String
  htmlFooter: String
  """
  Facilitates printing by saving the latest version of this document
  """
  lastBase64Pdf: String @goField(name: "LastBase64Pdf", forceResolver: false)
  mergeType: DocumentMergeType!
  paperSize: DocumentPaperSize!
  startAt: Time!
  endAt: Time!
  createdAt: Time!
  tenant: Tenant!
  carrierBrand: CarrierBrand
  connectionPackingSlip: [Connection!]
}
"""
A connection to a list of items.
"""
type DocumentConnection {
  """
  A list of edges.
  """
  edges: [DocumentEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type DocumentEdge {
  """
  The item at the end of the edge.
  """
  node: Document
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type DocumentFile implements Node {
  id: ID!
  tenantID: ID!
  createdAt: Time!
  storageType: DocumentFileStorageType!
  storagePath: String
  storagePathZpl: String
  docType: DocumentFileDocType!
  dataPdfBase64: String
  dataZplBase64: String
  tenant: Tenant!
  colli: Colli
  shipmentParcel: ShipmentParcel
}
"""
A connection to a list of items.
"""
type DocumentFileConnection {
  """
  A list of edges.
  """
  edges: [DocumentFileEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
DocumentFileDocType is enum for the field doc_type
"""
enum DocumentFileDocType @goModel(model: "delivrio.io/go/ent/documentfile.DocType") {
  carrier_label
  packing_slip
}
"""
An edge in a connection.
"""
type DocumentFileEdge {
  """
  The item at the end of the edge.
  """
  node: DocumentFile
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
DocumentFileStorageType is enum for the field storage_type
"""
enum DocumentFileStorageType @goModel(model: "delivrio.io/go/ent/documentfile.StorageType") {
  database
  bucket
}
"""
DocumentFileWhereInput is used for filtering DocumentFile objects.
Input was generated by ent.
"""
input DocumentFileWhereInput {
  not: DocumentFileWhereInput
  and: [DocumentFileWhereInput!]
  or: [DocumentFileWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  storage_type field predicates
  """
  storageType: DocumentFileStorageType
  storageTypeNEQ: DocumentFileStorageType
  storageTypeIn: [DocumentFileStorageType!]
  storageTypeNotIn: [DocumentFileStorageType!]
  """
  storage_path field predicates
  """
  storagePath: String
  storagePathNEQ: String
  storagePathIn: [String!]
  storagePathNotIn: [String!]
  storagePathGT: String
  storagePathGTE: String
  storagePathLT: String
  storagePathLTE: String
  storagePathContains: String
  storagePathHasPrefix: String
  storagePathHasSuffix: String
  storagePathIsNil: Boolean
  storagePathNotNil: Boolean
  storagePathEqualFold: String
  storagePathContainsFold: String
  """
  storage_path_zpl field predicates
  """
  storagePathZpl: String
  storagePathZplNEQ: String
  storagePathZplIn: [String!]
  storagePathZplNotIn: [String!]
  storagePathZplGT: String
  storagePathZplGTE: String
  storagePathZplLT: String
  storagePathZplLTE: String
  storagePathZplContains: String
  storagePathZplHasPrefix: String
  storagePathZplHasSuffix: String
  storagePathZplIsNil: Boolean
  storagePathZplNotNil: Boolean
  storagePathZplEqualFold: String
  storagePathZplContainsFold: String
  """
  doc_type field predicates
  """
  docType: DocumentFileDocType
  docTypeNEQ: DocumentFileDocType
  docTypeIn: [DocumentFileDocType!]
  docTypeNotIn: [DocumentFileDocType!]
  """
  data_pdf_base64 field predicates
  """
  dataPdfBase64: String
  dataPdfBase64NEQ: String
  dataPdfBase64In: [String!]
  dataPdfBase64NotIn: [String!]
  dataPdfBase64GT: String
  dataPdfBase64GTE: String
  dataPdfBase64LT: String
  dataPdfBase64LTE: String
  dataPdfBase64Contains: String
  dataPdfBase64HasPrefix: String
  dataPdfBase64HasSuffix: String
  dataPdfBase64IsNil: Boolean
  dataPdfBase64NotNil: Boolean
  dataPdfBase64EqualFold: String
  dataPdfBase64ContainsFold: String
  """
  data_zpl_base64 field predicates
  """
  dataZplBase64: String
  dataZplBase64NEQ: String
  dataZplBase64In: [String!]
  dataZplBase64NotIn: [String!]
  dataZplBase64GT: String
  dataZplBase64GTE: String
  dataZplBase64LT: String
  dataZplBase64LTE: String
  dataZplBase64Contains: String
  dataZplBase64HasPrefix: String
  dataZplBase64HasSuffix: String
  dataZplBase64IsNil: Boolean
  dataZplBase64NotNil: Boolean
  dataZplBase64EqualFold: String
  dataZplBase64ContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
  """
  shipment_parcel edge predicates
  """
  hasShipmentParcel: Boolean
  hasShipmentParcelWith: [ShipmentParcelWhereInput!]
}
"""
DocumentMergeType is enum for the field merge_type
"""
enum DocumentMergeType @goModel(model: "delivrio.io/go/ent/document.MergeType") {
  Orders
  PackingSlip
  Waybill
}
"""
DocumentPaperSize is enum for the field paper_size
"""
enum DocumentPaperSize @goModel(model: "delivrio.io/go/ent/document.PaperSize") {
  A4
  Four_x_six
}
"""
DocumentWhereInput is used for filtering Document objects.
Input was generated by ent.
"""
input DocumentWhereInput {
  not: DocumentWhereInput
  and: [DocumentWhereInput!]
  or: [DocumentWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  html_template field predicates
  """
  htmlTemplate: String
  htmlTemplateNEQ: String
  htmlTemplateIn: [String!]
  htmlTemplateNotIn: [String!]
  htmlTemplateGT: String
  htmlTemplateGTE: String
  htmlTemplateLT: String
  htmlTemplateLTE: String
  htmlTemplateContains: String
  htmlTemplateHasPrefix: String
  htmlTemplateHasSuffix: String
  htmlTemplateIsNil: Boolean
  htmlTemplateNotNil: Boolean
  htmlTemplateEqualFold: String
  htmlTemplateContainsFold: String
  """
  html_header field predicates
  """
  htmlHeader: String
  htmlHeaderNEQ: String
  htmlHeaderIn: [String!]
  htmlHeaderNotIn: [String!]
  htmlHeaderGT: String
  htmlHeaderGTE: String
  htmlHeaderLT: String
  htmlHeaderLTE: String
  htmlHeaderContains: String
  htmlHeaderHasPrefix: String
  htmlHeaderHasSuffix: String
  htmlHeaderIsNil: Boolean
  htmlHeaderNotNil: Boolean
  htmlHeaderEqualFold: String
  htmlHeaderContainsFold: String
  """
  html_footer field predicates
  """
  htmlFooter: String
  htmlFooterNEQ: String
  htmlFooterIn: [String!]
  htmlFooterNotIn: [String!]
  htmlFooterGT: String
  htmlFooterGTE: String
  htmlFooterLT: String
  htmlFooterLTE: String
  htmlFooterContains: String
  htmlFooterHasPrefix: String
  htmlFooterHasSuffix: String
  htmlFooterIsNil: Boolean
  htmlFooterNotNil: Boolean
  htmlFooterEqualFold: String
  htmlFooterContainsFold: String
  """
  last_base64_pdf field predicates
  """
  lastBase64Pdf: String
  lastBase64PdfNEQ: String
  lastBase64PdfIn: [String!]
  lastBase64PdfNotIn: [String!]
  lastBase64PdfGT: String
  lastBase64PdfGTE: String
  lastBase64PdfLT: String
  lastBase64PdfLTE: String
  lastBase64PdfContains: String
  lastBase64PdfHasPrefix: String
  lastBase64PdfHasSuffix: String
  lastBase64PdfIsNil: Boolean
  lastBase64PdfNotNil: Boolean
  lastBase64PdfEqualFold: String
  lastBase64PdfContainsFold: String
  """
  merge_type field predicates
  """
  mergeType: DocumentMergeType
  mergeTypeNEQ: DocumentMergeType
  mergeTypeIn: [DocumentMergeType!]
  mergeTypeNotIn: [DocumentMergeType!]
  """
  paper_size field predicates
  """
  paperSize: DocumentPaperSize
  paperSizeNEQ: DocumentPaperSize
  paperSizeIn: [DocumentPaperSize!]
  paperSizeNotIn: [DocumentPaperSize!]
  """
  start_at field predicates
  """
  startAt: Time
  startAtNEQ: Time
  startAtIn: [Time!]
  startAtNotIn: [Time!]
  startAtGT: Time
  startAtGTE: Time
  startAtLT: Time
  startAtLTE: Time
  """
  end_at field predicates
  """
  endAt: Time
  endAtNEQ: Time
  endAtIn: [Time!]
  endAtNotIn: [Time!]
  endAtGT: Time
  endAtGTE: Time
  endAtLT: Time
  endAtLTE: Time
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier_brand edge predicates
  """
  hasCarrierBrand: Boolean
  hasCarrierBrandWith: [CarrierBrandWhereInput!]
  """
  connection_packing_slip edge predicates
  """
  hasConnectionPackingSlip: Boolean
  hasConnectionPackingSlipWith: [ConnectionWhereInput!]
}
type EmailTemplate implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  subject: String!
  htmlTemplate: String!
  mergeType: EmailTemplateMergeType!
  createdAt: Time
  updatedAt: Time!
  tenant: Tenant!
  returnPortalConfirmationLabel: [ReturnPortal!]
  returnPortalConfirmationQrCode: [ReturnPortal!]
  returnPortalReceived: [ReturnPortal!]
  returnPortalAccepted: [ReturnPortal!]
  deliveryOptionClickCollectAtStore: [DeliveryOption!]
  notifications: [Notification!]
}
"""
A connection to a list of items.
"""
type EmailTemplateConnection {
  """
  A list of edges.
  """
  edges: [EmailTemplateEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type EmailTemplateEdge {
  """
  The item at the end of the edge.
  """
  node: EmailTemplate
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
EmailTemplateMergeType is enum for the field merge_type
"""
enum EmailTemplateMergeType @goModel(model: "delivrio.io/go/ent/emailtemplate.MergeType") {
  return_colli_label
  return_colli_qr
  return_colli_received
  return_colli_accepted
  order_confirmation
  order_picked
}
"""
EmailTemplateWhereInput is used for filtering EmailTemplate objects.
Input was generated by ent.
"""
input EmailTemplateWhereInput {
  not: EmailTemplateWhereInput
  and: [EmailTemplateWhereInput!]
  or: [EmailTemplateWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  subject field predicates
  """
  subject: String
  subjectNEQ: String
  subjectIn: [String!]
  subjectNotIn: [String!]
  subjectGT: String
  subjectGTE: String
  subjectLT: String
  subjectLTE: String
  subjectContains: String
  subjectHasPrefix: String
  subjectHasSuffix: String
  subjectEqualFold: String
  subjectContainsFold: String
  """
  html_template field predicates
  """
  htmlTemplate: String
  htmlTemplateNEQ: String
  htmlTemplateIn: [String!]
  htmlTemplateNotIn: [String!]
  htmlTemplateGT: String
  htmlTemplateGTE: String
  htmlTemplateLT: String
  htmlTemplateLTE: String
  htmlTemplateContains: String
  htmlTemplateHasPrefix: String
  htmlTemplateHasSuffix: String
  htmlTemplateEqualFold: String
  htmlTemplateContainsFold: String
  """
  merge_type field predicates
  """
  mergeType: EmailTemplateMergeType
  mergeTypeNEQ: EmailTemplateMergeType
  mergeTypeIn: [EmailTemplateMergeType!]
  mergeTypeNotIn: [EmailTemplateMergeType!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  return_portal_confirmation_label edge predicates
  """
  hasReturnPortalConfirmationLabel: Boolean
  hasReturnPortalConfirmationLabelWith: [ReturnPortalWhereInput!]
  """
  return_portal_confirmation_qr_code edge predicates
  """
  hasReturnPortalConfirmationQrCode: Boolean
  hasReturnPortalConfirmationQrCodeWith: [ReturnPortalWhereInput!]
  """
  return_portal_received edge predicates
  """
  hasReturnPortalReceived: Boolean
  hasReturnPortalReceivedWith: [ReturnPortalWhereInput!]
  """
  return_portal_accepted edge predicates
  """
  hasReturnPortalAccepted: Boolean
  hasReturnPortalAcceptedWith: [ReturnPortalWhereInput!]
  """
  delivery_option_click_collect_at_store edge predicates
  """
  hasDeliveryOptionClickCollectAtStore: Boolean
  hasDeliveryOptionClickCollectAtStoreWith: [DeliveryOptionWhereInput!]
  """
  notifications edge predicates
  """
  hasNotifications: Boolean
  hasNotificationsWith: [NotificationWhereInput!]
}
type HypothesisTest implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  active: Boolean!
  tenant: Tenant!
  hypothesisTestDeliveryOption: HypothesisTestDeliveryOption
  connection: Connection!
}
"""
A connection to a list of items.
"""
type HypothesisTestConnection {
  """
  A list of edges.
  """
  edges: [HypothesisTestEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
type HypothesisTestDeliveryOption implements Node {
  id: ID!
  tenantID: ID!
  randomizeWithinGroupSort: Boolean!
  byIntervalRotation: Boolean!
  rotationIntervalHours: Int!
  byOrder: Boolean!
  tenant: Tenant!
  hypothesisTest: HypothesisTest!
  hypothesisTestDeliveryOptionRequest: [HypothesisTestDeliveryOptionRequest!]
  deliveryOptionGroupOne: [DeliveryOption!]
  deliveryOptionGroupTwo: [DeliveryOption!]
}
"""
A connection to a list of items.
"""
type HypothesisTestDeliveryOptionConnection {
  """
  A list of edges.
  """
  edges: [HypothesisTestDeliveryOptionEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type HypothesisTestDeliveryOptionEdge {
  """
  The item at the end of the edge.
  """
  node: HypothesisTestDeliveryOption
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type HypothesisTestDeliveryOptionLookup implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  deliveryOption: DeliveryOption!
  hypothesisTestDeliveryOptionRequest: HypothesisTestDeliveryOptionRequest!
}
"""
A connection to a list of items.
"""
type HypothesisTestDeliveryOptionLookupConnection {
  """
  A list of edges.
  """
  edges: [HypothesisTestDeliveryOptionLookupEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type HypothesisTestDeliveryOptionLookupEdge {
  """
  The item at the end of the edge.
  """
  node: HypothesisTestDeliveryOptionLookup
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
HypothesisTestDeliveryOptionLookupWhereInput is used for filtering HypothesisTestDeliveryOptionLookup objects.
Input was generated by ent.
"""
input HypothesisTestDeliveryOptionLookupWhereInput {
  not: HypothesisTestDeliveryOptionLookupWhereInput
  and: [HypothesisTestDeliveryOptionLookupWhereInput!]
  or: [HypothesisTestDeliveryOptionLookupWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  hypothesis_test_delivery_option_request edge predicates
  """
  hasHypothesisTestDeliveryOptionRequest: Boolean
  hasHypothesisTestDeliveryOptionRequestWith: [HypothesisTestDeliveryOptionRequestWhereInput!]
}
type HypothesisTestDeliveryOptionRequest implements Node {
  id: ID!
  tenantID: ID!
  orderHash: String!
  shippingAddressHash: String!
  isControlGroup: Boolean!
  requestCount: Int!
  createdAt: Time!
  lastRequestedAt: Time!
  tenant: Tenant!
  hypothesisTestDeliveryOption: HypothesisTestDeliveryOption!
  order: Order
  hypothesisTestDeliveryOptionLookup: [HypothesisTestDeliveryOptionLookup!]
}
"""
A connection to a list of items.
"""
type HypothesisTestDeliveryOptionRequestConnection {
  """
  A list of edges.
  """
  edges: [HypothesisTestDeliveryOptionRequestEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type HypothesisTestDeliveryOptionRequestEdge {
  """
  The item at the end of the edge.
  """
  node: HypothesisTestDeliveryOptionRequest
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
HypothesisTestDeliveryOptionRequestWhereInput is used for filtering HypothesisTestDeliveryOptionRequest objects.
Input was generated by ent.
"""
input HypothesisTestDeliveryOptionRequestWhereInput {
  not: HypothesisTestDeliveryOptionRequestWhereInput
  and: [HypothesisTestDeliveryOptionRequestWhereInput!]
  or: [HypothesisTestDeliveryOptionRequestWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  order_hash field predicates
  """
  orderHash: String
  orderHashNEQ: String
  orderHashIn: [String!]
  orderHashNotIn: [String!]
  orderHashGT: String
  orderHashGTE: String
  orderHashLT: String
  orderHashLTE: String
  orderHashContains: String
  orderHashHasPrefix: String
  orderHashHasSuffix: String
  orderHashEqualFold: String
  orderHashContainsFold: String
  """
  shipping_address_hash field predicates
  """
  shippingAddressHash: String
  shippingAddressHashNEQ: String
  shippingAddressHashIn: [String!]
  shippingAddressHashNotIn: [String!]
  shippingAddressHashGT: String
  shippingAddressHashGTE: String
  shippingAddressHashLT: String
  shippingAddressHashLTE: String
  shippingAddressHashContains: String
  shippingAddressHashHasPrefix: String
  shippingAddressHashHasSuffix: String
  shippingAddressHashEqualFold: String
  shippingAddressHashContainsFold: String
  """
  is_control_group field predicates
  """
  isControlGroup: Boolean
  isControlGroupNEQ: Boolean
  """
  request_count field predicates
  """
  requestCount: Int
  requestCountNEQ: Int
  requestCountIn: [Int!]
  requestCountNotIn: [Int!]
  requestCountGT: Int
  requestCountGTE: Int
  requestCountLT: Int
  requestCountLTE: Int
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  last_requested_at field predicates
  """
  lastRequestedAt: Time
  lastRequestedAtNEQ: Time
  lastRequestedAtIn: [Time!]
  lastRequestedAtNotIn: [Time!]
  lastRequestedAtGT: Time
  lastRequestedAtGTE: Time
  lastRequestedAtLT: Time
  lastRequestedAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  hypothesis_test_delivery_option edge predicates
  """
  hasHypothesisTestDeliveryOption: Boolean
  hasHypothesisTestDeliveryOptionWith: [HypothesisTestDeliveryOptionWhereInput!]
  """
  order edge predicates
  """
  hasOrder: Boolean
  hasOrderWith: [OrderWhereInput!]
  """
  hypothesis_test_delivery_option_lookup edge predicates
  """
  hasHypothesisTestDeliveryOptionLookup: Boolean
  hasHypothesisTestDeliveryOptionLookupWith: [HypothesisTestDeliveryOptionLookupWhereInput!]
}
"""
HypothesisTestDeliveryOptionWhereInput is used for filtering HypothesisTestDeliveryOption objects.
Input was generated by ent.
"""
input HypothesisTestDeliveryOptionWhereInput {
  not: HypothesisTestDeliveryOptionWhereInput
  and: [HypothesisTestDeliveryOptionWhereInput!]
  or: [HypothesisTestDeliveryOptionWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  randomize_within_group_sort field predicates
  """
  randomizeWithinGroupSort: Boolean
  randomizeWithinGroupSortNEQ: Boolean
  """
  by_interval_rotation field predicates
  """
  byIntervalRotation: Boolean
  byIntervalRotationNEQ: Boolean
  """
  rotation_interval_hours field predicates
  """
  rotationIntervalHours: Int
  rotationIntervalHoursNEQ: Int
  rotationIntervalHoursIn: [Int!]
  rotationIntervalHoursNotIn: [Int!]
  rotationIntervalHoursGT: Int
  rotationIntervalHoursGTE: Int
  rotationIntervalHoursLT: Int
  rotationIntervalHoursLTE: Int
  """
  by_order field predicates
  """
  byOrder: Boolean
  byOrderNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  hypothesis_test edge predicates
  """
  hasHypothesisTest: Boolean
  hasHypothesisTestWith: [HypothesisTestWhereInput!]
  """
  hypothesis_test_delivery_option_request edge predicates
  """
  hasHypothesisTestDeliveryOptionRequest: Boolean
  hasHypothesisTestDeliveryOptionRequestWith: [HypothesisTestDeliveryOptionRequestWhereInput!]
  """
  delivery_option_group_one edge predicates
  """
  hasDeliveryOptionGroupOne: Boolean
  hasDeliveryOptionGroupOneWith: [DeliveryOptionWhereInput!]
  """
  delivery_option_group_two edge predicates
  """
  hasDeliveryOptionGroupTwo: Boolean
  hasDeliveryOptionGroupTwoWith: [DeliveryOptionWhereInput!]
}
"""
An edge in a connection.
"""
type HypothesisTestEdge {
  """
  The item at the end of the edge.
  """
  node: HypothesisTest
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
HypothesisTestWhereInput is used for filtering HypothesisTest objects.
Input was generated by ent.
"""
input HypothesisTestWhereInput {
  not: HypothesisTestWhereInput
  and: [HypothesisTestWhereInput!]
  or: [HypothesisTestWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  active field predicates
  """
  active: Boolean
  activeNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  hypothesis_test_delivery_option edge predicates
  """
  hasHypothesisTestDeliveryOption: Boolean
  hasHypothesisTestDeliveryOptionWith: [HypothesisTestDeliveryOptionWhereInput!]
  """
  connection edge predicates
  """
  hasConnection: Boolean
  hasConnectionWith: [ConnectionWhereInput!]
}
type InventoryItem implements Node {
  id: ID!
  tenantID: ID!
  externalID: String
  """
  Used when country specific code not available
  """
  code: String
  """
  Duplicated to match Shopify InventoryItem/ProductVariant
  """
  sku: String
  tenant: Tenant!
  """
  Takes precedent over general HS code
  """
  countryHarmonizedCode: [CountryHarmonizedCode!]
  """
  Can be null in Shopify
  """
  countryOfOrigin: Country
  productVariant: ProductVariant!
}
"""
A connection to a list of items.
"""
type InventoryItemConnection {
  """
  A list of edges.
  """
  edges: [InventoryItemEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type InventoryItemEdge {
  """
  The item at the end of the edge.
  """
  node: InventoryItem
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
InventoryItemWhereInput is used for filtering InventoryItem objects.
Input was generated by ent.
"""
input InventoryItemWhereInput {
  not: InventoryItemWhereInput
  and: [InventoryItemWhereInput!]
  or: [InventoryItemWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  external_ID field predicates
  """
  externalID: String
  externalIDNEQ: String
  externalIDIn: [String!]
  externalIDNotIn: [String!]
  externalIDGT: String
  externalIDGTE: String
  externalIDLT: String
  externalIDLTE: String
  externalIDContains: String
  externalIDHasPrefix: String
  externalIDHasSuffix: String
  externalIDIsNil: Boolean
  externalIDNotNil: Boolean
  externalIDEqualFold: String
  externalIDContainsFold: String
  """
  code field predicates
  """
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeIsNil: Boolean
  codeNotNil: Boolean
  codeEqualFold: String
  codeContainsFold: String
  """
  sku field predicates
  """
  sku: String
  skuNEQ: String
  skuIn: [String!]
  skuNotIn: [String!]
  skuGT: String
  skuGTE: String
  skuLT: String
  skuLTE: String
  skuContains: String
  skuHasPrefix: String
  skuHasSuffix: String
  skuIsNil: Boolean
  skuNotNil: Boolean
  skuEqualFold: String
  skuContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  country_harmonized_code edge predicates
  """
  hasCountryHarmonizedCode: Boolean
  hasCountryHarmonizedCodeWith: [CountryHarmonizedCodeWhereInput!]
  """
  country_of_origin edge predicates
  """
  hasCountryOfOrigin: Boolean
  hasCountryOfOriginWith: [CountryWhereInput!]
  """
  product_variant edge predicates
  """
  hasProductVariant: Boolean
  hasProductVariantWith: [ProductVariantWhereInput!]
}
type Language implements Node {
  id: ID!
  label: String!
  internalID: LanguageInternalID!
  users: [User!]
  language: [Tenant!]
}
"""
A connection to a list of items.
"""
type LanguageConnection {
  """
  A list of edges.
  """
  edges: [LanguageEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type LanguageEdge {
  """
  The item at the end of the edge.
  """
  node: Language
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
LanguageInternalID is enum for the field internal_id
"""
enum LanguageInternalID @goModel(model: "delivrio.io/go/ent/language.InternalID") {
  EN
  DA
}
"""
LanguageWhereInput is used for filtering Language objects.
Input was generated by ent.
"""
input LanguageWhereInput {
  not: LanguageWhereInput
  and: [LanguageWhereInput!]
  or: [LanguageWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  internal_id field predicates
  """
  internalID: LanguageInternalID
  internalIDNEQ: LanguageInternalID
  internalIDIn: [LanguageInternalID!]
  internalIDNotIn: [LanguageInternalID!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  """
  language edge predicates
  """
  hasLanguage: Boolean
  hasLanguageWith: [TenantWhereInput!]
}
type Location implements Node {
  id: ID!
  tenantID: ID!
  """
  Location name, not used in the address
  """
  name: String!
  tenant: Tenant!
  address: Address!
  locationTags: [LocationTag!]!
  senderConnection: [Connection!]
  pickupConnection: [Connection!]
  returnConnection: [Connection!]
  sellerConnection: [Connection!]
  returnPortal: [ReturnPortal!]
  deliveryOption: [DeliveryOption!]
  colli: [Colli!]
}
"""
A connection to a list of items.
"""
type LocationConnection {
  """
  A list of edges.
  """
  edges: [LocationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type LocationEdge {
  """
  The item at the end of the edge.
  """
  node: Location
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type LocationTag implements Node {
  id: ID!
  label: String!
  internalID: String!
  location: [Location!]
}
"""
A connection to a list of items.
"""
type LocationTagConnection {
  """
  A list of edges.
  """
  edges: [LocationTagEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type LocationTagEdge {
  """
  The item at the end of the edge.
  """
  node: LocationTag
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
LocationTagWhereInput is used for filtering LocationTag objects.
Input was generated by ent.
"""
input LocationTagWhereInput {
  not: LocationTagWhereInput
  and: [LocationTagWhereInput!]
  or: [LocationTagWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  internal_id field predicates
  """
  internalID: String
  internalIDNEQ: String
  internalIDIn: [String!]
  internalIDNotIn: [String!]
  internalIDGT: String
  internalIDGTE: String
  internalIDLT: String
  internalIDLTE: String
  internalIDContains: String
  internalIDHasPrefix: String
  internalIDHasSuffix: String
  internalIDEqualFold: String
  internalIDContainsFold: String
  """
  location edge predicates
  """
  hasLocation: Boolean
  hasLocationWith: [LocationWhereInput!]
}
"""
LocationWhereInput is used for filtering Location objects.
Input was generated by ent.
"""
input LocationWhereInput {
  not: LocationWhereInput
  and: [LocationWhereInput!]
  or: [LocationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  address edge predicates
  """
  hasAddress: Boolean
  hasAddressWith: [AddressWhereInput!]
  """
  location_tags edge predicates
  """
  hasLocationTags: Boolean
  hasLocationTagsWith: [LocationTagWhereInput!]
  """
  sender_connection edge predicates
  """
  hasSenderConnection: Boolean
  hasSenderConnectionWith: [ConnectionWhereInput!]
  """
  pickup_connection edge predicates
  """
  hasPickupConnection: Boolean
  hasPickupConnectionWith: [ConnectionWhereInput!]
  """
  return_connection edge predicates
  """
  hasReturnConnection: Boolean
  hasReturnConnectionWith: [ConnectionWhereInput!]
  """
  seller_connection edge predicates
  """
  hasSellerConnection: Boolean
  hasSellerConnectionWith: [ConnectionWhereInput!]
  """
  return_portal edge predicates
  """
  hasReturnPortal: Boolean
  hasReturnPortalWith: [ReturnPortalWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
}
"""
An object with an ID.
Follows the [Relay Global Object Identification Specification](https://relay.dev/graphql/objectidentification.htm)
"""
interface Node @goModel(model: "delivrio.io/go/ent.Noder") {
  """
  The id of the object.
  """
  id: ID!
}
type Notification implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  active: Boolean!
  tenant: Tenant!
  connection: Connection!
  emailTemplate: EmailTemplate!
}
"""
A connection to a list of items.
"""
type NotificationConnection {
  """
  A list of edges.
  """
  edges: [NotificationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type NotificationEdge {
  """
  The item at the end of the edge.
  """
  node: Notification
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
NotificationWhereInput is used for filtering Notification objects.
Input was generated by ent.
"""
input NotificationWhereInput {
  not: NotificationWhereInput
  and: [NotificationWhereInput!]
  or: [NotificationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  active field predicates
  """
  active: Boolean
  activeNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  connection edge predicates
  """
  hasConnection: Boolean
  hasConnectionWith: [ConnectionWhereInput!]
  """
  email_template edge predicates
  """
  hasEmailTemplate: Boolean
  hasEmailTemplateWith: [EmailTemplateWhereInput!]
}
type OTKRequests implements Node {
  id: ID!
  tenantID: ID!
  otk: String!
  tenant: Tenant!
  users: User
}
"""
OTKRequestsWhereInput is used for filtering OTKRequests objects.
Input was generated by ent.
"""
input OTKRequestsWhereInput {
  not: OTKRequestsWhereInput
  and: [OTKRequestsWhereInput!]
  or: [OTKRequestsWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  otk field predicates
  """
  otk: String
  otkNEQ: String
  otkIn: [String!]
  otkNotIn: [String!]
  otkGT: String
  otkGTE: String
  otkLT: String
  otkLTE: String
  otkContains: String
  otkHasPrefix: String
  otkHasSuffix: String
  otkEqualFold: String
  otkContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
}
type Order implements Node {
  id: ID!
  tenantID: ID!
  orderPublicID: String!
  externalID: String
  commentInternal: String
  commentExternal: String
  createdAt: Time!
  emailSyncConfirmationAt: Time
  status: OrderStatus!
  tenant: Tenant!
  orderHistory: [OrderHistory!]
  connection: Connection!
  colli: [Colli!]
  returnColli: [ReturnColli!]
  hypothesisTestDeliveryOptionRequest: HypothesisTestDeliveryOptionRequest
  """
  Orders may be added to consolidation either through a pallet or directly
  """
  pallet: Pallet
  """
  Orders may be added to consolidation either through a pallet or directly
  """
  consolidation: Consolidation
}
"""
A connection to a list of items.
"""
type OrderConnection {
  """
  A list of edges.
  """
  edges: [OrderEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  """
  Specifies an ascending order for a given `orderBy` argument.
  """
  ASC
  """
  Specifies a descending order for a given `orderBy` argument.
  """
  DESC
}
"""
An edge in a connection.
"""
type OrderEdge {
  """
  The item at the end of the edge.
  """
  node: Order
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type OrderHistory implements Node {
  id: ID!
  tenantID: ID!
  description: String!
  type: OrderHistoryType!
  changeHistory: ChangeHistory!
  tenant: Tenant!
  order: Order!
}
"""
OrderHistoryType is enum for the field type
"""
enum OrderHistoryType @goModel(model: "delivrio.io/go/ent/orderhistory.Type") {
  create
  update
  delete
  notify
}
"""
OrderHistoryWhereInput is used for filtering OrderHistory objects.
Input was generated by ent.
"""
input OrderHistoryWhereInput {
  not: OrderHistoryWhereInput
  and: [OrderHistoryWhereInput!]
  or: [OrderHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  type field predicates
  """
  type: OrderHistoryType
  typeNEQ: OrderHistoryType
  typeIn: [OrderHistoryType!]
  typeNotIn: [OrderHistoryType!]
  """
  change_history edge predicates
  """
  hasChangeHistory: Boolean
  hasChangeHistoryWith: [ChangeHistoryWhereInput!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  order edge predicates
  """
  hasOrder: Boolean
  hasOrderWith: [OrderWhereInput!]
}
type OrderLine implements Node {
  id: ID!
  tenantID: ID!
  unitPrice: Float!
  """
  Amount removed from unit_price*units for customs docs
  """
  discountAllocationAmount: Float!
  externalID: String
  units: Int!
  createdAt: Time
  updatedAt: Time!
  productVariantID: ID!
  colliID: ID!
  tenant: Tenant!
  productVariant: ProductVariant!
  colli: Colli!
  returnOrderLine: [ReturnOrderLine!]
  currency: Currency!
}
"""
OrderLineWhereInput is used for filtering OrderLine objects.
Input was generated by ent.
"""
input OrderLineWhereInput {
  not: OrderLineWhereInput
  and: [OrderLineWhereInput!]
  or: [OrderLineWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  unit_price field predicates
  """
  unitPrice: Float
  unitPriceNEQ: Float
  unitPriceIn: [Float!]
  unitPriceNotIn: [Float!]
  unitPriceGT: Float
  unitPriceGTE: Float
  unitPriceLT: Float
  unitPriceLTE: Float
  """
  discount_allocation_amount field predicates
  """
  discountAllocationAmount: Float
  discountAllocationAmountNEQ: Float
  discountAllocationAmountIn: [Float!]
  discountAllocationAmountNotIn: [Float!]
  discountAllocationAmountGT: Float
  discountAllocationAmountGTE: Float
  discountAllocationAmountLT: Float
  discountAllocationAmountLTE: Float
  """
  external_id field predicates
  """
  externalID: String
  externalIDNEQ: String
  externalIDIn: [String!]
  externalIDNotIn: [String!]
  externalIDGT: String
  externalIDGTE: String
  externalIDLT: String
  externalIDLTE: String
  externalIDContains: String
  externalIDHasPrefix: String
  externalIDHasSuffix: String
  externalIDIsNil: Boolean
  externalIDNotNil: Boolean
  externalIDEqualFold: String
  externalIDContainsFold: String
  """
  units field predicates
  """
  units: Int
  unitsNEQ: Int
  unitsIn: [Int!]
  unitsNotIn: [Int!]
  unitsGT: Int
  unitsGTE: Int
  unitsLT: Int
  unitsLTE: Int
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  product_variant_id field predicates
  """
  productVariantID: ID
  productVariantIDNEQ: ID
  productVariantIDIn: [ID!]
  productVariantIDNotIn: [ID!]
  productVariantIDGT: ID
  productVariantIDGTE: ID
  productVariantIDLT: ID
  productVariantIDLTE: ID
  productVariantIDContains: ID
  productVariantIDHasPrefix: ID
  productVariantIDHasSuffix: ID
  productVariantIDEqualFold: ID
  productVariantIDContainsFold: ID
  """
  colli_id field predicates
  """
  colliID: ID
  colliIDNEQ: ID
  colliIDIn: [ID!]
  colliIDNotIn: [ID!]
  colliIDGT: ID
  colliIDGTE: ID
  colliIDLT: ID
  colliIDLTE: ID
  colliIDContains: ID
  colliIDHasPrefix: ID
  colliIDHasSuffix: ID
  colliIDEqualFold: ID
  colliIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  product_variant edge predicates
  """
  hasProductVariant: Boolean
  hasProductVariantWith: [ProductVariantWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
  """
  return_order_line edge predicates
  """
  hasReturnOrderLine: Boolean
  hasReturnOrderLineWith: [ReturnOrderLineWhereInput!]
  """
  currency edge predicates
  """
  hasCurrency: Boolean
  hasCurrencyWith: [CurrencyWhereInput!]
}
"""
Ordering options for Order connections
"""
input OrderOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Orders.
  """
  field: OrderOrderField!
}
"""
Properties by which Order connections can be ordered.
"""
enum OrderOrderField {
  CREATED_AT
}
type OrderSender implements Node {
  id: ID!
  tenantID: ID!
  firstName: String!
  lastName: String!
  email: String!
  phoneNumber: String!
  vatNumber: String!
  tenant: Tenant!
}
"""
A connection to a list of items.
"""
type OrderSenderConnection {
  """
  A list of edges.
  """
  edges: [OrderSenderEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type OrderSenderEdge {
  """
  The item at the end of the edge.
  """
  node: OrderSender
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
OrderSenderWhereInput is used for filtering OrderSender objects.
Input was generated by ent.
"""
input OrderSenderWhereInput {
  not: OrderSenderWhereInput
  and: [OrderSenderWhereInput!]
  or: [OrderSenderWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  first_name field predicates
  """
  firstName: String
  firstNameNEQ: String
  firstNameIn: [String!]
  firstNameNotIn: [String!]
  firstNameGT: String
  firstNameGTE: String
  firstNameLT: String
  firstNameLTE: String
  firstNameContains: String
  firstNameHasPrefix: String
  firstNameHasSuffix: String
  firstNameEqualFold: String
  firstNameContainsFold: String
  """
  last_name field predicates
  """
  lastName: String
  lastNameNEQ: String
  lastNameIn: [String!]
  lastNameNotIn: [String!]
  lastNameGT: String
  lastNameGTE: String
  lastNameLT: String
  lastNameLTE: String
  lastNameContains: String
  lastNameHasPrefix: String
  lastNameHasSuffix: String
  lastNameEqualFold: String
  lastNameContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  phone_number field predicates
  """
  phoneNumber: String
  phoneNumberNEQ: String
  phoneNumberIn: [String!]
  phoneNumberNotIn: [String!]
  phoneNumberGT: String
  phoneNumberGTE: String
  phoneNumberLT: String
  phoneNumberLTE: String
  phoneNumberContains: String
  phoneNumberHasPrefix: String
  phoneNumberHasSuffix: String
  phoneNumberEqualFold: String
  phoneNumberContainsFold: String
  """
  vat_number field predicates
  """
  vatNumber: String
  vatNumberNEQ: String
  vatNumberIn: [String!]
  vatNumberNotIn: [String!]
  vatNumberGT: String
  vatNumberGTE: String
  vatNumberLT: String
  vatNumberLTE: String
  vatNumberContains: String
  vatNumberHasPrefix: String
  vatNumberHasSuffix: String
  vatNumberEqualFold: String
  vatNumberContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
}
"""
OrderStatus is enum for the field status
"""
enum OrderStatus @goModel(model: "delivrio.io/go/ent/order.Status") {
  Pending
  Partially_dispatched
  Dispatched
  Cancelled
}
"""
OrderWhereInput is used for filtering Order objects.
Input was generated by ent.
"""
input OrderWhereInput {
  not: OrderWhereInput
  and: [OrderWhereInput!]
  or: [OrderWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  order_public_id field predicates
  """
  orderPublicID: String
  orderPublicIDNEQ: String
  orderPublicIDIn: [String!]
  orderPublicIDNotIn: [String!]
  orderPublicIDGT: String
  orderPublicIDGTE: String
  orderPublicIDLT: String
  orderPublicIDLTE: String
  orderPublicIDContains: String
  orderPublicIDHasPrefix: String
  orderPublicIDHasSuffix: String
  orderPublicIDEqualFold: String
  orderPublicIDContainsFold: String
  """
  external_id field predicates
  """
  externalID: String
  externalIDNEQ: String
  externalIDIn: [String!]
  externalIDNotIn: [String!]
  externalIDGT: String
  externalIDGTE: String
  externalIDLT: String
  externalIDLTE: String
  externalIDContains: String
  externalIDHasPrefix: String
  externalIDHasSuffix: String
  externalIDIsNil: Boolean
  externalIDNotNil: Boolean
  externalIDEqualFold: String
  externalIDContainsFold: String
  """
  comment_internal field predicates
  """
  commentInternal: String
  commentInternalNEQ: String
  commentInternalIn: [String!]
  commentInternalNotIn: [String!]
  commentInternalGT: String
  commentInternalGTE: String
  commentInternalLT: String
  commentInternalLTE: String
  commentInternalContains: String
  commentInternalHasPrefix: String
  commentInternalHasSuffix: String
  commentInternalIsNil: Boolean
  commentInternalNotNil: Boolean
  commentInternalEqualFold: String
  commentInternalContainsFold: String
  """
  comment_external field predicates
  """
  commentExternal: String
  commentExternalNEQ: String
  commentExternalIn: [String!]
  commentExternalNotIn: [String!]
  commentExternalGT: String
  commentExternalGTE: String
  commentExternalLT: String
  commentExternalLTE: String
  commentExternalContains: String
  commentExternalHasPrefix: String
  commentExternalHasSuffix: String
  commentExternalIsNil: Boolean
  commentExternalNotNil: Boolean
  commentExternalEqualFold: String
  commentExternalContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  email_sync_confirmation_at field predicates
  """
  emailSyncConfirmationAt: Time
  emailSyncConfirmationAtNEQ: Time
  emailSyncConfirmationAtIn: [Time!]
  emailSyncConfirmationAtNotIn: [Time!]
  emailSyncConfirmationAtGT: Time
  emailSyncConfirmationAtGTE: Time
  emailSyncConfirmationAtLT: Time
  emailSyncConfirmationAtLTE: Time
  emailSyncConfirmationAtIsNil: Boolean
  emailSyncConfirmationAtNotNil: Boolean
  """
  status field predicates
  """
  status: OrderStatus
  statusNEQ: OrderStatus
  statusIn: [OrderStatus!]
  statusNotIn: [OrderStatus!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  order_history edge predicates
  """
  hasOrderHistory: Boolean
  hasOrderHistoryWith: [OrderHistoryWhereInput!]
  """
  connection edge predicates
  """
  hasConnection: Boolean
  hasConnectionWith: [ConnectionWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
  """
  return_colli edge predicates
  """
  hasReturnColli: Boolean
  hasReturnColliWith: [ReturnColliWhereInput!]
  """
  hypothesis_test_delivery_option_request edge predicates
  """
  hasHypothesisTestDeliveryOptionRequest: Boolean
  hasHypothesisTestDeliveryOptionRequestWith: [HypothesisTestDeliveryOptionRequestWhereInput!]
  """
  pallet edge predicates
  """
  hasPallet: Boolean
  hasPalletWith: [PalletWhereInput!]
  """
  consolidation edge predicates
  """
  hasConsolidation: Boolean
  hasConsolidationWith: [ConsolidationWhereInput!]
}
type Packaging implements Node {
  id: ID!
  tenantID: ID!
  archivedAt: Time
  name: String!
  heightCm: Int!
  widthCm: Int!
  lengthCm: Int!
  tenant: Tenant!
  shipmentParcel: [ShipmentParcel!]
  pallet: [Pallet!]
  colli: [Colli!]
  returnColli: [ReturnColli!]
  packagingDF: PackagingDF
  packagingUSPS: PackagingUSPS
  carrierBrand: CarrierBrand
  deliveryOption: [DeliveryOption!]
}
"""
A connection to a list of items.
"""
type PackagingConnection {
  """
  A list of edges.
  """
  edges: [PackagingEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
type PackagingDF implements Node {
  id: ID!
  tenantID: ID!
  apiType: PackagingDFAPIType!
  maxWeight: Float
  minWeight: Float
  """
  Some carriers this is not boolean, so this is not a general toggle
  """
  stackable: Boolean!
  tenant: Tenant!
  packaging: Packaging!
}
"""
PackagingDFAPIType is enum for the field api_type
"""
enum PackagingDFAPIType @goModel(model: "delivrio.io/go/ent/packagingdf.APIType") {
  PKK
  PL1
  PL2
  PL4
  K10
  K20
  C10
  PL7
  CLL
  PLL
}
"""
A connection to a list of items.
"""
type PackagingDFConnection {
  """
  A list of edges.
  """
  edges: [PackagingDFEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PackagingDFEdge {
  """
  The item at the end of the edge.
  """
  node: PackagingDF
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
PackagingDFWhereInput is used for filtering PackagingDF objects.
Input was generated by ent.
"""
input PackagingDFWhereInput {
  not: PackagingDFWhereInput
  and: [PackagingDFWhereInput!]
  or: [PackagingDFWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  api_type field predicates
  """
  apiType: PackagingDFAPIType
  apiTypeNEQ: PackagingDFAPIType
  apiTypeIn: [PackagingDFAPIType!]
  apiTypeNotIn: [PackagingDFAPIType!]
  """
  max_weight field predicates
  """
  maxWeight: Float
  maxWeightNEQ: Float
  maxWeightIn: [Float!]
  maxWeightNotIn: [Float!]
  maxWeightGT: Float
  maxWeightGTE: Float
  maxWeightLT: Float
  maxWeightLTE: Float
  maxWeightIsNil: Boolean
  maxWeightNotNil: Boolean
  """
  min_weight field predicates
  """
  minWeight: Float
  minWeightNEQ: Float
  minWeightIn: [Float!]
  minWeightNotIn: [Float!]
  minWeightGT: Float
  minWeightGTE: Float
  minWeightLT: Float
  minWeightLTE: Float
  minWeightIsNil: Boolean
  minWeightNotNil: Boolean
  """
  stackable field predicates
  """
  stackable: Boolean
  stackableNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  packaging edge predicates
  """
  hasPackaging: Boolean
  hasPackagingWith: [PackagingWhereInput!]
}
"""
An edge in a connection.
"""
type PackagingEdge {
  """
  The item at the end of the edge.
  """
  node: Packaging
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type PackagingUSPS implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  packaging: Packaging!
  packagingUSPSRateIndicator: PackagingUSPSRateIndicator! @goField(name: "PackagingUSPSRateIndicator", forceResolver: false)
  packagingUSPSProcessingCategory: PackagingUSPSProcessingCategory! @goField(name: "PackagingUSPSProcessingCategory", forceResolver: false)
}
"""
A connection to a list of items.
"""
type PackagingUSPSConnection {
  """
  A list of edges.
  """
  edges: [PackagingUSPSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PackagingUSPSEdge {
  """
  The item at the end of the edge.
  """
  node: PackagingUSPS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type PackagingUSPSProcessingCategory implements Node {
  id: ID!
  name: String!
  processingCategory: PackagingUSPSProcessingCategoryProcessingCategory!
}
"""
A connection to a list of items.
"""
type PackagingUSPSProcessingCategoryConnection {
  """
  A list of edges.
  """
  edges: [PackagingUSPSProcessingCategoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PackagingUSPSProcessingCategoryEdge {
  """
  The item at the end of the edge.
  """
  node: PackagingUSPSProcessingCategory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
PackagingUSPSProcessingCategoryProcessingCategory is enum for the field processing_category
"""
enum PackagingUSPSProcessingCategoryProcessingCategory @goModel(model: "delivrio.io/go/ent/packaginguspsprocessingcategory.ProcessingCategory") {
  LETTERS
  FLATS
  MACHINABLE
  IRREGULAR
  NON_MACHINABLE
}
"""
PackagingUSPSProcessingCategoryWhereInput is used for filtering PackagingUSPSProcessingCategory objects.
Input was generated by ent.
"""
input PackagingUSPSProcessingCategoryWhereInput {
  not: PackagingUSPSProcessingCategoryWhereInput
  and: [PackagingUSPSProcessingCategoryWhereInput!]
  or: [PackagingUSPSProcessingCategoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  processing_category field predicates
  """
  processingCategory: PackagingUSPSProcessingCategoryProcessingCategory
  processingCategoryNEQ: PackagingUSPSProcessingCategoryProcessingCategory
  processingCategoryIn: [PackagingUSPSProcessingCategoryProcessingCategory!]
  processingCategoryNotIn: [PackagingUSPSProcessingCategoryProcessingCategory!]
}
type PackagingUSPSRateIndicator implements Node {
  id: ID!
  code: String!
  name: String!
  packagingUSPS: [PackagingUSPS!]
}
"""
A connection to a list of items.
"""
type PackagingUSPSRateIndicatorConnection {
  """
  A list of edges.
  """
  edges: [PackagingUSPSRateIndicatorEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PackagingUSPSRateIndicatorEdge {
  """
  The item at the end of the edge.
  """
  node: PackagingUSPSRateIndicator
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
PackagingUSPSRateIndicatorWhereInput is used for filtering PackagingUSPSRateIndicator objects.
Input was generated by ent.
"""
input PackagingUSPSRateIndicatorWhereInput {
  not: PackagingUSPSRateIndicatorWhereInput
  and: [PackagingUSPSRateIndicatorWhereInput!]
  or: [PackagingUSPSRateIndicatorWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  code field predicates
  """
  code: String
  codeNEQ: String
  codeIn: [String!]
  codeNotIn: [String!]
  codeGT: String
  codeGTE: String
  codeLT: String
  codeLTE: String
  codeContains: String
  codeHasPrefix: String
  codeHasSuffix: String
  codeEqualFold: String
  codeContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  packaging_usps edge predicates
  """
  hasPackagingUSPS: Boolean
  hasPackagingUSPSWith: [PackagingUSPSWhereInput!]
}
"""
PackagingUSPSWhereInput is used for filtering PackagingUSPS objects.
Input was generated by ent.
"""
input PackagingUSPSWhereInput {
  not: PackagingUSPSWhereInput
  and: [PackagingUSPSWhereInput!]
  or: [PackagingUSPSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  packaging edge predicates
  """
  hasPackaging: Boolean
  hasPackagingWith: [PackagingWhereInput!]
  """
  packaging_usps_rate_indicator edge predicates
  """
  hasPackagingUSPSRateIndicator: Boolean
  hasPackagingUSPSRateIndicatorWith: [PackagingUSPSRateIndicatorWhereInput!]
  """
  packaging_usps_processing_category edge predicates
  """
  hasPackagingUSPSProcessingCategory: Boolean
  hasPackagingUSPSProcessingCategoryWith: [PackagingUSPSProcessingCategoryWhereInput!]
}
"""
PackagingWhereInput is used for filtering Packaging objects.
Input was generated by ent.
"""
input PackagingWhereInput {
  not: PackagingWhereInput
  and: [PackagingWhereInput!]
  or: [PackagingWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  archived_at field predicates
  """
  archivedAt: Time
  archivedAtNEQ: Time
  archivedAtIn: [Time!]
  archivedAtNotIn: [Time!]
  archivedAtGT: Time
  archivedAtGTE: Time
  archivedAtLT: Time
  archivedAtLTE: Time
  archivedAtIsNil: Boolean
  archivedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  height_cm field predicates
  """
  heightCm: Int
  heightCmNEQ: Int
  heightCmIn: [Int!]
  heightCmNotIn: [Int!]
  heightCmGT: Int
  heightCmGTE: Int
  heightCmLT: Int
  heightCmLTE: Int
  """
  width_cm field predicates
  """
  widthCm: Int
  widthCmNEQ: Int
  widthCmIn: [Int!]
  widthCmNotIn: [Int!]
  widthCmGT: Int
  widthCmGTE: Int
  widthCmLT: Int
  widthCmLTE: Int
  """
  length_cm field predicates
  """
  lengthCm: Int
  lengthCmNEQ: Int
  lengthCmIn: [Int!]
  lengthCmNotIn: [Int!]
  lengthCmGT: Int
  lengthCmGTE: Int
  lengthCmLT: Int
  lengthCmLTE: Int
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment_parcel edge predicates
  """
  hasShipmentParcel: Boolean
  hasShipmentParcelWith: [ShipmentParcelWhereInput!]
  """
  pallet edge predicates
  """
  hasPallet: Boolean
  hasPalletWith: [PalletWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
  """
  return_colli edge predicates
  """
  hasReturnColli: Boolean
  hasReturnColliWith: [ReturnColliWhereInput!]
  """
  packaging_df edge predicates
  """
  hasPackagingDF: Boolean
  hasPackagingDFWith: [PackagingDFWhereInput!]
  """
  packaging_usps edge predicates
  """
  hasPackagingUSPS: Boolean
  hasPackagingUSPSWith: [PackagingUSPSWhereInput!]
  """
  carrier_brand edge predicates
  """
  hasCarrierBrand: Boolean
  hasCarrierBrandWith: [CarrierBrandWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
}
"""
Information about pagination in a connection.
https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: Cursor
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: Cursor
}
type Pallet implements Node {
  id: ID!
  tenantID: ID!
  publicID: String!
  description: String!
  tenant: Tenant!
  orders: [Order!]
  packaging: Packaging
  consolidation: Consolidation!
  """
  A pallet may only have 1 active shipment
  """
  shipmentPallet: ShipmentPallet
  """
  Cancelled shipments move here to maintain the ref
  """
  cancelledShipmentPallet: [ShipmentPallet!]
}
"""
A connection to a list of items.
"""
type PalletConnection {
  """
  A list of edges.
  """
  edges: [PalletEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PalletEdge {
  """
  The item at the end of the edge.
  """
  node: Pallet
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
PalletWhereInput is used for filtering Pallet objects.
Input was generated by ent.
"""
input PalletWhereInput {
  not: PalletWhereInput
  and: [PalletWhereInput!]
  or: [PalletWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  public_id field predicates
  """
  publicID: String
  publicIDNEQ: String
  publicIDIn: [String!]
  publicIDNotIn: [String!]
  publicIDGT: String
  publicIDGTE: String
  publicIDLT: String
  publicIDLTE: String
  publicIDContains: String
  publicIDHasPrefix: String
  publicIDHasSuffix: String
  publicIDEqualFold: String
  publicIDContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  orders edge predicates
  """
  hasOrders: Boolean
  hasOrdersWith: [OrderWhereInput!]
  """
  packaging edge predicates
  """
  hasPackaging: Boolean
  hasPackagingWith: [PackagingWhereInput!]
  """
  consolidation edge predicates
  """
  hasConsolidation: Boolean
  hasConsolidationWith: [ConsolidationWhereInput!]
  """
  shipment_pallet edge predicates
  """
  hasShipmentPallet: Boolean
  hasShipmentPalletWith: [ShipmentPalletWhereInput!]
  """
  cancelled_shipment_pallet edge predicates
  """
  hasCancelledShipmentPallet: Boolean
  hasCancelledShipmentPalletWith: [ShipmentPalletWhereInput!]
}
type ParcelShop implements Node {
  id: ID!
  name: String!
  lastUpdated: Time!
  parcelShopDAO: ParcelShopDAO
  parcelShopPostNord: ParcelShopPostNord
  parcelShopGLS: ParcelShopGLS
  parcelShopBring: ParcelShopBring
  carrierBrand: CarrierBrand!
  address: AddressGlobal!
  colli: [Colli!]
  businessHoursPeriod: [BusinessHoursPeriod!]
}
type ParcelShopBring implements Node {
  id: ID!
  """
  https://developer.bring.com/api/pickup-point/#pickup-point-types
  """
  pointType: ParcelShopBringPointType!
  bringID: String!
  parcelShop: ParcelShop!
  addressDelivery: AddressGlobal!
}
"""
A connection to a list of items.
"""
type ParcelShopBringConnection {
  """
  A list of edges.
  """
  edges: [ParcelShopBringEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ParcelShopBringEdge {
  """
  The item at the end of the edge.
  """
  node: ParcelShopBring
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ParcelShopBringPointType is enum for the field point_type
"""
enum ParcelShopBringPointType @goModel(model: "delivrio.io/go/ent/parcelshopbring.PointType") {
  one
  four
  nineteen
  twenty_one
  thirty_two
  thirty_four
  thirty_seven
  thirty_eight
  thirty_nine
  eighty_five
  eighty_six
  SmartPOST
  Posti
  Noutopiste
  LOCKER
  Unknown
}
"""
ParcelShopBringWhereInput is used for filtering ParcelShopBring objects.
Input was generated by ent.
"""
input ParcelShopBringWhereInput {
  not: ParcelShopBringWhereInput
  and: [ParcelShopBringWhereInput!]
  or: [ParcelShopBringWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  point_type field predicates
  """
  pointType: ParcelShopBringPointType
  pointTypeNEQ: ParcelShopBringPointType
  pointTypeIn: [ParcelShopBringPointType!]
  pointTypeNotIn: [ParcelShopBringPointType!]
  """
  bring_id field predicates
  """
  bringID: String
  bringIDNEQ: String
  bringIDIn: [String!]
  bringIDNotIn: [String!]
  bringIDGT: String
  bringIDGTE: String
  bringIDLT: String
  bringIDLTE: String
  bringIDContains: String
  bringIDHasPrefix: String
  bringIDHasSuffix: String
  bringIDEqualFold: String
  bringIDContainsFold: String
  """
  parcel_shop edge predicates
  """
  hasParcelShop: Boolean
  hasParcelShopWith: [ParcelShopWhereInput!]
  """
  address_delivery edge predicates
  """
  hasAddressDelivery: Boolean
  hasAddressDeliveryWith: [AddressGlobalWhereInput!]
}
"""
A connection to a list of items.
"""
type ParcelShopConnection {
  """
  A list of edges.
  """
  edges: [ParcelShopEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
type ParcelShopDAO implements Node {
  id: ID!
  shopID: String!
  parcelShop: ParcelShop!
}
"""
A connection to a list of items.
"""
type ParcelShopDAOConnection {
  """
  A list of edges.
  """
  edges: [ParcelShopDAOEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ParcelShopDAOEdge {
  """
  The item at the end of the edge.
  """
  node: ParcelShopDAO
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ParcelShopDAOWhereInput is used for filtering ParcelShopDAO objects.
Input was generated by ent.
"""
input ParcelShopDAOWhereInput {
  not: ParcelShopDAOWhereInput
  and: [ParcelShopDAOWhereInput!]
  or: [ParcelShopDAOWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  shop_id field predicates
  """
  shopID: String
  shopIDNEQ: String
  shopIDIn: [String!]
  shopIDNotIn: [String!]
  shopIDGT: String
  shopIDGTE: String
  shopIDLT: String
  shopIDLTE: String
  shopIDContains: String
  shopIDHasPrefix: String
  shopIDHasSuffix: String
  shopIDEqualFold: String
  shopIDContainsFold: String
  """
  parcel_shop edge predicates
  """
  hasParcelShop: Boolean
  hasParcelShopWith: [ParcelShopWhereInput!]
}
"""
An edge in a connection.
"""
type ParcelShopEdge {
  """
  The item at the end of the edge.
  """
  node: ParcelShop
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ParcelShopGLS implements Node {
  id: ID!
  glsParcelShopID: String!
  """
  Only available in Group API
  """
  partnerID: String
  """
  Only available in Group API
  """
  type: String
  parcelShop: ParcelShop!
}
"""
A connection to a list of items.
"""
type ParcelShopGLSConnection {
  """
  A list of edges.
  """
  edges: [ParcelShopGLSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ParcelShopGLSEdge {
  """
  The item at the end of the edge.
  """
  node: ParcelShopGLS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ParcelShopGLSWhereInput is used for filtering ParcelShopGLS objects.
Input was generated by ent.
"""
input ParcelShopGLSWhereInput {
  not: ParcelShopGLSWhereInput
  and: [ParcelShopGLSWhereInput!]
  or: [ParcelShopGLSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  gls_parcel_shop_id field predicates
  """
  glsParcelShopID: String
  glsParcelShopIDNEQ: String
  glsParcelShopIDIn: [String!]
  glsParcelShopIDNotIn: [String!]
  glsParcelShopIDGT: String
  glsParcelShopIDGTE: String
  glsParcelShopIDLT: String
  glsParcelShopIDLTE: String
  glsParcelShopIDContains: String
  glsParcelShopIDHasPrefix: String
  glsParcelShopIDHasSuffix: String
  glsParcelShopIDEqualFold: String
  glsParcelShopIDContainsFold: String
  """
  partner_id field predicates
  """
  partnerID: String
  partnerIDNEQ: String
  partnerIDIn: [String!]
  partnerIDNotIn: [String!]
  partnerIDGT: String
  partnerIDGTE: String
  partnerIDLT: String
  partnerIDLTE: String
  partnerIDContains: String
  partnerIDHasPrefix: String
  partnerIDHasSuffix: String
  partnerIDIsNil: Boolean
  partnerIDNotNil: Boolean
  partnerIDEqualFold: String
  partnerIDContainsFold: String
  """
  type field predicates
  """
  type: String
  typeNEQ: String
  typeIn: [String!]
  typeNotIn: [String!]
  typeGT: String
  typeGTE: String
  typeLT: String
  typeLTE: String
  typeContains: String
  typeHasPrefix: String
  typeHasSuffix: String
  typeIsNil: Boolean
  typeNotNil: Boolean
  typeEqualFold: String
  typeContainsFold: String
  """
  parcel_shop edge predicates
  """
  hasParcelShop: Boolean
  hasParcelShopWith: [ParcelShopWhereInput!]
}
type ParcelShopPostNord implements Node {
  id: ID!
  servicePointID: String!
  pudoid: String!
  """
  No idea what the options are aside from the default: 156. Maybe box, shop, etc??
  """
  typeID: String!
  parcelShop: ParcelShop!
  addressDelivery: AddressGlobal!
}
"""
A connection to a list of items.
"""
type ParcelShopPostNordConnection {
  """
  A list of edges.
  """
  edges: [ParcelShopPostNordEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ParcelShopPostNordEdge {
  """
  The item at the end of the edge.
  """
  node: ParcelShopPostNord
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ParcelShopPostNordWhereInput is used for filtering ParcelShopPostNord objects.
Input was generated by ent.
"""
input ParcelShopPostNordWhereInput {
  not: ParcelShopPostNordWhereInput
  and: [ParcelShopPostNordWhereInput!]
  or: [ParcelShopPostNordWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  service_point_id field predicates
  """
  servicePointID: String
  servicePointIDNEQ: String
  servicePointIDIn: [String!]
  servicePointIDNotIn: [String!]
  servicePointIDGT: String
  servicePointIDGTE: String
  servicePointIDLT: String
  servicePointIDLTE: String
  servicePointIDContains: String
  servicePointIDHasPrefix: String
  servicePointIDHasSuffix: String
  servicePointIDEqualFold: String
  servicePointIDContainsFold: String
  """
  pudoid field predicates
  """
  pudoid: String
  pudoidNEQ: String
  pudoidIn: [String!]
  pudoidNotIn: [String!]
  pudoidGT: String
  pudoidGTE: String
  pudoidLT: String
  pudoidLTE: String
  pudoidContains: String
  pudoidHasPrefix: String
  pudoidHasSuffix: String
  pudoidEqualFold: String
  pudoidContainsFold: String
  """
  type_id field predicates
  """
  typeID: String
  typeIDNEQ: String
  typeIDIn: [String!]
  typeIDNotIn: [String!]
  typeIDGT: String
  typeIDGTE: String
  typeIDLT: String
  typeIDLTE: String
  typeIDContains: String
  typeIDHasPrefix: String
  typeIDHasSuffix: String
  typeIDEqualFold: String
  typeIDContainsFold: String
  """
  parcel_shop edge predicates
  """
  hasParcelShop: Boolean
  hasParcelShopWith: [ParcelShopWhereInput!]
  """
  address_delivery edge predicates
  """
  hasAddressDelivery: Boolean
  hasAddressDeliveryWith: [AddressGlobalWhereInput!]
}
"""
ParcelShopWhereInput is used for filtering ParcelShop objects.
Input was generated by ent.
"""
input ParcelShopWhereInput {
  not: ParcelShopWhereInput
  and: [ParcelShopWhereInput!]
  or: [ParcelShopWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  last_updated field predicates
  """
  lastUpdated: Time
  lastUpdatedNEQ: Time
  lastUpdatedIn: [Time!]
  lastUpdatedNotIn: [Time!]
  lastUpdatedGT: Time
  lastUpdatedGTE: Time
  lastUpdatedLT: Time
  lastUpdatedLTE: Time
  """
  parcel_shop_dao edge predicates
  """
  hasParcelShopDAO: Boolean
  hasParcelShopDAOWith: [ParcelShopDAOWhereInput!]
  """
  parcel_shop_post_nord edge predicates
  """
  hasParcelShopPostNord: Boolean
  hasParcelShopPostNordWith: [ParcelShopPostNordWhereInput!]
  """
  parcel_shop_gls edge predicates
  """
  hasParcelShopGLS: Boolean
  hasParcelShopGLSWith: [ParcelShopGLSWhereInput!]
  """
  parcel_shop_bring edge predicates
  """
  hasParcelShopBring: Boolean
  hasParcelShopBringWith: [ParcelShopBringWhereInput!]
  """
  carrier_brand edge predicates
  """
  hasCarrierBrand: Boolean
  hasCarrierBrandWith: [CarrierBrandWhereInput!]
  """
  address edge predicates
  """
  hasAddress: Boolean
  hasAddressWith: [AddressGlobalWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
  """
  business_hours_period edge predicates
  """
  hasBusinessHoursPeriod: Boolean
  hasBusinessHoursPeriodWith: [BusinessHoursPeriodWhereInput!]
}
type Plan implements Node {
  id: ID!
  label: String!
  rank: Int!
  priceDkk: Int!
  createdAt: Time!
  tenant: [Tenant!]
  planHistoryPlan: [PlanHistory!]
}
"""
A connection to a list of items.
"""
type PlanConnection {
  """
  A list of edges.
  """
  edges: [PlanEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PlanEdge {
  """
  The item at the end of the edge.
  """
  node: Plan
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type PlanHistory implements Node {
  id: ID!
  tenantID: ID!
  createdAt: Time!
  changeHistory: ChangeHistory!
  tenant: Tenant!
  changedBy: User!
  changedFrom: Plan!
}
"""
PlanHistoryWhereInput is used for filtering PlanHistory objects.
Input was generated by ent.
"""
input PlanHistoryWhereInput {
  not: PlanHistoryWhereInput
  and: [PlanHistoryWhereInput!]
  or: [PlanHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  change_history edge predicates
  """
  hasChangeHistory: Boolean
  hasChangeHistoryWith: [ChangeHistoryWhereInput!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  changed_by edge predicates
  """
  hasChangedBy: Boolean
  hasChangedByWith: [UserWhereInput!]
  """
  changed_from edge predicates
  """
  hasChangedFrom: Boolean
  hasChangedFromWith: [PlanWhereInput!]
}
"""
PlanWhereInput is used for filtering Plan objects.
Input was generated by ent.
"""
input PlanWhereInput {
  not: PlanWhereInput
  and: [PlanWhereInput!]
  or: [PlanWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  label field predicates
  """
  label: String
  labelNEQ: String
  labelIn: [String!]
  labelNotIn: [String!]
  labelGT: String
  labelGTE: String
  labelLT: String
  labelLTE: String
  labelContains: String
  labelHasPrefix: String
  labelHasSuffix: String
  labelEqualFold: String
  labelContainsFold: String
  """
  rank field predicates
  """
  rank: Int
  rankNEQ: Int
  rankIn: [Int!]
  rankNotIn: [Int!]
  rankGT: Int
  rankGTE: Int
  rankLT: Int
  rankLTE: Int
  """
  price_dkk field predicates
  """
  priceDkk: Int
  priceDkkNEQ: Int
  priceDkkIn: [Int!]
  priceDkkNotIn: [Int!]
  priceDkkGT: Int
  priceDkkGTE: Int
  priceDkkLT: Int
  priceDkkLTE: Int
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  plan_history_plan edge predicates
  """
  hasPlanHistoryPlan: Boolean
  hasPlanHistoryPlanWith: [PlanHistoryWhereInput!]
}
type PrintJob implements Node {
  id: ID!
  tenantID: ID!
  status: PrintJobStatus!
  fileExtension: PrintJobFileExtension!
  documentType: PrintJobDocumentType!
  printerMessages: [String!]
  base64PrintData: String!
  createdAt: Time!
  tenant: Tenant!
  printer: Printer!
  colli: Colli
  shipmentParcel: ShipmentParcel
}
"""
PrintJobDocumentType is enum for the field document_type
"""
enum PrintJobDocumentType @goModel(model: "delivrio.io/go/ent/printjob.DocumentType") {
  parcel_label
  unknown
  packing_list
}
"""
PrintJobFileExtension is enum for the field file_extension
"""
enum PrintJobFileExtension @goModel(model: "delivrio.io/go/ent/printjob.FileExtension") {
  pdf
  zpl
  txt
  png
}
"""
PrintJobStatus is enum for the field status
"""
enum PrintJobStatus @goModel(model: "delivrio.io/go/ent/printjob.Status") {
  pending
  at_printer
  success
  canceled
}
"""
PrintJobWhereInput is used for filtering PrintJob objects.
Input was generated by ent.
"""
input PrintJobWhereInput {
  not: PrintJobWhereInput
  and: [PrintJobWhereInput!]
  or: [PrintJobWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  status field predicates
  """
  status: PrintJobStatus
  statusNEQ: PrintJobStatus
  statusIn: [PrintJobStatus!]
  statusNotIn: [PrintJobStatus!]
  """
  file_extension field predicates
  """
  fileExtension: PrintJobFileExtension
  fileExtensionNEQ: PrintJobFileExtension
  fileExtensionIn: [PrintJobFileExtension!]
  fileExtensionNotIn: [PrintJobFileExtension!]
  """
  document_type field predicates
  """
  documentType: PrintJobDocumentType
  documentTypeNEQ: PrintJobDocumentType
  documentTypeIn: [PrintJobDocumentType!]
  documentTypeNotIn: [PrintJobDocumentType!]
  """
  base64_print_data field predicates
  """
  base64PrintData: String
  base64PrintDataNEQ: String
  base64PrintDataIn: [String!]
  base64PrintDataNotIn: [String!]
  base64PrintDataGT: String
  base64PrintDataGTE: String
  base64PrintDataLT: String
  base64PrintDataLTE: String
  base64PrintDataContains: String
  base64PrintDataHasPrefix: String
  base64PrintDataHasSuffix: String
  base64PrintDataEqualFold: String
  base64PrintDataContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  printer edge predicates
  """
  hasPrinter: Boolean
  hasPrinterWith: [PrinterWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
  """
  shipment_parcel edge predicates
  """
  hasShipmentParcel: Boolean
  hasShipmentParcelWith: [ShipmentParcelWhereInput!]
}
type Printer implements Node {
  id: ID!
  tenantID: ID!
  """
  ID from desktop print client
  """
  deviceID: String!
  name: String!
  labelZpl: Boolean!
  labelPdf: Boolean!
  labelPng: Boolean!
  document: Boolean!
  rotate180: Boolean!
  useShell: Boolean!
  printSize: PrinterPrintSize!
  createdAt: Time!
  lastPing: Time!
  tenant: Tenant!
  workstation: Workstation!
  printJobs: [PrintJob!]
}
"""
A connection to a list of items.
"""
type PrinterConnection {
  """
  A list of edges.
  """
  edges: [PrinterEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type PrinterEdge {
  """
  The item at the end of the edge.
  """
  node: Printer
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
PrinterPrintSize is enum for the field print_size
"""
enum PrinterPrintSize @goModel(model: "delivrio.io/go/ent/printer.PrintSize") {
  A4
  cm_100_150
  cm_100_192
}
"""
PrinterWhereInput is used for filtering Printer objects.
Input was generated by ent.
"""
input PrinterWhereInput {
  not: PrinterWhereInput
  and: [PrinterWhereInput!]
  or: [PrinterWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  device_id field predicates
  """
  deviceID: String
  deviceIDNEQ: String
  deviceIDIn: [String!]
  deviceIDNotIn: [String!]
  deviceIDGT: String
  deviceIDGTE: String
  deviceIDLT: String
  deviceIDLTE: String
  deviceIDContains: String
  deviceIDHasPrefix: String
  deviceIDHasSuffix: String
  deviceIDEqualFold: String
  deviceIDContainsFold: String
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  label_zpl field predicates
  """
  labelZpl: Boolean
  labelZplNEQ: Boolean
  """
  label_pdf field predicates
  """
  labelPdf: Boolean
  labelPdfNEQ: Boolean
  """
  label_png field predicates
  """
  labelPng: Boolean
  labelPngNEQ: Boolean
  """
  document field predicates
  """
  document: Boolean
  documentNEQ: Boolean
  """
  rotate_180 field predicates
  """
  rotate180: Boolean
  rotate180NEQ: Boolean
  """
  use_shell field predicates
  """
  useShell: Boolean
  useShellNEQ: Boolean
  """
  print_size field predicates
  """
  printSize: PrinterPrintSize
  printSizeNEQ: PrinterPrintSize
  printSizeIn: [PrinterPrintSize!]
  printSizeNotIn: [PrinterPrintSize!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  last_ping field predicates
  """
  lastPing: Time
  lastPingNEQ: Time
  lastPingIn: [Time!]
  lastPingNotIn: [Time!]
  lastPingGT: Time
  lastPingGTE: Time
  lastPingLT: Time
  lastPingLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  workstation edge predicates
  """
  hasWorkstation: Boolean
  hasWorkstationWith: [WorkstationWhereInput!]
  """
  print_jobs edge predicates
  """
  hasPrintJobs: Boolean
  hasPrintJobsWith: [PrintJobWhereInput!]
}
type Product implements Node {
  id: ID!
  tenantID: ID!
  externalID: String
  title: String!
  bodyHTML: String
  status: ProductStatus!
  createdAt: Time
  updatedAt: Time!
  tenant: Tenant!
  productTags: [ProductTag!]
  productVariant: [ProductVariant!]
  productImage: [ProductImage!]
}
"""
A connection to a list of items.
"""
type ProductConnection {
  """
  A list of edges.
  """
  edges: [ProductEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProductEdge {
  """
  The item at the end of the edge.
  """
  node: Product
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ProductImage implements Node {
  id: ID!
  tenantID: ID!
  externalID: String
  url: String!
  tenant: Tenant!
  product: Product!
  productVariant: [ProductVariant!]
}
"""
A connection to a list of items.
"""
type ProductImageConnection {
  """
  A list of edges.
  """
  edges: [ProductImageEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProductImageEdge {
  """
  The item at the end of the edge.
  """
  node: ProductImage
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ProductImageWhereInput is used for filtering ProductImage objects.
Input was generated by ent.
"""
input ProductImageWhereInput {
  not: ProductImageWhereInput
  and: [ProductImageWhereInput!]
  or: [ProductImageWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  external_id field predicates
  """
  externalID: String
  externalIDNEQ: String
  externalIDIn: [String!]
  externalIDNotIn: [String!]
  externalIDGT: String
  externalIDGTE: String
  externalIDLT: String
  externalIDLTE: String
  externalIDContains: String
  externalIDHasPrefix: String
  externalIDHasSuffix: String
  externalIDIsNil: Boolean
  externalIDNotNil: Boolean
  externalIDEqualFold: String
  externalIDContainsFold: String
  """
  url field predicates
  """
  url: String
  urlNEQ: String
  urlIn: [String!]
  urlNotIn: [String!]
  urlGT: String
  urlGTE: String
  urlLT: String
  urlLTE: String
  urlContains: String
  urlHasPrefix: String
  urlHasSuffix: String
  urlEqualFold: String
  urlContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  product edge predicates
  """
  hasProduct: Boolean
  hasProductWith: [ProductWhereInput!]
  """
  product_variant edge predicates
  """
  hasProductVariant: Boolean
  hasProductVariantWith: [ProductVariantWhereInput!]
}
"""
ProductStatus is enum for the field status
"""
enum ProductStatus @goModel(model: "delivrio.io/go/ent/product.Status") {
  active
  archived
  draft
}
type ProductTag implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  createdAt: Time
  tenant: Tenant!
  products: [Product!]
}
"""
A connection to a list of items.
"""
type ProductTagConnection {
  """
  A list of edges.
  """
  edges: [ProductTagEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProductTagEdge {
  """
  The item at the end of the edge.
  """
  node: ProductTag
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ProductTagWhereInput is used for filtering ProductTag objects.
Input was generated by ent.
"""
input ProductTagWhereInput {
  not: ProductTagWhereInput
  and: [ProductTagWhereInput!]
  or: [ProductTagWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  products edge predicates
  """
  hasProducts: Boolean
  hasProductsWith: [ProductWhereInput!]
}
type ProductVariant implements Node {
  id: ID!
  tenantID: ID!
  archived: Boolean!
  externalID: String
  description: String
  eanNumber: String
  weightG: Int
  dimensionLength: Int
  dimensionWidth: Int
  dimensionHeight: Int
  createdAt: Time
  updatedAt: Time!
  tenant: Tenant!
  product: Product!
  orderLines: [OrderLine!]
  productImage: [ProductImage!]
  inventoryItem: InventoryItem
}
"""
A connection to a list of items.
"""
type ProductVariantConnection {
  """
  A list of edges.
  """
  edges: [ProductVariantEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ProductVariantEdge {
  """
  The item at the end of the edge.
  """
  node: ProductVariant
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ProductVariantWhereInput is used for filtering ProductVariant objects.
Input was generated by ent.
"""
input ProductVariantWhereInput {
  not: ProductVariantWhereInput
  and: [ProductVariantWhereInput!]
  or: [ProductVariantWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  archived field predicates
  """
  archived: Boolean
  archivedNEQ: Boolean
  """
  external_ID field predicates
  """
  externalID: String
  externalIDNEQ: String
  externalIDIn: [String!]
  externalIDNotIn: [String!]
  externalIDGT: String
  externalIDGTE: String
  externalIDLT: String
  externalIDLTE: String
  externalIDContains: String
  externalIDHasPrefix: String
  externalIDHasSuffix: String
  externalIDIsNil: Boolean
  externalIDNotNil: Boolean
  externalIDEqualFold: String
  externalIDContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  ean_number field predicates
  """
  eanNumber: String
  eanNumberNEQ: String
  eanNumberIn: [String!]
  eanNumberNotIn: [String!]
  eanNumberGT: String
  eanNumberGTE: String
  eanNumberLT: String
  eanNumberLTE: String
  eanNumberContains: String
  eanNumberHasPrefix: String
  eanNumberHasSuffix: String
  eanNumberIsNil: Boolean
  eanNumberNotNil: Boolean
  eanNumberEqualFold: String
  eanNumberContainsFold: String
  """
  weight_g field predicates
  """
  weightG: Int
  weightGNEQ: Int
  weightGIn: [Int!]
  weightGNotIn: [Int!]
  weightGGT: Int
  weightGGTE: Int
  weightGLT: Int
  weightGLTE: Int
  weightGIsNil: Boolean
  weightGNotNil: Boolean
  """
  dimension_length field predicates
  """
  dimensionLength: Int
  dimensionLengthNEQ: Int
  dimensionLengthIn: [Int!]
  dimensionLengthNotIn: [Int!]
  dimensionLengthGT: Int
  dimensionLengthGTE: Int
  dimensionLengthLT: Int
  dimensionLengthLTE: Int
  dimensionLengthIsNil: Boolean
  dimensionLengthNotNil: Boolean
  """
  dimension_width field predicates
  """
  dimensionWidth: Int
  dimensionWidthNEQ: Int
  dimensionWidthIn: [Int!]
  dimensionWidthNotIn: [Int!]
  dimensionWidthGT: Int
  dimensionWidthGTE: Int
  dimensionWidthLT: Int
  dimensionWidthLTE: Int
  dimensionWidthIsNil: Boolean
  dimensionWidthNotNil: Boolean
  """
  dimension_height field predicates
  """
  dimensionHeight: Int
  dimensionHeightNEQ: Int
  dimensionHeightIn: [Int!]
  dimensionHeightNotIn: [Int!]
  dimensionHeightGT: Int
  dimensionHeightGTE: Int
  dimensionHeightLT: Int
  dimensionHeightLTE: Int
  dimensionHeightIsNil: Boolean
  dimensionHeightNotNil: Boolean
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  product edge predicates
  """
  hasProduct: Boolean
  hasProductWith: [ProductWhereInput!]
  """
  order_lines edge predicates
  """
  hasOrderLines: Boolean
  hasOrderLinesWith: [OrderLineWhereInput!]
  """
  product_image edge predicates
  """
  hasProductImage: Boolean
  hasProductImageWith: [ProductImageWhereInput!]
  """
  inventory_item edge predicates
  """
  hasInventoryItem: Boolean
  hasInventoryItemWith: [InventoryItemWhereInput!]
}
"""
ProductWhereInput is used for filtering Product objects.
Input was generated by ent.
"""
input ProductWhereInput {
  not: ProductWhereInput
  and: [ProductWhereInput!]
  or: [ProductWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  external_id field predicates
  """
  externalID: String
  externalIDNEQ: String
  externalIDIn: [String!]
  externalIDNotIn: [String!]
  externalIDGT: String
  externalIDGTE: String
  externalIDLT: String
  externalIDLTE: String
  externalIDContains: String
  externalIDHasPrefix: String
  externalIDHasSuffix: String
  externalIDIsNil: Boolean
  externalIDNotNil: Boolean
  externalIDEqualFold: String
  externalIDContainsFold: String
  """
  title field predicates
  """
  title: String
  titleNEQ: String
  titleIn: [String!]
  titleNotIn: [String!]
  titleGT: String
  titleGTE: String
  titleLT: String
  titleLTE: String
  titleContains: String
  titleHasPrefix: String
  titleHasSuffix: String
  titleEqualFold: String
  titleContainsFold: String
  """
  body_html field predicates
  """
  bodyHTML: String
  bodyHTMLNEQ: String
  bodyHTMLIn: [String!]
  bodyHTMLNotIn: [String!]
  bodyHTMLGT: String
  bodyHTMLGTE: String
  bodyHTMLLT: String
  bodyHTMLLTE: String
  bodyHTMLContains: String
  bodyHTMLHasPrefix: String
  bodyHTMLHasSuffix: String
  bodyHTMLIsNil: Boolean
  bodyHTMLNotNil: Boolean
  bodyHTMLEqualFold: String
  bodyHTMLContainsFold: String
  """
  status field predicates
  """
  status: ProductStatus
  statusNEQ: ProductStatus
  statusIn: [ProductStatus!]
  statusNotIn: [ProductStatus!]
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  product_tags edge predicates
  """
  hasProductTags: Boolean
  hasProductTagsWith: [ProductTagWhereInput!]
  """
  product_variant edge predicates
  """
  hasProductVariant: Boolean
  hasProductVariantWith: [ProductVariantWhereInput!]
  """
  product_image edge predicates
  """
  hasProductImage: Boolean
  hasProductImageWith: [ProductImageWhereInput!]
}
type Query {
  """
  Fetches an object given its ID.
  """
  node(
    """
    ID of the object.
    """
    id: ID!
  ): Node
  """
  Lookup nodes by a list of IDs.
  """
  nodes(
    """
    The list of node IDs.
    """
    ids: [ID!]!
  ): [Node]!
  apiTokens(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for APITokens returned from the connection.
    """
    where: APITokenWhereInput
  ): APITokenConnection!
  accessRights(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for AccessRights returned from the connection.
    """
    where: AccessRightWhereInput
  ): AccessRightConnection!
  addresses(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Addresses returned from the connection.
    """
    where: AddressWhereInput
  ): AddressConnection!
  addressGlobals(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for AddressGlobals returned from the connection.
    """
    where: AddressGlobalWhereInput
  ): AddressGlobalConnection!
  businessHoursPeriods(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for BusinessHoursPeriods returned from the connection.
    """
    where: BusinessHoursPeriodWhereInput
  ): BusinessHoursPeriodConnection!
  carriers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Carriers returned from the connection.
    """
    where: CarrierWhereInput
  ): CarrierConnection!
  carrierAdditionalServiceBrings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierAdditionalServiceBrings returned from the connection.
    """
    where: CarrierAdditionalServiceBringWhereInput
  ): CarrierAdditionalServiceBringConnection!
  carrierAdditionalServiceDaOs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierAdditionalServiceDAOs returned from the connection.
    """
    where: CarrierAdditionalServiceDAOWhereInput
  ): CarrierAdditionalServiceDAOConnection!
  carrierAdditionalServiceDfs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierAdditionalServiceDFs returned from the connection.
    """
    where: CarrierAdditionalServiceDFWhereInput
  ): CarrierAdditionalServiceDFConnection!
  carrierAdditionalServiceDsVs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierAdditionalServiceDSVs returned from the connection.
    """
    where: CarrierAdditionalServiceDSVWhereInput
  ): CarrierAdditionalServiceDSVConnection!
  carrierAdditionalServiceEasyPosts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierAdditionalServiceEasyPosts returned from the connection.
    """
    where: CarrierAdditionalServiceEasyPostWhereInput
  ): CarrierAdditionalServiceEasyPostConnection!
  carrierAdditionalServiceGlSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierAdditionalServiceGLSs returned from the connection.
    """
    where: CarrierAdditionalServiceGLSWhereInput
  ): CarrierAdditionalServiceGLSConnection!
  carrierAdditionalServicePostNords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierAdditionalServicePostNords returned from the connection.
    """
    where: CarrierAdditionalServicePostNordWhereInput
  ): CarrierAdditionalServicePostNordConnection!
  carrierAdditionalServiceUspSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierAdditionalServiceUSPSs returned from the connection.
    """
    where: CarrierAdditionalServiceUSPSWhereInput
  ): CarrierAdditionalServiceUSPSConnection!
  carrierBrands(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierBrands returned from the connection.
    """
    where: CarrierBrandWhereInput
  ): CarrierBrandConnection!
  carrierBrings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierBrings returned from the connection.
    """
    where: CarrierBringWhereInput
  ): CarrierBringConnection!
  carrierDaOs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierDAOs returned from the connection.
    """
    where: CarrierDAOWhereInput
  ): CarrierDAOConnection!
  carrierDfs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierDFs returned from the connection.
    """
    where: CarrierDFWhereInput
  ): CarrierDFConnection!
  carrierDsVs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierDSVs returned from the connection.
    """
    where: CarrierDSVWhereInput
  ): CarrierDSVConnection!
  carrierEasyPosts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierEasyPosts returned from the connection.
    """
    where: CarrierEasyPostWhereInput
  ): CarrierEasyPostConnection!
  carrierGlSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierGLSs returned from the connection.
    """
    where: CarrierGLSWhereInput
  ): CarrierGLSConnection!
  carrierPostNords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierPostNords returned from the connection.
    """
    where: CarrierPostNordWhereInput
  ): CarrierPostNordConnection!
  carrierServices(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierServices returned from the connection.
    """
    where: CarrierServiceWhereInput
  ): CarrierServiceConnection!
  carrierServiceBrings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierServiceBrings returned from the connection.
    """
    where: CarrierServiceBringWhereInput
  ): CarrierServiceBringConnection!
  carrierServiceDaOs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierServiceDAOs returned from the connection.
    """
    where: CarrierServiceDAOWhereInput
  ): CarrierServiceDAOConnection!
  carrierServiceDfs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierServiceDFs returned from the connection.
    """
    where: CarrierServiceDFWhereInput
  ): CarrierServiceDFConnection!
  carrierServiceDsVs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierServiceDSVs returned from the connection.
    """
    where: CarrierServiceDSVWhereInput
  ): CarrierServiceDSVConnection!
  carrierServiceEasyPosts: [CarrierServiceEasyPost!]!
  carrierServiceGlSs: [CarrierServiceGLS!]!
  carrierServicePostNords: [CarrierServicePostNord!]!
  carrierUspSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CarrierUSPSs returned from the connection.
    """
    where: CarrierUSPSWhereInput
  ): CarrierUSPSConnection!
  changeHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for ChangeHistories returned from the connection.
    """
    orderBy: ChangeHistoryOrder

    """
    Filtering options for ChangeHistories returned from the connection.
    """
    where: ChangeHistoryWhereInput
  ): ChangeHistoryConnection!
  collis(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Collis returned from the connection.
    """
    where: ColliWhereInput
  ): ColliConnection!
  connectOptionCarriers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ConnectOptionCarriers returned from the connection.
    """
    where: ConnectOptionCarrierWhereInput
  ): ConnectOptionCarrierConnection!
  connectOptionPlatforms(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ConnectOptionPlatforms returned from the connection.
    """
    where: ConnectOptionPlatformWhereInput
  ): ConnectOptionPlatformConnection!
  connections(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Connections returned from the connection.
    """
    where: ConnectionWhereInput
  ): ConnectionConnection!
  connectionBrands(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ConnectionBrands returned from the connection.
    """
    where: ConnectionBrandWhereInput
  ): ConnectionBrandConnection!
  connectionLookups(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for ConnectionLookups returned from the connection.
    """
    orderBy: ConnectionLookupOrder

    """
    Filtering options for ConnectionLookups returned from the connection.
    """
    where: ConnectionLookupWhereInput
  ): ConnectionLookupConnection!
  connectionShopifies(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ConnectionShopifies returned from the connection.
    """
    where: ConnectionShopifyWhereInput
  ): ConnectionShopifyConnection!
  consolidations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Consolidations returned from the connection.
    """
    orderBy: ConsolidationOrder

    """
    Filtering options for Consolidations returned from the connection.
    """
    where: ConsolidationWhereInput
  ): ConsolidationConnection!
  contacts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Contacts returned from the connection.
    """
    where: ContactWhereInput
  ): ContactConnection!
  countries(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Countries returned from the connection.
    """
    where: CountryWhereInput
  ): CountryConnection!
  countryHarmonizedCodes(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for CountryHarmonizedCodes returned from the connection.
    """
    where: CountryHarmonizedCodeWhereInput
  ): CountryHarmonizedCodeConnection!
  currencies(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Currencies returned from the connection.
    """
    where: CurrencyWhereInput
  ): CurrencyConnection!
  deliveryOptions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptions returned from the connection.
    """
    where: DeliveryOptionWhereInput
  ): DeliveryOptionConnection!
  deliveryOptionBrings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptionBrings returned from the connection.
    """
    where: DeliveryOptionBringWhereInput
  ): DeliveryOptionBringConnection!
  deliveryOptionDaOs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptionDAOs returned from the connection.
    """
    where: DeliveryOptionDAOWhereInput
  ): DeliveryOptionDAOConnection!
  deliveryOptionDfs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptionDFs returned from the connection.
    """
    where: DeliveryOptionDFWhereInput
  ): DeliveryOptionDFConnection!
  deliveryOptionDsVs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptionDSVs returned from the connection.
    """
    where: DeliveryOptionDSVWhereInput
  ): DeliveryOptionDSVConnection!
  deliveryOptionEasyPosts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptionEasyPosts returned from the connection.
    """
    where: DeliveryOptionEasyPostWhereInput
  ): DeliveryOptionEasyPostConnection!
  deliveryOptionGlSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptionGLSs returned from the connection.
    """
    where: DeliveryOptionGLSWhereInput
  ): DeliveryOptionGLSConnection!
  deliveryOptionPostNords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptionPostNords returned from the connection.
    """
    where: DeliveryOptionPostNordWhereInput
  ): DeliveryOptionPostNordConnection!
  deliveryOptionUspSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryOptionUSPSs returned from the connection.
    """
    where: DeliveryOptionUSPSWhereInput
  ): DeliveryOptionUSPSConnection!
  deliveryRules(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryRules returned from the connection.
    """
    where: DeliveryRuleWhereInput
  ): DeliveryRuleConnection!
  deliveryRuleConstraints(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryRuleConstraints returned from the connection.
    """
    where: DeliveryRuleConstraintWhereInput
  ): DeliveryRuleConstraintConnection!
  deliveryRuleConstraintGroups(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DeliveryRuleConstraintGroups returned from the connection.
    """
    where: DeliveryRuleConstraintGroupWhereInput
  ): DeliveryRuleConstraintGroupConnection!
  documents(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Documents returned from the connection.
    """
    where: DocumentWhereInput
  ): DocumentConnection!
  documentFiles(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for DocumentFiles returned from the connection.
    """
    where: DocumentFileWhereInput
  ): DocumentFileConnection!
  emailTemplates(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for EmailTemplates returned from the connection.
    """
    where: EmailTemplateWhereInput
  ): EmailTemplateConnection!
  hypothesisTests(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for HypothesisTests returned from the connection.
    """
    where: HypothesisTestWhereInput
  ): HypothesisTestConnection!
  hypothesisTestDeliveryOptions(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for HypothesisTestDeliveryOptions returned from the connection.
    """
    where: HypothesisTestDeliveryOptionWhereInput
  ): HypothesisTestDeliveryOptionConnection!
  hypothesisTestDeliveryOptionLookups(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for HypothesisTestDeliveryOptionLookups returned from the connection.
    """
    where: HypothesisTestDeliveryOptionLookupWhereInput
  ): HypothesisTestDeliveryOptionLookupConnection!
  hypothesisTestDeliveryOptionRequests(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for HypothesisTestDeliveryOptionRequests returned from the connection.
    """
    where: HypothesisTestDeliveryOptionRequestWhereInput
  ): HypothesisTestDeliveryOptionRequestConnection!
  inventoryItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for InventoryItems returned from the connection.
    """
    where: InventoryItemWhereInput
  ): InventoryItemConnection!
  languages(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Languages returned from the connection.
    """
    where: LanguageWhereInput
  ): LanguageConnection!
  locations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Locations returned from the connection.
    """
    where: LocationWhereInput
  ): LocationConnection!
  locationTags(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for LocationTags returned from the connection.
    """
    where: LocationTagWhereInput
  ): LocationTagConnection!
  notifications(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Notifications returned from the connection.
    """
    where: NotificationWhereInput
  ): NotificationConnection!
  orders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Orders returned from the connection.
    """
    orderBy: OrderOrder

    """
    Filtering options for Orders returned from the connection.
    """
    where: OrderWhereInput
  ): OrderConnection!
  orderSenders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for OrderSenders returned from the connection.
    """
    where: OrderSenderWhereInput
  ): OrderSenderConnection!
  packagings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Packagings returned from the connection.
    """
    where: PackagingWhereInput
  ): PackagingConnection!
  packagingDfs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for PackagingDFs returned from the connection.
    """
    where: PackagingDFWhereInput
  ): PackagingDFConnection!
  packagingUspSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for PackagingUSPSs returned from the connection.
    """
    where: PackagingUSPSWhereInput
  ): PackagingUSPSConnection!
  packagingUSPSProcessingCategories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for PackagingUSPSProcessingCategories returned from the connection.
    """
    where: PackagingUSPSProcessingCategoryWhereInput
  ): PackagingUSPSProcessingCategoryConnection!
  packagingUSPSRateIndicators(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for PackagingUSPSRateIndicators returned from the connection.
    """
    where: PackagingUSPSRateIndicatorWhereInput
  ): PackagingUSPSRateIndicatorConnection!
  pallets(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Pallets returned from the connection.
    """
    where: PalletWhereInput
  ): PalletConnection!
  parcelShops(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ParcelShops returned from the connection.
    """
    where: ParcelShopWhereInput
  ): ParcelShopConnection!
  parcelShopBrings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ParcelShopBrings returned from the connection.
    """
    where: ParcelShopBringWhereInput
  ): ParcelShopBringConnection!
  parcelShopDaOs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ParcelShopDAOs returned from the connection.
    """
    where: ParcelShopDAOWhereInput
  ): ParcelShopDAOConnection!
  parcelShopGlSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ParcelShopGLSs returned from the connection.
    """
    where: ParcelShopGLSWhereInput
  ): ParcelShopGLSConnection!
  parcelShopPostNords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ParcelShopPostNords returned from the connection.
    """
    where: ParcelShopPostNordWhereInput
  ): ParcelShopPostNordConnection!
  plans(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Plans returned from the connection.
    """
    where: PlanWhereInput
  ): PlanConnection!
  printers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Printers returned from the connection.
    """
    where: PrinterWhereInput
  ): PrinterConnection!
  products(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Products returned from the connection.
    """
    where: ProductWhereInput
  ): ProductConnection!
  productImages(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ProductImages returned from the connection.
    """
    where: ProductImageWhereInput
  ): ProductImageConnection!
  productTags(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ProductTags returned from the connection.
    """
    where: ProductTagWhereInput
  ): ProductTagConnection!
  productVariants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ProductVariants returned from the connection.
    """
    where: ProductVariantWhereInput
  ): ProductVariantConnection!
  returnCollis(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for ReturnCollis returned from the connection.
    """
    orderBy: ReturnColliOrder

    """
    Filtering options for ReturnCollis returned from the connection.
    """
    where: ReturnColliWhereInput
  ): ReturnColliConnection!
  returnColliHistories(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ReturnColliHistories returned from the connection.
    """
    where: ReturnColliHistoryWhereInput
  ): ReturnColliHistoryConnection!
  returnOrderLines(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ReturnOrderLines returned from the connection.
    """
    where: ReturnOrderLineWhereInput
  ): ReturnOrderLineConnection!
  returnPortals(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ReturnPortals returned from the connection.
    """
    where: ReturnPortalWhereInput
  ): ReturnPortalConnection!
  returnPortalClaims(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ReturnPortalClaims returned from the connection.
    """
    where: ReturnPortalClaimWhereInput
  ): ReturnPortalClaimConnection!
  seatGroups(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for SeatGroups returned from the connection.
    """
    where: SeatGroupWhereInput
  ): SeatGroupConnection!
  seatGroupAccessRights(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for SeatGroupAccessRights returned from the connection.
    """
    where: SeatGroupAccessRightWhereInput
  ): SeatGroupAccessRightConnection!
  shipments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for Shipments returned from the connection.
    """
    orderBy: ShipmentOrder

    """
    Filtering options for Shipments returned from the connection.
    """
    where: ShipmentWhereInput
  ): ShipmentConnection!
  shipmentBrings(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentBrings returned from the connection.
    """
    where: ShipmentBringWhereInput
  ): ShipmentBringConnection!
  shipmentDaOs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentDAOs returned from the connection.
    """
    where: ShipmentDAOWhereInput
  ): ShipmentDAOConnection!
  shipmentDfs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentDFs returned from the connection.
    """
    where: ShipmentDFWhereInput
  ): ShipmentDFConnection!
  shipmentDsVs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentDSVs returned from the connection.
    """
    where: ShipmentDSVWhereInput
  ): ShipmentDSVConnection!
  shipmentEasyPosts(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentEasyPosts returned from the connection.
    """
    where: ShipmentEasyPostWhereInput
  ): ShipmentEasyPostConnection!
  shipmentGlSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentGLSs returned from the connection.
    """
    where: ShipmentGLSWhereInput
  ): ShipmentGLSConnection!
  shipmentPallets(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentPallets returned from the connection.
    """
    where: ShipmentPalletWhereInput
  ): ShipmentPalletConnection!
  shipmentParcels(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Ordering options for ShipmentParcels returned from the connection.
    """
    orderBy: ShipmentParcelOrder

    """
    Filtering options for ShipmentParcels returned from the connection.
    """
    where: ShipmentParcelWhereInput
  ): ShipmentParcelConnection!
  shipmentPostNords(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentPostNords returned from the connection.
    """
    where: ShipmentPostNordWhereInput
  ): ShipmentPostNordConnection!
  shipmentUspSs(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for ShipmentUSPSs returned from the connection.
    """
    where: ShipmentUSPSWhereInput
  ): ShipmentUSPSConnection!
  signupOptionsSlice(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for SignupOptionsSlice returned from the connection.
    """
    where: SignupOptionsWhereInput
  ): SignupOptionsConnection!
  systemEventsSlice(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for SystemEventsSlice returned from the connection.
    """
    where: SystemEventsWhereInput
  ): SystemEventsConnection!
  tenants(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Tenants returned from the connection.
    """
    where: TenantWhereInput
  ): TenantConnection!
  users(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Users returned from the connection.
    """
    where: UserWhereInput
  ): UserConnection!
  userSeats(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for UserSeats returned from the connection.
    """
    where: UserSeatWhereInput
  ): UserSeatConnection!
  workstations(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: Cursor

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: Cursor

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Filtering options for Workstations returned from the connection.
    """
    where: WorkstationWhereInput
  ): WorkstationConnection!
}
type ReturnColli implements Node {
  id: ID!
  tenantID: ID!
  expectedAt: Time
  labelPdf: String
  labelPng: String
  qrCodePng: String
  comment: String
  createdAt: Time!
  status: ReturnColliStatus!
  """
  Timestamp of email successfully sent after status changed to received
  """
  emailReceived: Time
  """
  Timestamp of email successfully sent after status changed to accepted
  """
  emailAccepted: Time
  """
  Timestamp of email successfully sent after status changed to pending
  """
  emailConfirmationLabel: Time
  """
  Timestamp of email successfully sent after status changed to pending
  """
  emailConfirmationQrCode: Time
  tenant: Tenant!
  recipient: Address!
  sender: Address!
  order: Order!
  deliveryOption: DeliveryOption
  returnPortal: ReturnPortal!
  """
  Allows packaging to be predefined for this colli and will be used for the return shipment parcel
  """
  packaging: Packaging
  returnOrderLine: [ReturnOrderLine!]
  returnColliHistory: [ReturnColliHistory!]
}
"""
A connection to a list of items.
"""
type ReturnColliConnection {
  """
  A list of edges.
  """
  edges: [ReturnColliEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ReturnColliEdge {
  """
  The item at the end of the edge.
  """
  node: ReturnColli
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ReturnColliHistory implements Node {
  id: ID!
  tenantID: ID!
  description: String!
  type: ReturnColliHistoryType!
  changeHistory: ChangeHistory!
  tenant: Tenant!
  returnColli: ReturnColli!
}
"""
A connection to a list of items.
"""
type ReturnColliHistoryConnection {
  """
  A list of edges.
  """
  edges: [ReturnColliHistoryEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ReturnColliHistoryEdge {
  """
  The item at the end of the edge.
  """
  node: ReturnColliHistory
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ReturnColliHistoryType is enum for the field type
"""
enum ReturnColliHistoryType @goModel(model: "delivrio.io/go/ent/returncollihistory.Type") {
  create
  update
  delete
  notify
}
"""
ReturnColliHistoryWhereInput is used for filtering ReturnColliHistory objects.
Input was generated by ent.
"""
input ReturnColliHistoryWhereInput {
  not: ReturnColliHistoryWhereInput
  and: [ReturnColliHistoryWhereInput!]
  or: [ReturnColliHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  type field predicates
  """
  type: ReturnColliHistoryType
  typeNEQ: ReturnColliHistoryType
  typeIn: [ReturnColliHistoryType!]
  typeNotIn: [ReturnColliHistoryType!]
  """
  change_history edge predicates
  """
  hasChangeHistory: Boolean
  hasChangeHistoryWith: [ChangeHistoryWhereInput!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  return_colli edge predicates
  """
  hasReturnColli: Boolean
  hasReturnColliWith: [ReturnColliWhereInput!]
}
"""
Ordering options for ReturnColli connections
"""
input ReturnColliOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order ReturnCollis.
  """
  field: ReturnColliOrderField!
}
"""
Properties by which ReturnColli connections can be ordered.
"""
enum ReturnColliOrderField {
  CREATED_AT
}
"""
ReturnColliStatus is enum for the field status
"""
enum ReturnColliStatus @goModel(model: "delivrio.io/go/ent/returncolli.Status") {
  Opened
  Pending
  Inbound
  Received
  Accepted
  Declined
  Deleted
}
"""
ReturnColliWhereInput is used for filtering ReturnColli objects.
Input was generated by ent.
"""
input ReturnColliWhereInput {
  not: ReturnColliWhereInput
  and: [ReturnColliWhereInput!]
  or: [ReturnColliWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  expected_at field predicates
  """
  expectedAt: Time
  expectedAtNEQ: Time
  expectedAtIn: [Time!]
  expectedAtNotIn: [Time!]
  expectedAtGT: Time
  expectedAtGTE: Time
  expectedAtLT: Time
  expectedAtLTE: Time
  expectedAtIsNil: Boolean
  expectedAtNotNil: Boolean
  """
  label_pdf field predicates
  """
  labelPdf: String
  labelPdfNEQ: String
  labelPdfIn: [String!]
  labelPdfNotIn: [String!]
  labelPdfGT: String
  labelPdfGTE: String
  labelPdfLT: String
  labelPdfLTE: String
  labelPdfContains: String
  labelPdfHasPrefix: String
  labelPdfHasSuffix: String
  labelPdfIsNil: Boolean
  labelPdfNotNil: Boolean
  labelPdfEqualFold: String
  labelPdfContainsFold: String
  """
  label_png field predicates
  """
  labelPng: String
  labelPngNEQ: String
  labelPngIn: [String!]
  labelPngNotIn: [String!]
  labelPngGT: String
  labelPngGTE: String
  labelPngLT: String
  labelPngLTE: String
  labelPngContains: String
  labelPngHasPrefix: String
  labelPngHasSuffix: String
  labelPngIsNil: Boolean
  labelPngNotNil: Boolean
  labelPngEqualFold: String
  labelPngContainsFold: String
  """
  qr_code_png field predicates
  """
  qrCodePng: String
  qrCodePngNEQ: String
  qrCodePngIn: [String!]
  qrCodePngNotIn: [String!]
  qrCodePngGT: String
  qrCodePngGTE: String
  qrCodePngLT: String
  qrCodePngLTE: String
  qrCodePngContains: String
  qrCodePngHasPrefix: String
  qrCodePngHasSuffix: String
  qrCodePngIsNil: Boolean
  qrCodePngNotNil: Boolean
  qrCodePngEqualFold: String
  qrCodePngContainsFold: String
  """
  comment field predicates
  """
  comment: String
  commentNEQ: String
  commentIn: [String!]
  commentNotIn: [String!]
  commentGT: String
  commentGTE: String
  commentLT: String
  commentLTE: String
  commentContains: String
  commentHasPrefix: String
  commentHasSuffix: String
  commentIsNil: Boolean
  commentNotNil: Boolean
  commentEqualFold: String
  commentContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  status field predicates
  """
  status: ReturnColliStatus
  statusNEQ: ReturnColliStatus
  statusIn: [ReturnColliStatus!]
  statusNotIn: [ReturnColliStatus!]
  """
  email_received field predicates
  """
  emailReceived: Time
  emailReceivedNEQ: Time
  emailReceivedIn: [Time!]
  emailReceivedNotIn: [Time!]
  emailReceivedGT: Time
  emailReceivedGTE: Time
  emailReceivedLT: Time
  emailReceivedLTE: Time
  emailReceivedIsNil: Boolean
  emailReceivedNotNil: Boolean
  """
  email_accepted field predicates
  """
  emailAccepted: Time
  emailAcceptedNEQ: Time
  emailAcceptedIn: [Time!]
  emailAcceptedNotIn: [Time!]
  emailAcceptedGT: Time
  emailAcceptedGTE: Time
  emailAcceptedLT: Time
  emailAcceptedLTE: Time
  emailAcceptedIsNil: Boolean
  emailAcceptedNotNil: Boolean
  """
  email_confirmation_label field predicates
  """
  emailConfirmationLabel: Time
  emailConfirmationLabelNEQ: Time
  emailConfirmationLabelIn: [Time!]
  emailConfirmationLabelNotIn: [Time!]
  emailConfirmationLabelGT: Time
  emailConfirmationLabelGTE: Time
  emailConfirmationLabelLT: Time
  emailConfirmationLabelLTE: Time
  emailConfirmationLabelIsNil: Boolean
  emailConfirmationLabelNotNil: Boolean
  """
  email_confirmation_qr_code field predicates
  """
  emailConfirmationQrCode: Time
  emailConfirmationQrCodeNEQ: Time
  emailConfirmationQrCodeIn: [Time!]
  emailConfirmationQrCodeNotIn: [Time!]
  emailConfirmationQrCodeGT: Time
  emailConfirmationQrCodeGTE: Time
  emailConfirmationQrCodeLT: Time
  emailConfirmationQrCodeLTE: Time
  emailConfirmationQrCodeIsNil: Boolean
  emailConfirmationQrCodeNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  recipient edge predicates
  """
  hasRecipient: Boolean
  hasRecipientWith: [AddressWhereInput!]
  """
  sender edge predicates
  """
  hasSender: Boolean
  hasSenderWith: [AddressWhereInput!]
  """
  order edge predicates
  """
  hasOrder: Boolean
  hasOrderWith: [OrderWhereInput!]
  """
  delivery_option edge predicates
  """
  hasDeliveryOption: Boolean
  hasDeliveryOptionWith: [DeliveryOptionWhereInput!]
  """
  return_portal edge predicates
  """
  hasReturnPortal: Boolean
  hasReturnPortalWith: [ReturnPortalWhereInput!]
  """
  packaging edge predicates
  """
  hasPackaging: Boolean
  hasPackagingWith: [PackagingWhereInput!]
  """
  return_order_line edge predicates
  """
  hasReturnOrderLine: Boolean
  hasReturnOrderLineWith: [ReturnOrderLineWhereInput!]
  """
  return_colli_history edge predicates
  """
  hasReturnColliHistory: Boolean
  hasReturnColliHistoryWith: [ReturnColliHistoryWhereInput!]
}
type ReturnOrderLine implements Node {
  id: ID!
  tenantID: ID!
  units: Int!
  tenant: Tenant!
  returnColli: ReturnColli!
  orderLine: OrderLine!
  returnPortalClaim: ReturnPortalClaim!
}
"""
A connection to a list of items.
"""
type ReturnOrderLineConnection {
  """
  A list of edges.
  """
  edges: [ReturnOrderLineEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ReturnOrderLineEdge {
  """
  The item at the end of the edge.
  """
  node: ReturnOrderLine
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ReturnOrderLineWhereInput is used for filtering ReturnOrderLine objects.
Input was generated by ent.
"""
input ReturnOrderLineWhereInput {
  not: ReturnOrderLineWhereInput
  and: [ReturnOrderLineWhereInput!]
  or: [ReturnOrderLineWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  units field predicates
  """
  units: Int
  unitsNEQ: Int
  unitsIn: [Int!]
  unitsNotIn: [Int!]
  unitsGT: Int
  unitsGTE: Int
  unitsLT: Int
  unitsLTE: Int
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  return_colli edge predicates
  """
  hasReturnColli: Boolean
  hasReturnColliWith: [ReturnColliWhereInput!]
  """
  order_line edge predicates
  """
  hasOrderLine: Boolean
  hasOrderLineWith: [OrderLineWhereInput!]
  """
  return_portal_claim edge predicates
  """
  hasReturnPortalClaim: Boolean
  hasReturnPortalClaimWith: [ReturnPortalClaimWhereInput!]
}
type ReturnPortal implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  returnOpenHours: Int!
  automaticallyAccept: Boolean!
  tenant: Tenant!
  returnPortalClaim: [ReturnPortalClaim!]
  returnLocation: [Location!]
  deliveryOptions: [DeliveryOption!]
  connection: Connection
  emailConfirmationLabel: EmailTemplate
  emailConfirmationQrCode: EmailTemplate
  emailReceived: EmailTemplate
  emailAccepted: EmailTemplate
  returnColli: [ReturnColli!]
}
type ReturnPortalClaim implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  description: String!
  restockable: Boolean!
  archived: Boolean!
  tenant: Tenant!
  returnPortal: ReturnPortal!
  """
  Return to address
  """
  returnLocation: Location
  returnOrderLine: [ReturnOrderLine!]
}
"""
A connection to a list of items.
"""
type ReturnPortalClaimConnection {
  """
  A list of edges.
  """
  edges: [ReturnPortalClaimEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ReturnPortalClaimEdge {
  """
  The item at the end of the edge.
  """
  node: ReturnPortalClaim
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ReturnPortalClaimWhereInput is used for filtering ReturnPortalClaim objects.
Input was generated by ent.
"""
input ReturnPortalClaimWhereInput {
  not: ReturnPortalClaimWhereInput
  and: [ReturnPortalClaimWhereInput!]
  or: [ReturnPortalClaimWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  restockable field predicates
  """
  restockable: Boolean
  restockableNEQ: Boolean
  """
  archived field predicates
  """
  archived: Boolean
  archivedNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  return_portal edge predicates
  """
  hasReturnPortal: Boolean
  hasReturnPortalWith: [ReturnPortalWhereInput!]
  """
  return_location edge predicates
  """
  hasReturnLocation: Boolean
  hasReturnLocationWith: [LocationWhereInput!]
  """
  return_order_line edge predicates
  """
  hasReturnOrderLine: Boolean
  hasReturnOrderLineWith: [ReturnOrderLineWhereInput!]
}
"""
A connection to a list of items.
"""
type ReturnPortalConnection {
  """
  A list of edges.
  """
  edges: [ReturnPortalEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ReturnPortalEdge {
  """
  The item at the end of the edge.
  """
  node: ReturnPortal
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ReturnPortalWhereInput is used for filtering ReturnPortal objects.
Input was generated by ent.
"""
input ReturnPortalWhereInput {
  not: ReturnPortalWhereInput
  and: [ReturnPortalWhereInput!]
  or: [ReturnPortalWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  return_open_hours field predicates
  """
  returnOpenHours: Int
  returnOpenHoursNEQ: Int
  returnOpenHoursIn: [Int!]
  returnOpenHoursNotIn: [Int!]
  returnOpenHoursGT: Int
  returnOpenHoursGTE: Int
  returnOpenHoursLT: Int
  returnOpenHoursLTE: Int
  """
  automatically_accept field predicates
  """
  automaticallyAccept: Boolean
  automaticallyAcceptNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  return_portal_claim edge predicates
  """
  hasReturnPortalClaim: Boolean
  hasReturnPortalClaimWith: [ReturnPortalClaimWhereInput!]
  """
  return_location edge predicates
  """
  hasReturnLocation: Boolean
  hasReturnLocationWith: [LocationWhereInput!]
  """
  delivery_options edge predicates
  """
  hasDeliveryOptions: Boolean
  hasDeliveryOptionsWith: [DeliveryOptionWhereInput!]
  """
  connection edge predicates
  """
  hasConnection: Boolean
  hasConnectionWith: [ConnectionWhereInput!]
  """
  email_confirmation_label edge predicates
  """
  hasEmailConfirmationLabel: Boolean
  hasEmailConfirmationLabelWith: [EmailTemplateWhereInput!]
  """
  email_confirmation_qr_code edge predicates
  """
  hasEmailConfirmationQrCode: Boolean
  hasEmailConfirmationQrCodeWith: [EmailTemplateWhereInput!]
  """
  email_received edge predicates
  """
  hasEmailReceived: Boolean
  hasEmailReceivedWith: [EmailTemplateWhereInput!]
  """
  email_accepted edge predicates
  """
  hasEmailAccepted: Boolean
  hasEmailAcceptedWith: [EmailTemplateWhereInput!]
  """
  return_colli edge predicates
  """
  hasReturnColli: Boolean
  hasReturnColliWith: [ReturnColliWhereInput!]
}
type SeatGroup implements Node {
  id: ID!
  tenantID: ID!
  name: String!
  createdAt: Time
  tenant: Tenant!
  user: [User!]
  assignedAccessRight: [AccessRight!]
  seatGroupAccessRight: [SeatGroupAccessRight!]
}
type SeatGroupAccessRight implements Node {
  id: ID!
  tenantID: ID!
  level: SeatGroupAccessRightLevel!
  accessRightID: ID!
  seatGroupID: ID!
  tenant: Tenant!
  accessRight: AccessRight!
  seatGroup: SeatGroup!
}
"""
A connection to a list of items.
"""
type SeatGroupAccessRightConnection {
  """
  A list of edges.
  """
  edges: [SeatGroupAccessRightEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type SeatGroupAccessRightEdge {
  """
  The item at the end of the edge.
  """
  node: SeatGroupAccessRight
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
SeatGroupAccessRightLevel is enum for the field level
"""
enum SeatGroupAccessRightLevel @goModel(model: "delivrio.io/go/ent/seatgroupaccessright.Level") {
  none
  read
  write
}
"""
SeatGroupAccessRightWhereInput is used for filtering SeatGroupAccessRight objects.
Input was generated by ent.
"""
input SeatGroupAccessRightWhereInput {
  not: SeatGroupAccessRightWhereInput
  and: [SeatGroupAccessRightWhereInput!]
  or: [SeatGroupAccessRightWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  level field predicates
  """
  level: SeatGroupAccessRightLevel
  levelNEQ: SeatGroupAccessRightLevel
  levelIn: [SeatGroupAccessRightLevel!]
  levelNotIn: [SeatGroupAccessRightLevel!]
}
"""
A connection to a list of items.
"""
type SeatGroupConnection {
  """
  A list of edges.
  """
  edges: [SeatGroupEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type SeatGroupEdge {
  """
  The item at the end of the edge.
  """
  node: SeatGroup
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
SeatGroupWhereInput is used for filtering SeatGroup objects.
Input was generated by ent.
"""
input SeatGroupWhereInput {
  not: SeatGroupWhereInput
  and: [SeatGroupWhereInput!]
  or: [SeatGroupWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  assigned_access_right edge predicates
  """
  hasAssignedAccessRight: Boolean
  hasAssignedAccessRightWith: [AccessRightWhereInput!]
  """
  seat_group_access_right edge predicates
  """
  hasSeatGroupAccessRight: Boolean
  hasSeatGroupAccessRightWith: [SeatGroupAccessRightWhereInput!]
}
type Shipment implements Node {
  id: ID!
  tenantID: ID!
  shipmentPublicID: String!
  createdAt: Time!
  status: ShipmentStatus!
  tenant: Tenant!
  """
  Can get this from edges, but want the reference to persist even after cancelling
  """
  carrier: Carrier!
  shipmentHistory: [ShipmentHistory!]
  shipmentBring: ShipmentBring
  shipmentDAO: ShipmentDAO
  shipmentDF: ShipmentDF
  shipmentDSV: ShipmentDSV
  shipmentEasyPost: ShipmentEasyPost
  shipmentPostNord: ShipmentPostNord
  shipmentGLS: ShipmentGLS
  shipmentUSPS: ShipmentUSPS
  """
  A shipment may have 0 or more collis
  """
  consolidation: Consolidation
  """
  After a shipment is cancelled
  """
  oldConsolidation: [Consolidation!]
  """
  A shipment may have 0 or more collis
  """
  shipmentParcel: [ShipmentParcel!]
  """
  A shipment may have 0 or more pallets
  """
  shipmentPallet: [ShipmentPallet!]
}
type ShipmentBring implements Node {
  id: ID!
  tenantID: ID!
  consignmentNumber: String!
  tenant: Tenant!
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentBringConnection {
  """
  A list of edges.
  """
  edges: [ShipmentBringEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentBringEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentBring
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentBringWhereInput is used for filtering ShipmentBring objects.
Input was generated by ent.
"""
input ShipmentBringWhereInput {
  not: ShipmentBringWhereInput
  and: [ShipmentBringWhereInput!]
  or: [ShipmentBringWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  consignment_number field predicates
  """
  consignmentNumber: String
  consignmentNumberNEQ: String
  consignmentNumberIn: [String!]
  consignmentNumberNotIn: [String!]
  consignmentNumberGT: String
  consignmentNumberGTE: String
  consignmentNumberLT: String
  consignmentNumberLTE: String
  consignmentNumberContains: String
  consignmentNumberHasPrefix: String
  consignmentNumberHasSuffix: String
  consignmentNumberEqualFold: String
  consignmentNumberContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
"""
A connection to a list of items.
"""
type ShipmentConnection {
  """
  A list of edges.
  """
  edges: [ShipmentEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
type ShipmentDAO implements Node {
  id: ID!
  tenantID: ID!
  barcodeID: String!
  tenant: Tenant!
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentDAOConnection {
  """
  A list of edges.
  """
  edges: [ShipmentDAOEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentDAOEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentDAO
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentDAOWhereInput is used for filtering ShipmentDAO objects.
Input was generated by ent.
"""
input ShipmentDAOWhereInput {
  not: ShipmentDAOWhereInput
  and: [ShipmentDAOWhereInput!]
  or: [ShipmentDAOWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  barcode_id field predicates
  """
  barcodeID: String
  barcodeIDNEQ: String
  barcodeIDIn: [String!]
  barcodeIDNotIn: [String!]
  barcodeIDGT: String
  barcodeIDGTE: String
  barcodeIDLT: String
  barcodeIDLTE: String
  barcodeIDContains: String
  barcodeIDHasPrefix: String
  barcodeIDHasSuffix: String
  barcodeIDEqualFold: String
  barcodeIDContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
type ShipmentDF implements Node {
  id: ID!
  tenantID: ID!
  tenant: Tenant!
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentDFConnection {
  """
  A list of edges.
  """
  edges: [ShipmentDFEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentDFEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentDF
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentDFWhereInput is used for filtering ShipmentDF objects.
Input was generated by ent.
"""
input ShipmentDFWhereInput {
  not: ShipmentDFWhereInput
  and: [ShipmentDFWhereInput!]
  or: [ShipmentDFWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
type ShipmentDSV implements Node {
  id: ID!
  tenantID: ID!
  barcodeID: String!
  tenant: Tenant!
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentDSVConnection {
  """
  A list of edges.
  """
  edges: [ShipmentDSVEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentDSVEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentDSV
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentDSVWhereInput is used for filtering ShipmentDSV objects.
Input was generated by ent.
"""
input ShipmentDSVWhereInput {
  not: ShipmentDSVWhereInput
  and: [ShipmentDSVWhereInput!]
  or: [ShipmentDSVWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  barcode_id field predicates
  """
  barcodeID: String
  barcodeIDNEQ: String
  barcodeIDIn: [String!]
  barcodeIDNotIn: [String!]
  barcodeIDGT: String
  barcodeIDGTE: String
  barcodeIDLT: String
  barcodeIDLTE: String
  barcodeIDContains: String
  barcodeIDHasPrefix: String
  barcodeIDHasSuffix: String
  barcodeIDEqualFold: String
  barcodeIDContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
type ShipmentEasyPost implements Node {
  id: ID!
  tenantID: ID!
  """
  duplicate, may be dropped after verifying
  """
  trackingNumber: String
  epShipmentID: String
  rate: Float
  estDeliveryDate: Time
  tenant: Tenant!
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentEasyPostConnection {
  """
  A list of edges.
  """
  edges: [ShipmentEasyPostEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentEasyPostEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentEasyPost
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentEasyPostWhereInput is used for filtering ShipmentEasyPost objects.
Input was generated by ent.
"""
input ShipmentEasyPostWhereInput {
  not: ShipmentEasyPostWhereInput
  and: [ShipmentEasyPostWhereInput!]
  or: [ShipmentEasyPostWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tracking_number field predicates
  """
  trackingNumber: String
  trackingNumberNEQ: String
  trackingNumberIn: [String!]
  trackingNumberNotIn: [String!]
  trackingNumberGT: String
  trackingNumberGTE: String
  trackingNumberLT: String
  trackingNumberLTE: String
  trackingNumberContains: String
  trackingNumberHasPrefix: String
  trackingNumberHasSuffix: String
  trackingNumberIsNil: Boolean
  trackingNumberNotNil: Boolean
  trackingNumberEqualFold: String
  trackingNumberContainsFold: String
  """
  ep_shipment_id field predicates
  """
  epShipmentID: String
  epShipmentIDNEQ: String
  epShipmentIDIn: [String!]
  epShipmentIDNotIn: [String!]
  epShipmentIDGT: String
  epShipmentIDGTE: String
  epShipmentIDLT: String
  epShipmentIDLTE: String
  epShipmentIDContains: String
  epShipmentIDHasPrefix: String
  epShipmentIDHasSuffix: String
  epShipmentIDIsNil: Boolean
  epShipmentIDNotNil: Boolean
  epShipmentIDEqualFold: String
  epShipmentIDContainsFold: String
  """
  rate field predicates
  """
  rate: Float
  rateNEQ: Float
  rateIn: [Float!]
  rateNotIn: [Float!]
  rateGT: Float
  rateGTE: Float
  rateLT: Float
  rateLTE: Float
  rateIsNil: Boolean
  rateNotNil: Boolean
  """
  est_delivery_date field predicates
  """
  estDeliveryDate: Time
  estDeliveryDateNEQ: Time
  estDeliveryDateIn: [Time!]
  estDeliveryDateNotIn: [Time!]
  estDeliveryDateGT: Time
  estDeliveryDateGTE: Time
  estDeliveryDateLT: Time
  estDeliveryDateLTE: Time
  estDeliveryDateIsNil: Boolean
  estDeliveryDateNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
"""
An edge in a connection.
"""
type ShipmentEdge {
  """
  The item at the end of the edge.
  """
  node: Shipment
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
type ShipmentGLS implements Node {
  id: ID!
  tenantID: ID!
  consignmentID: String!
  tenant: Tenant!
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentGLSConnection {
  """
  A list of edges.
  """
  edges: [ShipmentGLSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentGLSEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentGLS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentGLSWhereInput is used for filtering ShipmentGLS objects.
Input was generated by ent.
"""
input ShipmentGLSWhereInput {
  not: ShipmentGLSWhereInput
  and: [ShipmentGLSWhereInput!]
  or: [ShipmentGLSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  consignment_id field predicates
  """
  consignmentID: String
  consignmentIDNEQ: String
  consignmentIDIn: [String!]
  consignmentIDNotIn: [String!]
  consignmentIDGT: String
  consignmentIDGTE: String
  consignmentIDLT: String
  consignmentIDLTE: String
  consignmentIDContains: String
  consignmentIDHasPrefix: String
  consignmentIDHasSuffix: String
  consignmentIDEqualFold: String
  consignmentIDContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
type ShipmentHistory implements Node {
  id: ID!
  tenantID: ID!
  type: ShipmentHistoryType!
  changeHistory: ChangeHistory!
  tenant: Tenant!
  shipment: Shipment!
}
"""
ShipmentHistoryType is enum for the field type
"""
enum ShipmentHistoryType @goModel(model: "delivrio.io/go/ent/shipmenthistory.Type") {
  create
  update
  delete
}
"""
ShipmentHistoryWhereInput is used for filtering ShipmentHistory objects.
Input was generated by ent.
"""
input ShipmentHistoryWhereInput {
  not: ShipmentHistoryWhereInput
  and: [ShipmentHistoryWhereInput!]
  or: [ShipmentHistoryWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  type field predicates
  """
  type: ShipmentHistoryType
  typeNEQ: ShipmentHistoryType
  typeIn: [ShipmentHistoryType!]
  typeNotIn: [ShipmentHistoryType!]
  """
  change_history edge predicates
  """
  hasChangeHistory: Boolean
  hasChangeHistoryWith: [ChangeHistoryWhereInput!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
"""
Ordering options for Shipment connections
"""
input ShipmentOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order Shipments.
  """
  field: ShipmentOrderField!
}
"""
Properties by which Shipment connections can be ordered.
"""
enum ShipmentOrderField {
  CREATED_AT
}
type ShipmentPallet implements Node {
  id: ID!
  tenantID: ID!
  barcode: String!
  colliNumber: String!
  carrierID: String!
  labelPdf: String
  labelZpl: String
  status: ShipmentPalletStatus!
  tenant: Tenant!
  pallet: Pallet
  """
  After shipment cancelled, ref moved here. Mostly for consistency, since the Shipment is also connected still.
  """
  oldPallet: [Pallet!]
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentPalletConnection {
  """
  A list of edges.
  """
  edges: [ShipmentPalletEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentPalletEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentPallet
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentPalletStatus is enum for the field status
"""
enum ShipmentPalletStatus @goModel(model: "delivrio.io/go/ent/shipmentpallet.Status") {
  pending
  printed
}
"""
ShipmentPalletWhereInput is used for filtering ShipmentPallet objects.
Input was generated by ent.
"""
input ShipmentPalletWhereInput {
  not: ShipmentPalletWhereInput
  and: [ShipmentPalletWhereInput!]
  or: [ShipmentPalletWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  barcode field predicates
  """
  barcode: String
  barcodeNEQ: String
  barcodeIn: [String!]
  barcodeNotIn: [String!]
  barcodeGT: String
  barcodeGTE: String
  barcodeLT: String
  barcodeLTE: String
  barcodeContains: String
  barcodeHasPrefix: String
  barcodeHasSuffix: String
  barcodeEqualFold: String
  barcodeContainsFold: String
  """
  colli_number field predicates
  """
  colliNumber: String
  colliNumberNEQ: String
  colliNumberIn: [String!]
  colliNumberNotIn: [String!]
  colliNumberGT: String
  colliNumberGTE: String
  colliNumberLT: String
  colliNumberLTE: String
  colliNumberContains: String
  colliNumberHasPrefix: String
  colliNumberHasSuffix: String
  colliNumberEqualFold: String
  colliNumberContainsFold: String
  """
  carrier_id field predicates
  """
  carrierID: String
  carrierIDNEQ: String
  carrierIDIn: [String!]
  carrierIDNotIn: [String!]
  carrierIDGT: String
  carrierIDGTE: String
  carrierIDLT: String
  carrierIDLTE: String
  carrierIDContains: String
  carrierIDHasPrefix: String
  carrierIDHasSuffix: String
  carrierIDEqualFold: String
  carrierIDContainsFold: String
  """
  label_pdf field predicates
  """
  labelPdf: String
  labelPdfNEQ: String
  labelPdfIn: [String!]
  labelPdfNotIn: [String!]
  labelPdfGT: String
  labelPdfGTE: String
  labelPdfLT: String
  labelPdfLTE: String
  labelPdfContains: String
  labelPdfHasPrefix: String
  labelPdfHasSuffix: String
  labelPdfIsNil: Boolean
  labelPdfNotNil: Boolean
  labelPdfEqualFold: String
  labelPdfContainsFold: String
  """
  label_zpl field predicates
  """
  labelZpl: String
  labelZplNEQ: String
  labelZplIn: [String!]
  labelZplNotIn: [String!]
  labelZplGT: String
  labelZplGTE: String
  labelZplLT: String
  labelZplLTE: String
  labelZplContains: String
  labelZplHasPrefix: String
  labelZplHasSuffix: String
  labelZplIsNil: Boolean
  labelZplNotNil: Boolean
  labelZplEqualFold: String
  labelZplContainsFold: String
  """
  status field predicates
  """
  status: ShipmentPalletStatus
  statusNEQ: ShipmentPalletStatus
  statusIn: [ShipmentPalletStatus!]
  statusNotIn: [ShipmentPalletStatus!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  pallet edge predicates
  """
  hasPallet: Boolean
  hasPalletWith: [PalletWhereInput!]
  """
  old_pallet edge predicates
  """
  hasOldPallet: Boolean
  hasOldPalletWith: [PalletWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
type ShipmentParcel implements Node {
  id: ID!
  tenantID: ID!
  itemID: String
  status: ShipmentParcelStatus!
  ccPickupSignatureUrls: [String!]
  expectedAt: Time
  fulfillmentSyncedAt: Time
  """
  For supported carriers will attempt to cancel shipment via the API
  """
  cancelSyncedAt: Time
  tenant: Tenant!
  shipment: Shipment!
  colli: Colli
  """
  After shipment cancelled, ref moved here.
  """
  oldColli: [Colli!]
  workspaceRecentScan: [WorkspaceRecentScan!]
  packaging: Packaging
  printJob: [PrintJob!]
  documentFile: DocumentFile
}
"""
A connection to a list of items.
"""
type ShipmentParcelConnection {
  """
  A list of edges.
  """
  edges: [ShipmentParcelEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentParcelEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentParcel
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
Ordering options for ShipmentParcel connections
"""
input ShipmentParcelOrder {
  """
  The ordering direction.
  """
  direction: OrderDirection! = ASC
  """
  The field by which to order ShipmentParcels.
  """
  field: ShipmentParcelOrderField!
}
"""
Properties by which ShipmentParcel connections can be ordered.
"""
enum ShipmentParcelOrderField {
  EXPECTED_AT
  CANCEL_SYNCED_AT
  SHIPMENT_CREATED_AT
}
"""
ShipmentParcelStatus is enum for the field status
"""
enum ShipmentParcelStatus @goModel(model: "delivrio.io/go/ent/shipmentparcel.Status") {
  pending
  printed
  in_transit
  out_for_delivery
  delivered
  awaiting_cc_pickup
  picked_up
}
"""
ShipmentParcelWhereInput is used for filtering ShipmentParcel objects.
Input was generated by ent.
"""
input ShipmentParcelWhereInput {
  not: ShipmentParcelWhereInput
  and: [ShipmentParcelWhereInput!]
  or: [ShipmentParcelWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  item_id field predicates
  """
  itemID: String
  itemIDNEQ: String
  itemIDIn: [String!]
  itemIDNotIn: [String!]
  itemIDGT: String
  itemIDGTE: String
  itemIDLT: String
  itemIDLTE: String
  itemIDContains: String
  itemIDHasPrefix: String
  itemIDHasSuffix: String
  itemIDIsNil: Boolean
  itemIDNotNil: Boolean
  itemIDEqualFold: String
  itemIDContainsFold: String
  """
  status field predicates
  """
  status: ShipmentParcelStatus
  statusNEQ: ShipmentParcelStatus
  statusIn: [ShipmentParcelStatus!]
  statusNotIn: [ShipmentParcelStatus!]
  """
  expected_at field predicates
  """
  expectedAt: Time
  expectedAtNEQ: Time
  expectedAtIn: [Time!]
  expectedAtNotIn: [Time!]
  expectedAtGT: Time
  expectedAtGTE: Time
  expectedAtLT: Time
  expectedAtLTE: Time
  expectedAtIsNil: Boolean
  expectedAtNotNil: Boolean
  """
  fulfillment_synced_at field predicates
  """
  fulfillmentSyncedAt: Time
  fulfillmentSyncedAtNEQ: Time
  fulfillmentSyncedAtIn: [Time!]
  fulfillmentSyncedAtNotIn: [Time!]
  fulfillmentSyncedAtGT: Time
  fulfillmentSyncedAtGTE: Time
  fulfillmentSyncedAtLT: Time
  fulfillmentSyncedAtLTE: Time
  fulfillmentSyncedAtIsNil: Boolean
  fulfillmentSyncedAtNotNil: Boolean
  """
  cancel_synced_at field predicates
  """
  cancelSyncedAt: Time
  cancelSyncedAtNEQ: Time
  cancelSyncedAtIn: [Time!]
  cancelSyncedAtNotIn: [Time!]
  cancelSyncedAtGT: Time
  cancelSyncedAtGTE: Time
  cancelSyncedAtLT: Time
  cancelSyncedAtLTE: Time
  cancelSyncedAtIsNil: Boolean
  cancelSyncedAtNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
  """
  colli edge predicates
  """
  hasColli: Boolean
  hasColliWith: [ColliWhereInput!]
  """
  old_colli edge predicates
  """
  hasOldColli: Boolean
  hasOldColliWith: [ColliWhereInput!]
  """
  workspace_recent_scan edge predicates
  """
  hasWorkspaceRecentScan: Boolean
  hasWorkspaceRecentScanWith: [WorkspaceRecentScanWhereInput!]
  """
  packaging edge predicates
  """
  hasPackaging: Boolean
  hasPackagingWith: [PackagingWhereInput!]
  """
  print_job edge predicates
  """
  hasPrintJob: Boolean
  hasPrintJobWith: [PrintJobWhereInput!]
  """
  document_file edge predicates
  """
  hasDocumentFile: Boolean
  hasDocumentFileWith: [DocumentFileWhereInput!]
}
type ShipmentPostNord implements Node {
  id: ID!
  tenantID: ID!
  """
  Multiple labels. May contain unrelated shipments.
  """
  bookingID: String!
  """
  Individual label. Can be grouped to same address. Probably should not be on this ent?
  """
  itemID: String!
  """
  Shipment can contain multiple parcels to same address.
  """
  shipmentReferenceNo: String!
  tenant: Tenant!
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentPostNordConnection {
  """
  A list of edges.
  """
  edges: [ShipmentPostNordEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentPostNordEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentPostNord
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentPostNordWhereInput is used for filtering ShipmentPostNord objects.
Input was generated by ent.
"""
input ShipmentPostNordWhereInput {
  not: ShipmentPostNordWhereInput
  and: [ShipmentPostNordWhereInput!]
  or: [ShipmentPostNordWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  booking_id field predicates
  """
  bookingID: String
  bookingIDNEQ: String
  bookingIDIn: [String!]
  bookingIDNotIn: [String!]
  bookingIDGT: String
  bookingIDGTE: String
  bookingIDLT: String
  bookingIDLTE: String
  bookingIDContains: String
  bookingIDHasPrefix: String
  bookingIDHasSuffix: String
  bookingIDEqualFold: String
  bookingIDContainsFold: String
  """
  item_id field predicates
  """
  itemID: String
  itemIDNEQ: String
  itemIDIn: [String!]
  itemIDNotIn: [String!]
  itemIDGT: String
  itemIDGTE: String
  itemIDLT: String
  itemIDLTE: String
  itemIDContains: String
  itemIDHasPrefix: String
  itemIDHasSuffix: String
  itemIDEqualFold: String
  itemIDContainsFold: String
  """
  shipment_reference_no field predicates
  """
  shipmentReferenceNo: String
  shipmentReferenceNoNEQ: String
  shipmentReferenceNoIn: [String!]
  shipmentReferenceNoNotIn: [String!]
  shipmentReferenceNoGT: String
  shipmentReferenceNoGTE: String
  shipmentReferenceNoLT: String
  shipmentReferenceNoLTE: String
  shipmentReferenceNoContains: String
  shipmentReferenceNoHasPrefix: String
  shipmentReferenceNoHasSuffix: String
  shipmentReferenceNoEqualFold: String
  shipmentReferenceNoContainsFold: String
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
"""
ShipmentStatus is enum for the field status
"""
enum ShipmentStatus @goModel(model: "delivrio.io/go/ent/shipment.Status") {
  Pending
  Prebooked
  Booked
  Partially_dispatched
  Dispatched
  Deleted
}
type ShipmentUSPS implements Node {
  id: ID!
  tenantID: ID!
  trackingNumber: String
  postage: Float
  scheduledDeliveryDate: Time
  tenant: Tenant!
  shipment: Shipment!
}
"""
A connection to a list of items.
"""
type ShipmentUSPSConnection {
  """
  A list of edges.
  """
  edges: [ShipmentUSPSEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type ShipmentUSPSEdge {
  """
  The item at the end of the edge.
  """
  node: ShipmentUSPS
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
ShipmentUSPSWhereInput is used for filtering ShipmentUSPS objects.
Input was generated by ent.
"""
input ShipmentUSPSWhereInput {
  not: ShipmentUSPSWhereInput
  and: [ShipmentUSPSWhereInput!]
  or: [ShipmentUSPSWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  tracking_number field predicates
  """
  trackingNumber: String
  trackingNumberNEQ: String
  trackingNumberIn: [String!]
  trackingNumberNotIn: [String!]
  trackingNumberGT: String
  trackingNumberGTE: String
  trackingNumberLT: String
  trackingNumberLTE: String
  trackingNumberContains: String
  trackingNumberHasPrefix: String
  trackingNumberHasSuffix: String
  trackingNumberIsNil: Boolean
  trackingNumberNotNil: Boolean
  trackingNumberEqualFold: String
  trackingNumberContainsFold: String
  """
  postage field predicates
  """
  postage: Float
  postageNEQ: Float
  postageIn: [Float!]
  postageNotIn: [Float!]
  postageGT: Float
  postageGTE: Float
  postageLT: Float
  postageLTE: Float
  postageIsNil: Boolean
  postageNotNil: Boolean
  """
  scheduled_delivery_date field predicates
  """
  scheduledDeliveryDate: Time
  scheduledDeliveryDateNEQ: Time
  scheduledDeliveryDateIn: [Time!]
  scheduledDeliveryDateNotIn: [Time!]
  scheduledDeliveryDateGT: Time
  scheduledDeliveryDateGTE: Time
  scheduledDeliveryDateLT: Time
  scheduledDeliveryDateLTE: Time
  scheduledDeliveryDateIsNil: Boolean
  scheduledDeliveryDateNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment edge predicates
  """
  hasShipment: Boolean
  hasShipmentWith: [ShipmentWhereInput!]
}
"""
ShipmentWhereInput is used for filtering Shipment objects.
Input was generated by ent.
"""
input ShipmentWhereInput {
  not: ShipmentWhereInput
  and: [ShipmentWhereInput!]
  or: [ShipmentWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  shipment_public_id field predicates
  """
  shipmentPublicID: String
  shipmentPublicIDNEQ: String
  shipmentPublicIDIn: [String!]
  shipmentPublicIDNotIn: [String!]
  shipmentPublicIDGT: String
  shipmentPublicIDGTE: String
  shipmentPublicIDLT: String
  shipmentPublicIDLTE: String
  shipmentPublicIDContains: String
  shipmentPublicIDHasPrefix: String
  shipmentPublicIDHasSuffix: String
  shipmentPublicIDEqualFold: String
  shipmentPublicIDContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  status field predicates
  """
  status: ShipmentStatus
  statusNEQ: ShipmentStatus
  statusIn: [ShipmentStatus!]
  statusNotIn: [ShipmentStatus!]
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  carrier edge predicates
  """
  hasCarrier: Boolean
  hasCarrierWith: [CarrierWhereInput!]
  """
  shipment_history edge predicates
  """
  hasShipmentHistory: Boolean
  hasShipmentHistoryWith: [ShipmentHistoryWhereInput!]
  """
  shipment_bring edge predicates
  """
  hasShipmentBring: Boolean
  hasShipmentBringWith: [ShipmentBringWhereInput!]
  """
  shipment_dao edge predicates
  """
  hasShipmentDAO: Boolean
  hasShipmentDAOWith: [ShipmentDAOWhereInput!]
  """
  shipment_df edge predicates
  """
  hasShipmentDF: Boolean
  hasShipmentDFWith: [ShipmentDFWhereInput!]
  """
  shipment_dsv edge predicates
  """
  hasShipmentDSV: Boolean
  hasShipmentDSVWith: [ShipmentDSVWhereInput!]
  """
  shipment_easy_post edge predicates
  """
  hasShipmentEasyPost: Boolean
  hasShipmentEasyPostWith: [ShipmentEasyPostWhereInput!]
  """
  shipment_post_nord edge predicates
  """
  hasShipmentPostNord: Boolean
  hasShipmentPostNordWith: [ShipmentPostNordWhereInput!]
  """
  shipment_gls edge predicates
  """
  hasShipmentGLS: Boolean
  hasShipmentGLSWith: [ShipmentGLSWhereInput!]
  """
  shipment_usps edge predicates
  """
  hasShipmentUSPS: Boolean
  hasShipmentUSPSWith: [ShipmentUSPSWhereInput!]
  """
  consolidation edge predicates
  """
  hasConsolidation: Boolean
  hasConsolidationWith: [ConsolidationWhereInput!]
  """
  old_consolidation edge predicates
  """
  hasOldConsolidation: Boolean
  hasOldConsolidationWith: [ConsolidationWhereInput!]
  """
  shipment_parcel edge predicates
  """
  hasShipmentParcel: Boolean
  hasShipmentParcelWith: [ShipmentParcelWhereInput!]
  """
  shipment_pallet edge predicates
  """
  hasShipmentPallet: Boolean
  hasShipmentPalletWith: [ShipmentPalletWhereInput!]
}
type SignupOptions implements Node {
  id: ID!
  betterDeliveryOptions: Boolean!
  improvePickPack: Boolean!
  shippingLabel: Boolean!
  customDocs: Boolean!
  reducedCosts: Boolean!
  easyReturns: Boolean!
  clickCollect: Boolean!
  numShipments: Int!
  users: User!
}
"""
A connection to a list of items.
"""
type SignupOptionsConnection {
  """
  A list of edges.
  """
  edges: [SignupOptionsEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type SignupOptionsEdge {
  """
  The item at the end of the edge.
  """
  node: SignupOptions
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
SignupOptionsWhereInput is used for filtering SignupOptions objects.
Input was generated by ent.
"""
input SignupOptionsWhereInput {
  not: SignupOptionsWhereInput
  and: [SignupOptionsWhereInput!]
  or: [SignupOptionsWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  better_delivery_options field predicates
  """
  betterDeliveryOptions: Boolean
  betterDeliveryOptionsNEQ: Boolean
  """
  improve_pick_pack field predicates
  """
  improvePickPack: Boolean
  improvePickPackNEQ: Boolean
  """
  shipping_label field predicates
  """
  shippingLabel: Boolean
  shippingLabelNEQ: Boolean
  """
  custom_docs field predicates
  """
  customDocs: Boolean
  customDocsNEQ: Boolean
  """
  reduced_costs field predicates
  """
  reducedCosts: Boolean
  reducedCostsNEQ: Boolean
  """
  easy_returns field predicates
  """
  easyReturns: Boolean
  easyReturnsNEQ: Boolean
  """
  click_collect field predicates
  """
  clickCollect: Boolean
  clickCollectNEQ: Boolean
  """
  num_shipments field predicates
  """
  numShipments: Int
  numShipmentsNEQ: Int
  numShipmentsIn: [Int!]
  numShipmentsNotIn: [Int!]
  numShipmentsGT: Int
  numShipmentsGTE: Int
  numShipmentsLT: Int
  numShipmentsLTE: Int
  """
  users edge predicates
  """
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
}
type SystemEvents implements Node {
  id: ID!
  tenantID: ID!
  eventType: SystemEventsEventType!
  eventTypeID: String
  status: SystemEventsStatus!
  description: String!
  data: String
  updatedAt: Time!
  createdAt: Time
  tenant: Tenant!
}
"""
A connection to a list of items.
"""
type SystemEventsConnection {
  """
  A list of edges.
  """
  edges: [SystemEventsEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type SystemEventsEdge {
  """
  The item at the end of the edge.
  """
  node: SystemEvents
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
SystemEventsEventType is enum for the field event_type
"""
enum SystemEventsEventType @goModel(model: "delivrio.io/go/ent/systemevents.EventType") {
  background_tasks
  shopify_product_sync
  shopify_order_sync
  shopify_order_cancelled_sync
  background_product_mutate
  send_notifications
  sync_cancelled_shipments
}
"""
SystemEventsStatus is enum for the field status
"""
enum SystemEventsStatus @goModel(model: "delivrio.io/go/ent/systemevents.Status") {
  running
  fail
  success
}
"""
SystemEventsWhereInput is used for filtering SystemEvents objects.
Input was generated by ent.
"""
input SystemEventsWhereInput {
  not: SystemEventsWhereInput
  and: [SystemEventsWhereInput!]
  or: [SystemEventsWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  event_type field predicates
  """
  eventType: SystemEventsEventType
  eventTypeNEQ: SystemEventsEventType
  eventTypeIn: [SystemEventsEventType!]
  eventTypeNotIn: [SystemEventsEventType!]
  """
  event_type_id field predicates
  """
  eventTypeID: String
  eventTypeIDNEQ: String
  eventTypeIDIn: [String!]
  eventTypeIDNotIn: [String!]
  eventTypeIDGT: String
  eventTypeIDGTE: String
  eventTypeIDLT: String
  eventTypeIDLTE: String
  eventTypeIDContains: String
  eventTypeIDHasPrefix: String
  eventTypeIDHasSuffix: String
  eventTypeIDIsNil: Boolean
  eventTypeIDNotNil: Boolean
  eventTypeIDEqualFold: String
  eventTypeIDContainsFold: String
  """
  status field predicates
  """
  status: SystemEventsStatus
  statusNEQ: SystemEventsStatus
  statusIn: [SystemEventsStatus!]
  statusNotIn: [SystemEventsStatus!]
  """
  description field predicates
  """
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  """
  data field predicates
  """
  data: String
  dataNEQ: String
  dataIn: [String!]
  dataNotIn: [String!]
  dataGT: String
  dataGTE: String
  dataLT: String
  dataLTE: String
  dataContains: String
  dataHasPrefix: String
  dataHasSuffix: String
  dataIsNil: Boolean
  dataNotNil: Boolean
  dataEqualFold: String
  dataContainsFold: String
  """
  updated_at field predicates
  """
  updatedAt: Time
  updatedAtNEQ: Time
  updatedAtIn: [Time!]
  updatedAtNotIn: [Time!]
  updatedAtGT: Time
  updatedAtGTE: Time
  updatedAtLT: Time
  updatedAtLTE: Time
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
}
type Tenant implements Node {
  id: ID!
  name: String!
  vatNumber: String
  invoiceReference: String
  connectOptionCarriers: [ConnectOptionCarrier!]
  connectOptionPlatforms: [ConnectOptionPlatform!]
  plan: Plan!
  companyAddress: Address
  defaultLanguage: Language!
  billingContact: Contact
  adminContact: Contact
}
"""
A connection to a list of items.
"""
type TenantConnection {
  """
  A list of edges.
  """
  edges: [TenantEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type TenantEdge {
  """
  The item at the end of the edge.
  """
  node: Tenant
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
TenantWhereInput is used for filtering Tenant objects.
Input was generated by ent.
"""
input TenantWhereInput {
  not: TenantWhereInput
  and: [TenantWhereInput!]
  or: [TenantWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  vat_number field predicates
  """
  vatNumber: String
  vatNumberNEQ: String
  vatNumberIn: [String!]
  vatNumberNotIn: [String!]
  vatNumberGT: String
  vatNumberGTE: String
  vatNumberLT: String
  vatNumberLTE: String
  vatNumberContains: String
  vatNumberHasPrefix: String
  vatNumberHasSuffix: String
  vatNumberIsNil: Boolean
  vatNumberNotNil: Boolean
  vatNumberEqualFold: String
  vatNumberContainsFold: String
  """
  invoice_reference field predicates
  """
  invoiceReference: String
  invoiceReferenceNEQ: String
  invoiceReferenceIn: [String!]
  invoiceReferenceNotIn: [String!]
  invoiceReferenceGT: String
  invoiceReferenceGTE: String
  invoiceReferenceLT: String
  invoiceReferenceLTE: String
  invoiceReferenceContains: String
  invoiceReferenceHasPrefix: String
  invoiceReferenceHasSuffix: String
  invoiceReferenceIsNil: Boolean
  invoiceReferenceNotNil: Boolean
  invoiceReferenceEqualFold: String
  invoiceReferenceContainsFold: String
  """
  connect_option_carriers edge predicates
  """
  hasConnectOptionCarriers: Boolean
  hasConnectOptionCarriersWith: [ConnectOptionCarrierWhereInput!]
  """
  connect_option_platforms edge predicates
  """
  hasConnectOptionPlatforms: Boolean
  hasConnectOptionPlatformsWith: [ConnectOptionPlatformWhereInput!]
  """
  plan edge predicates
  """
  hasPlan: Boolean
  hasPlanWith: [PlanWhereInput!]
  """
  company_address edge predicates
  """
  hasCompanyAddress: Boolean
  hasCompanyAddressWith: [AddressWhereInput!]
  """
  default_language edge predicates
  """
  hasDefaultLanguage: Boolean
  hasDefaultLanguageWith: [LanguageWhereInput!]
  """
  billing_contact edge predicates
  """
  hasBillingContact: Boolean
  hasBillingContactWith: [ContactWhereInput!]
  """
  admin_contact edge predicates
  """
  hasAdminContact: Boolean
  hasAdminContactWith: [ContactWhereInput!]
}
"""
The builtin Time type
"""
scalar Time
"""
UpdateAddressGlobalInput is used for update AddressGlobal object.
Input was generated by ent.
"""
input UpdateAddressGlobalInput {
  company: String
  clearCompany: Boolean
  addressOne: String
  addressTwo: String
  clearAddressTwo: Boolean
  city: String
  state: String
  clearState: Boolean
  zip: String
  latitude: Float
  longitude: Float
  parcelShopPostNordDeliveryID: ID
  clearParcelShopPostNordDelivery: Boolean
  parcelShopBringDeliveryID: ID
  clearParcelShopBringDelivery: Boolean
  parcelShopID: ID
  clearParcelShop: Boolean
  countryID: ID
}
"""
UpdateAddressInput is used for update Address object.
Input was generated by ent.
"""
input UpdateAddressInput {
  firstName: String
  lastName: String
  email: String
  phoneNumber: String
  """
  Some applications have both mobile and generic
  """
  phoneNumber2: String
  clearPhoneNumber2: Boolean
  """
  Electronic customs
  """
  vatNumber: String
  clearVatNumber: Boolean
  company: String
  clearCompany: Boolean
  addressOne: String
  addressTwo: String
  city: String
  state: String
  clearState: Boolean
  zip: String
  addRecipientColliIDs: [ID!]
  removeRecipientColliIDs: [ID!]
  clearRecipientColli: Boolean
  recipientConsolidationID: ID
  clearRecipientConsolidation: Boolean
  addCompanyAddresIDs: [ID!]
  removeCompanyAddresIDs: [ID!]
  clearCompanyAddress: Boolean
  addLocationIDs: [ID!]
  removeLocationIDs: [ID!]
  clearLocation: Boolean
  addSenderColliIDs: [ID!]
  removeSenderColliIDs: [ID!]
  clearSenderColli: Boolean
  senderConsolidationID: ID
  clearSenderConsolidation: Boolean
  addReturnSenderColliIDs: [ID!]
  removeReturnSenderColliIDs: [ID!]
  clearReturnSenderColli: Boolean
  addReturnRecipientColliIDs: [ID!]
  removeReturnRecipientColliIDs: [ID!]
  clearReturnRecipientColli: Boolean
  countryID: ID
}
"""
UpdateCarrierAdditionalServiceBringInput is used for update CarrierAdditionalServiceBring object.
Input was generated by ent.
"""
input UpdateCarrierAdditionalServiceBringInput {
  label: String
  apiCodeBooking: String
  carrierServiceBringID: ID
  clearCarrierServiceBring: Boolean
  addDeliveryOptionBringIDs: [ID!]
  removeDeliveryOptionBringIDs: [ID!]
  clearDeliveryOptionBring: Boolean
}
"""
UpdateCarrierAdditionalServiceDAOInput is used for update CarrierAdditionalServiceDAO object.
Input was generated by ent.
"""
input UpdateCarrierAdditionalServiceDAOInput {
  label: String
  apiCode: String
  addCarrierServiceDAOIDs: [ID!]
  removeCarrierServiceDAOIDs: [ID!]
  clearCarrierServiceDAO: Boolean
  addDeliveryOptionDAOIDs: [ID!]
  removeDeliveryOptionDAOIDs: [ID!]
  clearDeliveryOptionDAO: Boolean
}
"""
UpdateCarrierAdditionalServiceDSVInput is used for update CarrierAdditionalServiceDSV object.
Input was generated by ent.
"""
input UpdateCarrierAdditionalServiceDSVInput {
  label: String
  apiCode: String
  addCarrierServiceDSVIDs: [ID!]
  removeCarrierServiceDSVIDs: [ID!]
  clearCarrierServiceDSV: Boolean
  addDeliveryOptionDSVIDs: [ID!]
  removeDeliveryOptionDSVIDs: [ID!]
  clearDeliveryOptionDSV: Boolean
}
"""
UpdateCarrierAdditionalServiceGLSInput is used for update CarrierAdditionalServiceGLS object.
Input was generated by ent.
"""
input UpdateCarrierAdditionalServiceGLSInput {
  label: String
  mandatory: Boolean
  """
  When false, only edge countries will validate on this consignor service
  """
  allCountriesConsignor: Boolean
  """
  When false, only edge countries will validate on this consignee service
  """
  allCountriesConsignee: Boolean
  internalID: String
  carrierServiceGLSID: ID
  clearCarrierServiceGLS: Boolean
  addDeliveryOptionGlIDs: [ID!]
  removeDeliveryOptionGlIDs: [ID!]
  clearDeliveryOptionGLS: Boolean
  addCountriesConsigneeIDs: [ID!]
  removeCountriesConsigneeIDs: [ID!]
  clearCountriesConsignee: Boolean
  addCountriesConsignorIDs: [ID!]
  removeCountriesConsignorIDs: [ID!]
  clearCountriesConsignor: Boolean
}
"""
UpdateCarrierBringInput is used for update CarrierBring object.
Input was generated by ent.
"""
input UpdateCarrierBringInput {
  apiKey: String
  clearAPIKey: Boolean
  customerNumber: String
  clearCustomerNumber: Boolean
  test: Boolean
  carrierID: ID
}
"""
UpdateCarrierDAOInput is used for update CarrierDAO object.
Input was generated by ent.
"""
input UpdateCarrierDAOInput {
  customerID: String
  clearCustomerID: Boolean
  apiKey: String
  clearAPIKey: Boolean
  test: Boolean
  carrierID: ID
}
"""
UpdateCarrierDFInput is used for update CarrierDF object.
Input was generated by ent.
"""
input UpdateCarrierDFInput {
  customerID: String
  agreementNumber: String
  whoPays: CarrierDFWhoPays
  test: Boolean
  carrierID: ID
}
"""
UpdateCarrierDSVInput is used for update CarrierDSV object.
Input was generated by ent.
"""
input UpdateCarrierDSVInput {
  carrierID: ID
}
"""
UpdateCarrierEasyPostInput is used for update CarrierEasyPost object.
Input was generated by ent.
"""
input UpdateCarrierEasyPostInput {
  apiKey: String
  test: Boolean
  """
  When > 1, then we use rate, then buy. =1 one-call buy. Former not implemented in first round.
  """
  carrierAccounts: [String!]
  appendCarrierAccounts: [String!]
  carrierID: ID
}
"""
UpdateCarrierGLSInput is used for update CarrierGLS object.
Input was generated by ent.
"""
input UpdateCarrierGLSInput {
  contactID: String
  clearContactID: Boolean
  glsUsername: String
  clearGLSUsername: Boolean
  glsPassword: String
  clearGLSPassword: Boolean
  customerID: String
  clearCustomerID: Boolean
  glsCountryCode: String
  clearGLSCountryCode: Boolean
  syncShipmentCancellation: Boolean
  clearSyncShipmentCancellation: Boolean
  printErrorOnLabel: Boolean
  clearPrintErrorOnLabel: Boolean
  carrierID: ID
}
"""
UpdateCarrierPostNordInput is used for update CarrierPostNord object.
Input was generated by ent.
"""
input UpdateCarrierPostNordInput {
  """
  Default empty to allow creation from dialog with followup editing
  """
  customerNumber: String
  carrierID: ID
}
"""
UpdateCarrierUSPSInput is used for update CarrierUSPS object.
Input was generated by ent.
"""
input UpdateCarrierUSPSInput {
  isTestAPI: Boolean
  consumerKey: String
  clearConsumerKey: Boolean
  consumerSecret: String
  clearConsumerSecret: Boolean
  mid: String
  clearMid: Boolean
  manifestMid: String
  clearManifestMid: Boolean
  crid: String
  clearCrid: Boolean
  epsAccountNumber: String
  clearEpsAccountNumber: Boolean
  carrierID: ID
}
"""
UpdateColliInput is used for update Colli object.
Input was generated by ent.
"""
input UpdateColliInput {
  """
  Code128 type C compatible for faster reads
  """
  internalBarcode: Int
  clearInternalBarcode: Boolean
  slipPrintStatus: ColliSlipPrintStatus
  deliveryOptionID: ID
  clearDeliveryOption: Boolean
  addDocumentFileIDs: [ID!]
  removeDocumentFileIDs: [ID!]
  clearDocumentFile: Boolean
  shipmentParcelID: ID
  clearShipmentParcel: Boolean
  addCancelledShipmentParcelIDs: [ID!]
  removeCancelledShipmentParcelIDs: [ID!]
  clearCancelledShipmentParcel: Boolean
  orderID: ID
  packagingID: ID
  clearPackaging: Boolean
  addPrintJobIDs: [ID!]
  removePrintJobIDs: [ID!]
  clearPrintJob: Boolean
}
"""
UpdateConnectOptionCarrierInput is used for update ConnectOptionCarrier object.
Input was generated by ent.
"""
input UpdateConnectOptionCarrierInput {
  name: String
  addTenantIDs: [ID!]
  removeTenantIDs: [ID!]
  clearTenant: Boolean
}
"""
UpdateConnectOptionPlatformInput is used for update ConnectOptionPlatform object.
Input was generated by ent.
"""
input UpdateConnectOptionPlatformInput {
  name: String
  addTenantIDs: [ID!]
  removeTenantIDs: [ID!]
  clearTenant: Boolean
}
"""
UpdateConnectionInput is used for update Connection object.
Input was generated by ent.
"""
input UpdateConnectionInput {
  name: String
  syncOrders: Boolean
  syncProducts: Boolean
  fulfillAutomatically: Boolean
  dispatchAutomatically: Boolean
  convertCurrency: Boolean
  autoPrintParcelSlip: Boolean
  connectionShopifyID: ID
  clearConnectionShopify: Boolean
  addOrderIDs: [ID!]
  removeOrderIDs: [ID!]
  clearOrders: Boolean
  senderLocationID: ID
  pickupLocationID: ID
  returnLocationID: ID
  sellerLocationID: ID
  addDeliveryOptionIDs: [ID!]
  removeDeliveryOptionIDs: [ID!]
  clearDeliveryOption: Boolean
  defaultDeliveryOptionID: ID
  clearDefaultDeliveryOption: Boolean
  returnPortalID: ID
  clearReturnPortal: Boolean
  addHypothesisTestIDs: [ID!]
  removeHypothesisTestIDs: [ID!]
  clearHypothesisTest: Boolean
  addNotificationIDs: [ID!]
  removeNotificationIDs: [ID!]
  clearNotifications: Boolean
  currencyID: ID
  packingSlipTemplateID: ID
  clearPackingSlipTemplate: Boolean
  addConnectionLookupIDs: [ID!]
  removeConnectionLookupIDs: [ID!]
  clearConnectionLookup: Boolean
}
"""
UpdateConnectionShopifyInput is used for update ConnectionShopify object.
Input was generated by ent.
"""
input UpdateConnectionShopifyInput {
  """
  Since certain plans don't allow for external rates
  """
  rateIntegration: Boolean
  storeURL: String
  clearStoreURL: Boolean
  apiKey: String
  clearAPIKey: Boolean
  syncFrom: Time
  clearSyncFrom: Boolean
  """
  When set, only orders with these tags will be synchronized. Supports a 
  """
  filterTags: [String!]
  appendFilterTags: [String!]
  clearFilterTags: Boolean
}
"""
UpdateConsolidationInput is used for update Consolidation object.
Input was generated by ent.
"""
input UpdateConsolidationInput {
  publicID: String
  description: String
  clearDescription: Boolean
  status: ConsolidationStatus
  addPalletIDs: [ID!]
  removePalletIDs: [ID!]
  clearPallets: Boolean
  addOrderIDs: [ID!]
  removeOrderIDs: [ID!]
  clearOrders: Boolean
  deliveryOptionID: ID
  clearDeliveryOption: Boolean
  shipmentID: ID
  clearShipment: Boolean
  addCancelledShipmentIDs: [ID!]
  removeCancelledShipmentIDs: [ID!]
  clearCancelledShipments: Boolean
}
"""
UpdateContactInput is used for update Contact object.
Input was generated by ent.
"""
input UpdateContactInput {
  name: String
  surname: String
  email: String
  phoneNumber: String
  addBillingContactIDs: [ID!]
  removeBillingContactIDs: [ID!]
  clearBillingContact: Boolean
  addAdminContactIDs: [ID!]
  removeAdminContactIDs: [ID!]
  clearAdminContact: Boolean
}
"""
UpdateCountryHarmonizedCodeInput is used for update CountryHarmonizedCode object.
Input was generated by ent.
"""
input UpdateCountryHarmonizedCodeInput {
  code: String
  inventoryItemID: ID
  countryID: ID
}
"""
UpdateDeliveryOptionBringInput is used for update DeliveryOptionBring object.
Input was generated by ent.
"""
input UpdateDeliveryOptionBringInput {
  electronicCustoms: Boolean
  deliveryOptionID: ID
}
"""
UpdateDeliveryOptionEasyPostInput is used for update DeliveryOptionEasyPost object.
Input was generated by ent.
"""
input UpdateDeliveryOptionEasyPostInput {
  deliveryOptionID: ID
  addCarrierAddServEasyPostIDs: [ID!]
  removeCarrierAddServEasyPostIDs: [ID!]
  clearCarrierAddServEasyPost: Boolean
}
"""
UpdateDeliveryOptionInput is used for update DeliveryOption object.
Input was generated by ent.
"""
input UpdateDeliveryOptionInput {
  archivedAt: Time
  clearArchivedAt: Boolean
  name: String
  sortOrder: Int
  clickOptionDisplayCount: Int
  clearClickOptionDisplayCount: Boolean
  description: String
  clearDescription: Boolean
  clickCollect: Boolean
  clearClickCollect: Boolean
  overrideSenderAddress: Boolean
  clearOverrideSenderAddress: Boolean
  overrideReturnAddress: Boolean
  clearOverrideReturnAddress: Boolean
  hideDeliveryOption: Boolean
  clearHideDeliveryOption: Boolean
  deliveryEstimateFrom: Int
  clearDeliveryEstimateFrom: Boolean
  deliveryEstimateTo: Int
  clearDeliveryEstimateTo: Boolean
  webshipperIntegration: Boolean
  webshipperID: Int
  clearWebshipperID: Boolean
  shipmondoIntegration: Boolean
  """
  May contain placeholders
  """
  shipmondoDeliveryOption: String
  clearShipmondoDeliveryOption: Boolean
  """
  Since some services are customs optional
  """
  customsEnabled: Boolean
  """
  Who is responsible for signing of custom docs
  """
  customsSigner: String
  clearCustomsSigner: Boolean
  """
  Toggle to hide this rate if a company field is not provided.
  """
  hideIfCompanyEmpty: Boolean
  carrierID: ID
  addDeliveryRuleIDs: [ID!]
  removeDeliveryRuleIDs: [ID!]
  clearDeliveryRule: Boolean
  deliveryOptionDAOID: ID
  clearDeliveryOptionDAO: Boolean
  deliveryOptionDFID: ID
  clearDeliveryOptionDF: Boolean
  deliveryOptionDSVID: ID
  clearDeliveryOptionDSV: Boolean
  deliveryOptionEasyPostID: ID
  clearDeliveryOptionEasyPost: Boolean
  deliveryOptionGLSID: ID
  clearDeliveryOptionGLS: Boolean
  deliveryOptionPostNordID: ID
  clearDeliveryOptionPostNord: Boolean
  deliveryOptionUSPSID: ID
  clearDeliveryOptionUSPS: Boolean
  deliveryOptionBringID: ID
  clearDeliveryOptionBring: Boolean
  addReturnPortalIDs: [ID!]
  removeReturnPortalIDs: [ID!]
  clearReturnPortals: Boolean
  addColliIDs: [ID!]
  removeColliIDs: [ID!]
  clearColli: Boolean
  addReturnColliIDs: [ID!]
  removeReturnColliIDs: [ID!]
  clearReturnColli: Boolean
  carrierServiceID: ID
  connectionID: ID
  connectionDefaultID: ID
  clearConnectionDefault: Boolean
  addHypothesisTestDeliveryOptionGroupOneIDs: [ID!]
  removeHypothesisTestDeliveryOptionGroupOneIDs: [ID!]
  clearHypothesisTestDeliveryOptionGroupOne: Boolean
  addHypothesisTestDeliveryOptionGroupTwoIDs: [ID!]
  removeHypothesisTestDeliveryOptionGroupTwoIDs: [ID!]
  clearHypothesisTestDeliveryOptionGroupTwo: Boolean
  addHypothesisTestDeliveryOptionLookupIDs: [ID!]
  removeHypothesisTestDeliveryOptionLookupIDs: [ID!]
  clearHypothesisTestDeliveryOptionLookup: Boolean
  addClickCollectLocationIDs: [ID!]
  removeClickCollectLocationIDs: [ID!]
  clearClickCollectLocation: Boolean
  emailClickCollectAtStoreID: ID
  clearEmailClickCollectAtStore: Boolean
  addConsolidationIDs: [ID!]
  removeConsolidationIDs: [ID!]
  clearConsolidation: Boolean
  defaultPackagingID: ID
  clearDefaultPackaging: Boolean
}
"""
UpdateDeliveryOptionPostNordInput is used for update DeliveryOptionPostNord object.
Input was generated by ent.
"""
input UpdateDeliveryOptionPostNordInput {
  formatZpl: Boolean
  deliveryOptionID: ID
}
"""
UpdateDeliveryOptionUSPSInput is used for update DeliveryOptionUSPS object.
Input was generated by ent.
"""
input UpdateDeliveryOptionUSPSInput {
  formatZpl: Boolean
  deliveryOptionID: ID
}
"""
UpdateDeliveryRuleConstraintGroupInput is used for update DeliveryRuleConstraintGroup object.
Input was generated by ent.
"""
input UpdateDeliveryRuleConstraintGroupInput {
  constraintLogic: DeliveryRuleConstraintGroupConstraintLogic
  addDeliveryRuleConstraintIDs: [ID!]
  removeDeliveryRuleConstraintIDs: [ID!]
  clearDeliveryRuleConstraints: Boolean
  deliveryRuleID: ID
}
"""
UpdateDeliveryRuleConstraintInput is used for update DeliveryRuleConstraint object.
Input was generated by ent.
"""
input UpdateDeliveryRuleConstraintInput {
  propertyType: DeliveryRuleConstraintPropertyType
  comparison: DeliveryRuleConstraintComparison
  selectedValue: DeliveryRuleConstraintSelectedValueInput
}
"""
UpdateDeliveryRuleInput is used for update DeliveryRule object.
Input was generated by ent.
"""
input UpdateDeliveryRuleInput {
  name: String
  price: Float
  addDeliveryRuleConstraintGroupIDs: [ID!]
  removeDeliveryRuleConstraintGroupIDs: [ID!]
  clearDeliveryRuleConstraintGroup: Boolean
  deliveryOptionID: ID
  clearDeliveryOption: Boolean
  addCountryIDs: [ID!]
  removeCountryIDs: [ID!]
  clearCountry: Boolean
  currencyID: ID
  clearCurrency: Boolean
}
"""
UpdateDocumentInput is used for update Document object.
Input was generated by ent.
"""
input UpdateDocumentInput {
  name: String
  htmlTemplate: String
  clearHTMLTemplate: Boolean
  htmlHeader: String
  clearHTMLHeader: Boolean
  htmlFooter: String
  clearHTMLFooter: Boolean
  """
  Facilitates printing by saving the latest version of this document
  """
  lastBase64Pdf: String
  clearLastBase64Pdf: Boolean
  mergeType: DocumentMergeType
  paperSize: DocumentPaperSize
  startAt: Time
  endAt: Time
  carrierBrandID: ID
  clearCarrierBrand: Boolean
  addConnectionPackingSlipIDs: [ID!]
  removeConnectionPackingSlipIDs: [ID!]
  clearConnectionPackingSlip: Boolean
}
"""
UpdateEmailTemplateInput is used for update EmailTemplate object.
Input was generated by ent.
"""
input UpdateEmailTemplateInput {
  name: String
  subject: String
  htmlTemplate: String
  mergeType: EmailTemplateMergeType
  addReturnPortalConfirmationLabelIDs: [ID!]
  removeReturnPortalConfirmationLabelIDs: [ID!]
  clearReturnPortalConfirmationLabel: Boolean
  addReturnPortalConfirmationQrCodeIDs: [ID!]
  removeReturnPortalConfirmationQrCodeIDs: [ID!]
  clearReturnPortalConfirmationQrCode: Boolean
  addReturnPortalReceivedIDs: [ID!]
  removeReturnPortalReceivedIDs: [ID!]
  clearReturnPortalReceived: Boolean
  addReturnPortalAcceptedIDs: [ID!]
  removeReturnPortalAcceptedIDs: [ID!]
  clearReturnPortalAccepted: Boolean
  addDeliveryOptionClickCollectAtStoreIDs: [ID!]
  removeDeliveryOptionClickCollectAtStoreIDs: [ID!]
  clearDeliveryOptionClickCollectAtStore: Boolean
  addNotificationIDs: [ID!]
  removeNotificationIDs: [ID!]
  clearNotifications: Boolean
}
"""
UpdateHypothesisTestDeliveryOptionInput is used for update HypothesisTestDeliveryOption object.
Input was generated by ent.
"""
input UpdateHypothesisTestDeliveryOptionInput {
  randomizeWithinGroupSort: Boolean
  byIntervalRotation: Boolean
  rotationIntervalHours: Int
  byOrder: Boolean
  hypothesisTestID: ID
  addHypothesisTestDeliveryOptionRequestIDs: [ID!]
  removeHypothesisTestDeliveryOptionRequestIDs: [ID!]
  clearHypothesisTestDeliveryOptionRequest: Boolean
  addDeliveryOptionGroupOneIDs: [ID!]
  removeDeliveryOptionGroupOneIDs: [ID!]
  clearDeliveryOptionGroupOne: Boolean
  addDeliveryOptionGroupTwoIDs: [ID!]
  removeDeliveryOptionGroupTwoIDs: [ID!]
  clearDeliveryOptionGroupTwo: Boolean
}
"""
UpdateHypothesisTestDeliveryOptionLookupInput is used for update HypothesisTestDeliveryOptionLookup object.
Input was generated by ent.
"""
input UpdateHypothesisTestDeliveryOptionLookupInput {
  deliveryOptionID: ID
  hypothesisTestDeliveryOptionRequestID: ID
}
"""
UpdateHypothesisTestDeliveryOptionRequestInput is used for update HypothesisTestDeliveryOptionRequest object.
Input was generated by ent.
"""
input UpdateHypothesisTestDeliveryOptionRequestInput {
  orderHash: String
  shippingAddressHash: String
  isControlGroup: Boolean
  requestCount: Int
  hypothesisTestDeliveryOptionID: ID
  orderID: ID
  clearOrder: Boolean
  addHypothesisTestDeliveryOptionLookupIDs: [ID!]
  removeHypothesisTestDeliveryOptionLookupIDs: [ID!]
  clearHypothesisTestDeliveryOptionLookup: Boolean
}
"""
UpdateHypothesisTestInput is used for update HypothesisTest object.
Input was generated by ent.
"""
input UpdateHypothesisTestInput {
  name: String
  active: Boolean
  hypothesisTestDeliveryOptionID: ID
  clearHypothesisTestDeliveryOption: Boolean
  connectionID: ID
}
"""
UpdateInventoryItemInput is used for update InventoryItem object.
Input was generated by ent.
"""
input UpdateInventoryItemInput {
  """
  Used when country specific code not available
  """
  code: String
  clearCode: Boolean
  """
  Duplicated to match Shopify InventoryItem/ProductVariant
  """
  sku: String
  clearSku: Boolean
  addCountryHarmonizedCodeIDs: [ID!]
  removeCountryHarmonizedCodeIDs: [ID!]
  clearCountryHarmonizedCode: Boolean
  countryOfOriginID: ID
  clearCountryOfOrigin: Boolean
  productVariantID: ID
}
"""
UpdateLocationInput is used for update Location object.
Input was generated by ent.
"""
input UpdateLocationInput {
  """
  Location name, not used in the address
  """
  name: String
  addressID: ID
  addLocationTagIDs: [ID!]
  removeLocationTagIDs: [ID!]
  addSenderConnectionIDs: [ID!]
  removeSenderConnectionIDs: [ID!]
  clearSenderConnection: Boolean
  addPickupConnectionIDs: [ID!]
  removePickupConnectionIDs: [ID!]
  clearPickupConnection: Boolean
  addReturnConnectionIDs: [ID!]
  removeReturnConnectionIDs: [ID!]
  clearReturnConnection: Boolean
  addSellerConnectionIDs: [ID!]
  removeSellerConnectionIDs: [ID!]
  clearSellerConnection: Boolean
  addReturnPortalIDs: [ID!]
  removeReturnPortalIDs: [ID!]
  clearReturnPortal: Boolean
  addDeliveryOptionIDs: [ID!]
  removeDeliveryOptionIDs: [ID!]
  clearDeliveryOption: Boolean
  addColliIDs: [ID!]
  removeColliIDs: [ID!]
  clearColli: Boolean
}
"""
UpdateNotificationInput is used for update Notification object.
Input was generated by ent.
"""
input UpdateNotificationInput {
  name: String
  active: Boolean
  connectionID: ID
  emailTemplateID: ID
}
"""
UpdateOrderInput is used for update Order object.
Input was generated by ent.
"""
input UpdateOrderInput {
  orderPublicID: String
  commentInternal: String
  clearCommentInternal: Boolean
  commentExternal: String
  clearCommentExternal: Boolean
  connectionID: ID
  addReturnColliIDs: [ID!]
  removeReturnColliIDs: [ID!]
  clearReturnColli: Boolean
  hypothesisTestDeliveryOptionRequestID: ID
  clearHypothesisTestDeliveryOptionRequest: Boolean
  palletID: ID
  clearPallet: Boolean
  consolidationID: ID
  clearConsolidation: Boolean
}
"""
UpdateOrderSenderInput is used for update OrderSender object.
Input was generated by ent.
"""
input UpdateOrderSenderInput {
  firstName: String
  lastName: String
  email: String
  phoneNumber: String
  vatNumber: String
}
"""
UpdatePackagingDFInput is used for update PackagingDF object.
Input was generated by ent.
"""
input UpdatePackagingDFInput {
  apiType: PackagingDFAPIType
  maxWeight: Float
  clearMaxWeight: Boolean
  minWeight: Float
  clearMinWeight: Boolean
  """
  Some carriers this is not boolean, so this is not a general toggle
  """
  stackable: Boolean
}
"""
UpdatePackagingInput is used for update Packaging object.
Input was generated by ent.
"""
input UpdatePackagingInput {
  archivedAt: Time
  clearArchivedAt: Boolean
  name: String
  heightCm: Int
  widthCm: Int
  lengthCm: Int
  addShipmentParcelIDs: [ID!]
  removeShipmentParcelIDs: [ID!]
  clearShipmentParcel: Boolean
  addPalletIDs: [ID!]
  removePalletIDs: [ID!]
  clearPallet: Boolean
  addColliIDs: [ID!]
  removeColliIDs: [ID!]
  clearColli: Boolean
  addReturnColliIDs: [ID!]
  removeReturnColliIDs: [ID!]
  clearReturnColli: Boolean
  packagingDFID: ID
  clearPackagingDF: Boolean
  packagingUSPSID: ID
  clearPackagingUSPS: Boolean
  carrierBrandID: ID
  clearCarrierBrand: Boolean
  addDeliveryOptionIDs: [ID!]
  removeDeliveryOptionIDs: [ID!]
  clearDeliveryOption: Boolean
}
"""
UpdatePackagingUSPSInput is used for update PackagingUSPS object.
Input was generated by ent.
"""
input UpdatePackagingUSPSInput {
  packagingUSPSRateIndicatorID: ID
  packagingUSPSProcessingCategoryID: ID
}
"""
UpdatePackagingUSPSProcessingCategoryInput is used for update PackagingUSPSProcessingCategory object.
Input was generated by ent.
"""
input UpdatePackagingUSPSProcessingCategoryInput {
  name: String
  processingCategory: PackagingUSPSProcessingCategoryProcessingCategory
}
"""
UpdatePalletInput is used for update Pallet object.
Input was generated by ent.
"""
input UpdatePalletInput {
  publicID: String
  description: String
  addOrderIDs: [ID!]
  removeOrderIDs: [ID!]
  clearOrders: Boolean
  packagingID: ID
  clearPackaging: Boolean
  consolidationID: ID
  shipmentPalletID: ID
  clearShipmentPallet: Boolean
  addCancelledShipmentPalletIDs: [ID!]
  removeCancelledShipmentPalletIDs: [ID!]
  clearCancelledShipmentPallet: Boolean
}
"""
UpdateParcelShopBringInput is used for update ParcelShopBring object.
Input was generated by ent.
"""
input UpdateParcelShopBringInput {
  """
  https://developer.bring.com/api/pickup-point/#pickup-point-types
  """
  pointType: ParcelShopBringPointType
  bringID: String
  parcelShopID: ID
  addressDeliveryID: ID
}
"""
UpdateParcelShopDAOInput is used for update ParcelShopDAO object.
Input was generated by ent.
"""
input UpdateParcelShopDAOInput {
  shopID: String
  parcelShopID: ID
}
"""
UpdateParcelShopGLSInput is used for update ParcelShopGLS object.
Input was generated by ent.
"""
input UpdateParcelShopGLSInput {
  glsParcelShopID: String
  """
  Only available in Group API
  """
  partnerID: String
  clearPartnerID: Boolean
  """
  Only available in Group API
  """
  type: String
  clearType: Boolean
  parcelShopID: ID
}
"""
UpdateParcelShopInput is used for update ParcelShop object.
Input was generated by ent.
"""
input UpdateParcelShopInput {
  name: String
  parcelShopDAOID: ID
  clearParcelShopDAO: Boolean
  parcelShopPostNordID: ID
  clearParcelShopPostNord: Boolean
  parcelShopGLSID: ID
  clearParcelShopGLS: Boolean
  parcelShopBringID: ID
  clearParcelShopBring: Boolean
  carrierBrandID: ID
  addressID: ID
  addColliIDs: [ID!]
  removeColliIDs: [ID!]
  clearColli: Boolean
  addBusinessHoursPeriodIDs: [ID!]
  removeBusinessHoursPeriodIDs: [ID!]
  clearBusinessHoursPeriod: Boolean
}
"""
UpdateParcelShopPostNordInput is used for update ParcelShopPostNord object.
Input was generated by ent.
"""
input UpdateParcelShopPostNordInput {
  servicePointID: String
  pudoid: String
  """
  No idea what the options are aside from the default: 156. Maybe box, shop, etc??
  """
  typeID: String
  parcelShopID: ID
  addressDeliveryID: ID
}
"""
UpdatePrinterInput is used for update Printer object.
Input was generated by ent.
"""
input UpdatePrinterInput {
  name: String
  labelZpl: Boolean
  labelPdf: Boolean
  labelPng: Boolean
  document: Boolean
  rotate180: Boolean
  useShell: Boolean
  printSize: PrinterPrintSize
  workstationID: ID
  addPrintJobIDs: [ID!]
  removePrintJobIDs: [ID!]
  clearPrintJobs: Boolean
}
"""
UpdateProductInput is used for update Product object.
Input was generated by ent.
"""
input UpdateProductInput {
  title: String
  bodyHTML: String
  clearBodyHTML: Boolean
  status: ProductStatus
  addProductTagIDs: [ID!]
  removeProductTagIDs: [ID!]
  clearProductTags: Boolean
  addProductVariantIDs: [ID!]
  removeProductVariantIDs: [ID!]
  clearProductVariant: Boolean
  addProductImageIDs: [ID!]
  removeProductImageIDs: [ID!]
  clearProductImage: Boolean
}
"""
UpdateProductTagInput is used for update ProductTag object.
Input was generated by ent.
"""
input UpdateProductTagInput {
  name: String
  addProductIDs: [ID!]
  removeProductIDs: [ID!]
  clearProducts: Boolean
}
"""
UpdateProductVariantInput is used for update ProductVariant object.
Input was generated by ent.
"""
input UpdateProductVariantInput {
  archived: Boolean
  description: String
  clearDescription: Boolean
  eanNumber: String
  clearEanNumber: Boolean
  weightG: Int
  clearWeightG: Boolean
  dimensionLength: Int
  clearDimensionLength: Boolean
  dimensionWidth: Int
  clearDimensionWidth: Boolean
  dimensionHeight: Int
  clearDimensionHeight: Boolean
  addOrderLineIDs: [ID!]
  removeOrderLineIDs: [ID!]
  clearOrderLines: Boolean
  addProductImageIDs: [ID!]
  removeProductImageIDs: [ID!]
  clearProductImage: Boolean
  inventoryItemID: ID
  clearInventoryItem: Boolean
}
"""
UpdateReturnColliInput is used for update ReturnColli object.
Input was generated by ent.
"""
input UpdateReturnColliInput {
  expectedAt: Time
  clearExpectedAt: Boolean
  labelPdf: String
  clearLabelPdf: Boolean
  labelPng: String
  clearLabelPng: Boolean
  qrCodePng: String
  clearQrCodePng: Boolean
  comment: String
  clearComment: Boolean
  status: ReturnColliStatus
  """
  Timestamp of email successfully sent after status changed to received
  """
  emailReceived: Time
  clearEmailReceived: Boolean
  """
  Timestamp of email successfully sent after status changed to accepted
  """
  emailAccepted: Time
  clearEmailAccepted: Boolean
  """
  Timestamp of email successfully sent after status changed to pending
  """
  emailConfirmationLabel: Time
  clearEmailConfirmationLabel: Boolean
  """
  Timestamp of email successfully sent after status changed to pending
  """
  emailConfirmationQrCode: Time
  clearEmailConfirmationQrCode: Boolean
  orderID: ID
  deliveryOptionID: ID
  clearDeliveryOption: Boolean
  returnPortalID: ID
  packagingID: ID
  clearPackaging: Boolean
  addReturnOrderLineIDs: [ID!]
  removeReturnOrderLineIDs: [ID!]
  clearReturnOrderLine: Boolean
}
"""
UpdateReturnOrderLineInput is used for update ReturnOrderLine object.
Input was generated by ent.
"""
input UpdateReturnOrderLineInput {
  units: Int
  returnColliID: ID
  orderLineID: ID
  returnPortalClaimID: ID
}
"""
UpdateReturnPortalClaimInput is used for update ReturnPortalClaim object.
Input was generated by ent.
"""
input UpdateReturnPortalClaimInput {
  name: String
  description: String
  restockable: Boolean
  returnPortalID: ID
  returnLocationID: ID
  clearReturnLocation: Boolean
  addReturnOrderLineIDs: [ID!]
  removeReturnOrderLineIDs: [ID!]
  clearReturnOrderLine: Boolean
}
"""
UpdateReturnPortalInput is used for update ReturnPortal object.
Input was generated by ent.
"""
input UpdateReturnPortalInput {
  name: String
  returnOpenHours: Int
  automaticallyAccept: Boolean
  addReturnPortalClaimIDs: [ID!]
  removeReturnPortalClaimIDs: [ID!]
  clearReturnPortalClaim: Boolean
  addReturnLocationIDs: [ID!]
  removeReturnLocationIDs: [ID!]
  clearReturnLocation: Boolean
  addDeliveryOptionIDs: [ID!]
  removeDeliveryOptionIDs: [ID!]
  clearDeliveryOptions: Boolean
  connectionID: ID
  clearConnection: Boolean
  emailConfirmationLabelID: ID
  clearEmailConfirmationLabel: Boolean
  emailConfirmationQrCodeID: ID
  clearEmailConfirmationQrCode: Boolean
  emailReceivedID: ID
  clearEmailReceived: Boolean
  emailAcceptedID: ID
  clearEmailAccepted: Boolean
  addReturnColliIDs: [ID!]
  removeReturnColliIDs: [ID!]
  clearReturnColli: Boolean
}
"""
UpdateSeatGroupAccessRightInput is used for update SeatGroupAccessRight object.
Input was generated by ent.
"""
input UpdateSeatGroupAccessRightInput {
  level: SeatGroupAccessRightLevel
  accessRightID: ID
  seatGroupID: ID
}
"""
UpdateSeatGroupInput is used for update SeatGroup object.
Input was generated by ent.
"""
input UpdateSeatGroupInput {
  name: String
  addUserIDs: [ID!]
  removeUserIDs: [ID!]
  clearUser: Boolean
  addAssignedAccessRightIDs: [ID!]
  removeAssignedAccessRightIDs: [ID!]
  clearAssignedAccessRight: Boolean
}
"""
UpdateShipmentBringInput is used for update ShipmentBring object.
Input was generated by ent.
"""
input UpdateShipmentBringInput {
  consignmentNumber: String
  shipmentID: ID
}
"""
UpdateShipmentDAOInput is used for update ShipmentDAO object.
Input was generated by ent.
"""
input UpdateShipmentDAOInput {
  barcodeID: String
  shipmentID: ID
}
"""
UpdateShipmentDSVInput is used for update ShipmentDSV object.
Input was generated by ent.
"""
input UpdateShipmentDSVInput {
  barcodeID: String
  shipmentID: ID
}
"""
UpdateShipmentInput is used for update Shipment object.
Input was generated by ent.
"""
input UpdateShipmentInput {
  shipmentPublicID: String
  status: ShipmentStatus
  addShipmentHistoryIDs: [ID!]
  removeShipmentHistoryIDs: [ID!]
  clearShipmentHistory: Boolean
  shipmentBringID: ID
  clearShipmentBring: Boolean
  shipmentDAOID: ID
  clearShipmentDAO: Boolean
  shipmentDFID: ID
  clearShipmentDF: Boolean
  shipmentDSVID: ID
  clearShipmentDSV: Boolean
  shipmentEasyPostID: ID
  clearShipmentEasyPost: Boolean
  shipmentPostNordID: ID
  clearShipmentPostNord: Boolean
  shipmentGLSID: ID
  clearShipmentGLS: Boolean
  shipmentUSPSID: ID
  clearShipmentUSPS: Boolean
  consolidationID: ID
  clearConsolidation: Boolean
  addOldConsolidationIDs: [ID!]
  removeOldConsolidationIDs: [ID!]
  clearOldConsolidation: Boolean
  addShipmentParcelIDs: [ID!]
  removeShipmentParcelIDs: [ID!]
  clearShipmentParcel: Boolean
  addShipmentPalletIDs: [ID!]
  removeShipmentPalletIDs: [ID!]
  clearShipmentPallet: Boolean
}
"""
UpdateShipmentPalletInput is used for update ShipmentPallet object.
Input was generated by ent.
"""
input UpdateShipmentPalletInput {
  barcode: String
  colliNumber: String
  carrierID: String
  labelPdf: String
  clearLabelPdf: Boolean
  labelZpl: String
  clearLabelZpl: Boolean
  status: ShipmentPalletStatus
  palletID: ID
  clearPallet: Boolean
  addOldPalletIDs: [ID!]
  removeOldPalletIDs: [ID!]
  clearOldPallet: Boolean
}
"""
UpdateShipmentParcelInput is used for update ShipmentParcel object.
Input was generated by ent.
"""
input UpdateShipmentParcelInput {
  itemID: String
  clearItemID: Boolean
  status: ShipmentParcelStatus
  ccPickupSignatureUrls: [String!]
  appendCcPickupSignatureUrls: [String!]
  clearCcPickupSignatureUrls: Boolean
  colliID: ID
  clearColli: Boolean
  addOldColliIDs: [ID!]
  removeOldColliIDs: [ID!]
  clearOldColli: Boolean
  addWorkspaceRecentScanIDs: [ID!]
  removeWorkspaceRecentScanIDs: [ID!]
  clearWorkspaceRecentScan: Boolean
  packagingID: ID
  clearPackaging: Boolean
  addPrintJobIDs: [ID!]
  removePrintJobIDs: [ID!]
  clearPrintJob: Boolean
  documentFileID: ID
  clearDocumentFile: Boolean
}
"""
UpdateShipmentPostNordInput is used for update ShipmentPostNord object.
Input was generated by ent.
"""
input UpdateShipmentPostNordInput {
  """
  Multiple labels. May contain unrelated shipments.
  """
  bookingID: String
  """
  Individual label. Can be grouped to same address. Probably should not be on this ent?
  """
  itemID: String
  """
  Shipment can contain multiple parcels to same address.
  """
  shipmentReferenceNo: String
  shipmentID: ID
}
"""
UpdateShipmentUSPSInput is used for update ShipmentUSPS object.
Input was generated by ent.
"""
input UpdateShipmentUSPSInput {
  trackingNumber: String
  clearTrackingNumber: Boolean
  postage: Float
  clearPostage: Boolean
  scheduledDeliveryDate: Time
  clearScheduledDeliveryDate: Boolean
  shipmentID: ID
}
"""
UpdateSignupOptionsInput is used for update SignupOptions object.
Input was generated by ent.
"""
input UpdateSignupOptionsInput {
  betterDeliveryOptions: Boolean
  improvePickPack: Boolean
  shippingLabel: Boolean
  customDocs: Boolean
  reducedCosts: Boolean
  easyReturns: Boolean
  clickCollect: Boolean
  numShipments: Int
  usersID: ID
}
"""
UpdateTenantInput is used for update Tenant object.
Input was generated by ent.
"""
input UpdateTenantInput {
  name: String
  vatNumber: String
  clearVatNumber: Boolean
  invoiceReference: String
  clearInvoiceReference: Boolean
  addConnectOptionCarrierIDs: [ID!]
  removeConnectOptionCarrierIDs: [ID!]
  clearConnectOptionCarriers: Boolean
  addConnectOptionPlatformIDs: [ID!]
  removeConnectOptionPlatformIDs: [ID!]
  clearConnectOptionPlatforms: Boolean
  planID: ID
  companyAddressID: ID
  clearCompanyAddress: Boolean
  defaultLanguageID: ID
  billingContactID: ID
  clearBillingContact: Boolean
  adminContactID: ID
  clearAdminContact: Boolean
}
"""
UpdateUserInput is used for update User object.
Input was generated by ent.
"""
input UpdateUserInput {
  name: String
  clearName: Boolean
  surname: String
  clearSurname: Boolean
  phoneNumber: String
  clearPhoneNumber: Boolean
  email: String
  """
  Field is just for front end convenience. Password gets stored as hash.
  """
  password: String
  clearPassword: Boolean
  marketingConsent: Boolean
  clearMarketingConsent: Boolean
  archivedAt: Time
  clearArchivedAt: Boolean
  """
  When fulfilling, the next carrier pickup date for the package can be selected
  """
  pickupDay: UserPickupDay
  """
  So we can ask the user to confirm their pickup day after X hours
  """
  pickupDayLastChanged: Time
  clearPickupDayLastChanged: Boolean
  addOtkRequestIDs: [ID!]
  removeOtkRequestIDs: [ID!]
  clearOtkRequests: Boolean
  signupOptionsID: ID
  clearSignupOptions: Boolean
  languageID: ID
  clearLanguage: Boolean
  addChangeHistoryIDs: [ID!]
  removeChangeHistoryIDs: [ID!]
  clearChangeHistory: Boolean
  addPlanHistoryUserIDs: [ID!]
  removePlanHistoryUserIDs: [ID!]
  clearPlanHistoryUser: Boolean
  addAPITokenIDs: [ID!]
  removeAPITokenIDs: [ID!]
  clearAPIToken: Boolean
  selectedWorkstationID: ID
  clearSelectedWorkstation: Boolean
  seatGroupID: ID
  clearSeatGroup: Boolean
  addWorkspaceRecentScanIDs: [ID!]
  removeWorkspaceRecentScanIDs: [ID!]
  clearWorkspaceRecentScan: Boolean
}
"""
UpdateUserSeatInput is used for update UserSeat object.
Input was generated by ent.
"""
input UpdateUserSeatInput {
  name: String
  clearName: Boolean
  surname: String
  clearSurname: Boolean
  email: String
}
"""
UpdateWorkstationInput is used for update Workstation object.
Input was generated by ent.
"""
input UpdateWorkstationInput {
  archivedAt: Time
  clearArchivedAt: Boolean
  name: String
  deviceType: WorkstationDeviceType
  status: WorkstationStatus
  autoPrintReceiver: Boolean
  addPrinterIDs: [ID!]
  removePrinterIDs: [ID!]
  clearPrinter: Boolean
  selectedUserID: ID
  clearSelectedUser: Boolean
}
type User implements Node {
  id: ID!
  tenantID: ID!
  name: String
  surname: String
  phoneNumber: String
  email: String!
  isAccountOwner: Boolean!
  isGlobalAdmin: Boolean!
  marketingConsent: Boolean
  createdAt: Time
  archivedAt: Time
  """
  When fulfilling, the next carrier pickup date for the package can be selected
  """
  pickupDay: UserPickupDay!
  """
  So we can ask the user to confirm their pickup day after X hours
  """
  pickupDayLastChanged: Time
  tenant: Tenant!
  otkRequests: [OTKRequests!]
  signupOptions: SignupOptions
  language: Language
  changeHistory: [ChangeHistory!]
  planHistoryUser: [PlanHistory!]
  apiToken: [APIToken!]
  selectedWorkstation: Workstation
  seatGroup: SeatGroup
  workspaceRecentScan: [WorkspaceRecentScan!]
}
"""
A connection to a list of items.
"""
type UserConnection {
  """
  A list of edges.
  """
  edges: [UserEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
UserPickupDay is enum for the field pickup_day
"""
enum UserPickupDay @goModel(model: "delivrio.io/go/ent/user.PickupDay") {
  Today
  Tomorrow
  In_2_Days
  In_3_Days
  In_4_Days
  In_5_Days
}
type UserSeat implements Node {
  id: ID!
  tenantID: ID!
  name: String
  surname: String
  email: String!
  createdAt: Time!
  tenant: Tenant!
}
"""
A connection to a list of items.
"""
type UserSeatConnection {
  """
  A list of edges.
  """
  edges: [UserSeatEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
An edge in a connection.
"""
type UserSeatEdge {
  """
  The item at the end of the edge.
  """
  node: UserSeat
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
UserSeatWhereInput is used for filtering UserSeat objects.
Input was generated by ent.
"""
input UserSeatWhereInput {
  not: UserSeatWhereInput
  and: [UserSeatWhereInput!]
  or: [UserSeatWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  surname field predicates
  """
  surname: String
  surnameNEQ: String
  surnameIn: [String!]
  surnameNotIn: [String!]
  surnameGT: String
  surnameGTE: String
  surnameLT: String
  surnameLTE: String
  surnameContains: String
  surnameHasPrefix: String
  surnameHasSuffix: String
  surnameIsNil: Boolean
  surnameNotNil: Boolean
  surnameEqualFold: String
  surnameContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
}
"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  """
  surname field predicates
  """
  surname: String
  surnameNEQ: String
  surnameIn: [String!]
  surnameNotIn: [String!]
  surnameGT: String
  surnameGTE: String
  surnameLT: String
  surnameLTE: String
  surnameContains: String
  surnameHasPrefix: String
  surnameHasSuffix: String
  surnameIsNil: Boolean
  surnameNotNil: Boolean
  surnameEqualFold: String
  surnameContainsFold: String
  """
  phone_number field predicates
  """
  phoneNumber: String
  phoneNumberNEQ: String
  phoneNumberIn: [String!]
  phoneNumberNotIn: [String!]
  phoneNumberGT: String
  phoneNumberGTE: String
  phoneNumberLT: String
  phoneNumberLTE: String
  phoneNumberContains: String
  phoneNumberHasPrefix: String
  phoneNumberHasSuffix: String
  phoneNumberIsNil: Boolean
  phoneNumberNotNil: Boolean
  phoneNumberEqualFold: String
  phoneNumberContainsFold: String
  """
  email field predicates
  """
  email: String
  emailNEQ: String
  emailIn: [String!]
  emailNotIn: [String!]
  emailGT: String
  emailGTE: String
  emailLT: String
  emailLTE: String
  emailContains: String
  emailHasPrefix: String
  emailHasSuffix: String
  emailEqualFold: String
  emailContainsFold: String
  """
  is_account_owner field predicates
  """
  isAccountOwner: Boolean
  isAccountOwnerNEQ: Boolean
  """
  is_global_admin field predicates
  """
  isGlobalAdmin: Boolean
  isGlobalAdminNEQ: Boolean
  """
  marketing_consent field predicates
  """
  marketingConsent: Boolean
  marketingConsentNEQ: Boolean
  marketingConsentIsNil: Boolean
  marketingConsentNotNil: Boolean
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  createdAtIsNil: Boolean
  createdAtNotNil: Boolean
  """
  archived_at field predicates
  """
  archivedAt: Time
  archivedAtNEQ: Time
  archivedAtIn: [Time!]
  archivedAtNotIn: [Time!]
  archivedAtGT: Time
  archivedAtGTE: Time
  archivedAtLT: Time
  archivedAtLTE: Time
  archivedAtIsNil: Boolean
  archivedAtNotNil: Boolean
  """
  pickup_day field predicates
  """
  pickupDay: UserPickupDay
  pickupDayNEQ: UserPickupDay
  pickupDayIn: [UserPickupDay!]
  pickupDayNotIn: [UserPickupDay!]
  """
  pickup_day_last_changed field predicates
  """
  pickupDayLastChanged: Time
  pickupDayLastChangedNEQ: Time
  pickupDayLastChangedIn: [Time!]
  pickupDayLastChangedNotIn: [Time!]
  pickupDayLastChangedGT: Time
  pickupDayLastChangedGTE: Time
  pickupDayLastChangedLT: Time
  pickupDayLastChangedLTE: Time
  pickupDayLastChangedIsNil: Boolean
  pickupDayLastChangedNotNil: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  otk_requests edge predicates
  """
  hasOtkRequests: Boolean
  hasOtkRequestsWith: [OTKRequestsWhereInput!]
  """
  signup_options edge predicates
  """
  hasSignupOptions: Boolean
  hasSignupOptionsWith: [SignupOptionsWhereInput!]
  """
  language edge predicates
  """
  hasLanguage: Boolean
  hasLanguageWith: [LanguageWhereInput!]
  """
  change_history edge predicates
  """
  hasChangeHistory: Boolean
  hasChangeHistoryWith: [ChangeHistoryWhereInput!]
  """
  plan_history_user edge predicates
  """
  hasPlanHistoryUser: Boolean
  hasPlanHistoryUserWith: [PlanHistoryWhereInput!]
  """
  api_token edge predicates
  """
  hasAPIToken: Boolean
  hasAPITokenWith: [APITokenWhereInput!]
  """
  selected_workstation edge predicates
  """
  hasSelectedWorkstation: Boolean
  hasSelectedWorkstationWith: [WorkstationWhereInput!]
  """
  seat_group edge predicates
  """
  hasSeatGroup: Boolean
  hasSeatGroupWith: [SeatGroupWhereInput!]
  """
  workspace_recent_scan edge predicates
  """
  hasWorkspaceRecentScan: Boolean
  hasWorkspaceRecentScanWith: [WorkspaceRecentScanWhereInput!]
}
type WorkspaceRecentScan implements Node {
  id: ID!
  tenantID: ID!
  createdAt: Time!
  tenant: Tenant!
  shipmentParcel: ShipmentParcel
  user: User!
}
"""
WorkspaceRecentScanWhereInput is used for filtering WorkspaceRecentScan objects.
Input was generated by ent.
"""
input WorkspaceRecentScanWhereInput {
  not: WorkspaceRecentScanWhereInput
  and: [WorkspaceRecentScanWhereInput!]
  or: [WorkspaceRecentScanWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  shipment_parcel edge predicates
  """
  hasShipmentParcel: Boolean
  hasShipmentParcelWith: [ShipmentParcelWhereInput!]
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
}
type Workstation implements Node {
  id: ID!
  tenantID: ID!
  archivedAt: Time
  name: String!
  deviceType: WorkstationDeviceType!
  workstationID: String!
  createdAt: Time!
  lastPing: Time
  status: WorkstationStatus!
  autoPrintReceiver: Boolean!
  tenant: Tenant!
  printer: [Printer!]
  """
  the user who created the workstation
  """
  user: User
  """
  the user currently sending print jobs to this workstation
  """
  selectedUser: User
}
"""
A connection to a list of items.
"""
type WorkstationConnection {
  """
  A list of edges.
  """
  edges: [WorkstationEdge]
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  Identifies the total count of items in the connection.
  """
  totalCount: Int!
}
"""
WorkstationDeviceType is enum for the field device_type
"""
enum WorkstationDeviceType @goModel(model: "delivrio.io/go/ent/workstation.DeviceType") {
  label_station
  app
}
"""
An edge in a connection.
"""
type WorkstationEdge {
  """
  The item at the end of the edge.
  """
  node: Workstation
  """
  A cursor for use in pagination.
  """
  cursor: Cursor!
}
"""
WorkstationStatus is enum for the field status
"""
enum WorkstationStatus @goModel(model: "delivrio.io/go/ent/workstation.Status") {
  pending
  active
  offline
  disabled
}
"""
WorkstationWhereInput is used for filtering Workstation objects.
Input was generated by ent.
"""
input WorkstationWhereInput {
  not: WorkstationWhereInput
  and: [WorkstationWhereInput!]
  or: [WorkstationWhereInput!]
  """
  id field predicates
  """
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  """
  tenant_id field predicates
  """
  tenantID: ID
  tenantIDNEQ: ID
  tenantIDIn: [ID!]
  tenantIDNotIn: [ID!]
  tenantIDGT: ID
  tenantIDGTE: ID
  tenantIDLT: ID
  tenantIDLTE: ID
  tenantIDContains: ID
  tenantIDHasPrefix: ID
  tenantIDHasSuffix: ID
  tenantIDEqualFold: ID
  tenantIDContainsFold: ID
  """
  archived_at field predicates
  """
  archivedAt: Time
  archivedAtNEQ: Time
  archivedAtIn: [Time!]
  archivedAtNotIn: [Time!]
  archivedAtGT: Time
  archivedAtGTE: Time
  archivedAtLT: Time
  archivedAtLTE: Time
  archivedAtIsNil: Boolean
  archivedAtNotNil: Boolean
  """
  name field predicates
  """
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  """
  device_type field predicates
  """
  deviceType: WorkstationDeviceType
  deviceTypeNEQ: WorkstationDeviceType
  deviceTypeIn: [WorkstationDeviceType!]
  deviceTypeNotIn: [WorkstationDeviceType!]
  """
  workstation_id field predicates
  """
  workstationID: String
  workstationIDNEQ: String
  workstationIDIn: [String!]
  workstationIDNotIn: [String!]
  workstationIDGT: String
  workstationIDGTE: String
  workstationIDLT: String
  workstationIDLTE: String
  workstationIDContains: String
  workstationIDHasPrefix: String
  workstationIDHasSuffix: String
  workstationIDEqualFold: String
  workstationIDContainsFold: String
  """
  created_at field predicates
  """
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  """
  last_ping field predicates
  """
  lastPing: Time
  lastPingNEQ: Time
  lastPingIn: [Time!]
  lastPingNotIn: [Time!]
  lastPingGT: Time
  lastPingGTE: Time
  lastPingLT: Time
  lastPingLTE: Time
  lastPingIsNil: Boolean
  lastPingNotNil: Boolean
  """
  status field predicates
  """
  status: WorkstationStatus
  statusNEQ: WorkstationStatus
  statusIn: [WorkstationStatus!]
  statusNotIn: [WorkstationStatus!]
  """
  auto_print_receiver field predicates
  """
  autoPrintReceiver: Boolean
  autoPrintReceiverNEQ: Boolean
  """
  tenant edge predicates
  """
  hasTenant: Boolean
  hasTenantWith: [TenantWhereInput!]
  """
  printer edge predicates
  """
  hasPrinter: Boolean
  hasPrinterWith: [PrinterWhereInput!]
  """
  user edge predicates
  """
  hasUser: Boolean
  hasUserWith: [UserWhereInput!]
  """
  selected_user edge predicates
  """
  hasSelectedUser: Boolean
  hasSelectedUserWith: [UserWhereInput!]
}
