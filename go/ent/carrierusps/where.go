// Code generated by ent, DO NOT EDIT.

package carrierusps

import (
	"delivrio.io/go/ent/predicate"
	"delivrio.io/shared-utils/pulid"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldTenantID, v))
}

// IsTestAPI applies equality check predicate on the "is_test_api" field. It's identical to IsTestAPIEQ.
func IsTestAPI(v bool) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldIsTestAPI, v))
}

// ConsumerKey applies equality check predicate on the "consumer_key" field. It's identical to ConsumerKeyEQ.
func ConsumerKey(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldConsumerKey, v))
}

// ConsumerSecret applies equality check predicate on the "consumer_secret" field. It's identical to ConsumerSecretEQ.
func ConsumerSecret(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldConsumerSecret, v))
}

// Mid applies equality check predicate on the "mid" field. It's identical to MidEQ.
func Mid(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldMid, v))
}

// ManifestMid applies equality check predicate on the "manifest_mid" field. It's identical to ManifestMidEQ.
func ManifestMid(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldManifestMid, v))
}

// Crid applies equality check predicate on the "crid" field. It's identical to CridEQ.
func Crid(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldCrid, v))
}

// EpsAccountNumber applies equality check predicate on the "eps_account_number" field. It's identical to EpsAccountNumberEQ.
func EpsAccountNumber(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldEpsAccountNumber, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v pulid.ID) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v pulid.ID) predicate.CarrierUSPS {
	vc := string(v)
	return predicate.CarrierUSPS(sql.FieldContains(FieldTenantID, vc))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v pulid.ID) predicate.CarrierUSPS {
	vc := string(v)
	return predicate.CarrierUSPS(sql.FieldHasPrefix(FieldTenantID, vc))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v pulid.ID) predicate.CarrierUSPS {
	vc := string(v)
	return predicate.CarrierUSPS(sql.FieldHasSuffix(FieldTenantID, vc))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v pulid.ID) predicate.CarrierUSPS {
	vc := string(v)
	return predicate.CarrierUSPS(sql.FieldEqualFold(FieldTenantID, vc))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v pulid.ID) predicate.CarrierUSPS {
	vc := string(v)
	return predicate.CarrierUSPS(sql.FieldContainsFold(FieldTenantID, vc))
}

// IsTestAPIEQ applies the EQ predicate on the "is_test_api" field.
func IsTestAPIEQ(v bool) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldIsTestAPI, v))
}

// IsTestAPINEQ applies the NEQ predicate on the "is_test_api" field.
func IsTestAPINEQ(v bool) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldIsTestAPI, v))
}

// ConsumerKeyEQ applies the EQ predicate on the "consumer_key" field.
func ConsumerKeyEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldConsumerKey, v))
}

// ConsumerKeyNEQ applies the NEQ predicate on the "consumer_key" field.
func ConsumerKeyNEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldConsumerKey, v))
}

// ConsumerKeyIn applies the In predicate on the "consumer_key" field.
func ConsumerKeyIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIn(FieldConsumerKey, vs...))
}

// ConsumerKeyNotIn applies the NotIn predicate on the "consumer_key" field.
func ConsumerKeyNotIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotIn(FieldConsumerKey, vs...))
}

// ConsumerKeyGT applies the GT predicate on the "consumer_key" field.
func ConsumerKeyGT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGT(FieldConsumerKey, v))
}

// ConsumerKeyGTE applies the GTE predicate on the "consumer_key" field.
func ConsumerKeyGTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGTE(FieldConsumerKey, v))
}

// ConsumerKeyLT applies the LT predicate on the "consumer_key" field.
func ConsumerKeyLT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLT(FieldConsumerKey, v))
}

// ConsumerKeyLTE applies the LTE predicate on the "consumer_key" field.
func ConsumerKeyLTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLTE(FieldConsumerKey, v))
}

// ConsumerKeyContains applies the Contains predicate on the "consumer_key" field.
func ConsumerKeyContains(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContains(FieldConsumerKey, v))
}

// ConsumerKeyHasPrefix applies the HasPrefix predicate on the "consumer_key" field.
func ConsumerKeyHasPrefix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasPrefix(FieldConsumerKey, v))
}

// ConsumerKeyHasSuffix applies the HasSuffix predicate on the "consumer_key" field.
func ConsumerKeyHasSuffix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasSuffix(FieldConsumerKey, v))
}

// ConsumerKeyIsNil applies the IsNil predicate on the "consumer_key" field.
func ConsumerKeyIsNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIsNull(FieldConsumerKey))
}

// ConsumerKeyNotNil applies the NotNil predicate on the "consumer_key" field.
func ConsumerKeyNotNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotNull(FieldConsumerKey))
}

// ConsumerKeyEqualFold applies the EqualFold predicate on the "consumer_key" field.
func ConsumerKeyEqualFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEqualFold(FieldConsumerKey, v))
}

// ConsumerKeyContainsFold applies the ContainsFold predicate on the "consumer_key" field.
func ConsumerKeyContainsFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContainsFold(FieldConsumerKey, v))
}

// ConsumerSecretEQ applies the EQ predicate on the "consumer_secret" field.
func ConsumerSecretEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldConsumerSecret, v))
}

// ConsumerSecretNEQ applies the NEQ predicate on the "consumer_secret" field.
func ConsumerSecretNEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldConsumerSecret, v))
}

// ConsumerSecretIn applies the In predicate on the "consumer_secret" field.
func ConsumerSecretIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIn(FieldConsumerSecret, vs...))
}

// ConsumerSecretNotIn applies the NotIn predicate on the "consumer_secret" field.
func ConsumerSecretNotIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotIn(FieldConsumerSecret, vs...))
}

// ConsumerSecretGT applies the GT predicate on the "consumer_secret" field.
func ConsumerSecretGT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGT(FieldConsumerSecret, v))
}

// ConsumerSecretGTE applies the GTE predicate on the "consumer_secret" field.
func ConsumerSecretGTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGTE(FieldConsumerSecret, v))
}

// ConsumerSecretLT applies the LT predicate on the "consumer_secret" field.
func ConsumerSecretLT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLT(FieldConsumerSecret, v))
}

// ConsumerSecretLTE applies the LTE predicate on the "consumer_secret" field.
func ConsumerSecretLTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLTE(FieldConsumerSecret, v))
}

// ConsumerSecretContains applies the Contains predicate on the "consumer_secret" field.
func ConsumerSecretContains(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContains(FieldConsumerSecret, v))
}

// ConsumerSecretHasPrefix applies the HasPrefix predicate on the "consumer_secret" field.
func ConsumerSecretHasPrefix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasPrefix(FieldConsumerSecret, v))
}

// ConsumerSecretHasSuffix applies the HasSuffix predicate on the "consumer_secret" field.
func ConsumerSecretHasSuffix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasSuffix(FieldConsumerSecret, v))
}

// ConsumerSecretIsNil applies the IsNil predicate on the "consumer_secret" field.
func ConsumerSecretIsNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIsNull(FieldConsumerSecret))
}

// ConsumerSecretNotNil applies the NotNil predicate on the "consumer_secret" field.
func ConsumerSecretNotNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotNull(FieldConsumerSecret))
}

// ConsumerSecretEqualFold applies the EqualFold predicate on the "consumer_secret" field.
func ConsumerSecretEqualFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEqualFold(FieldConsumerSecret, v))
}

// ConsumerSecretContainsFold applies the ContainsFold predicate on the "consumer_secret" field.
func ConsumerSecretContainsFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContainsFold(FieldConsumerSecret, v))
}

// MidEQ applies the EQ predicate on the "mid" field.
func MidEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldMid, v))
}

// MidNEQ applies the NEQ predicate on the "mid" field.
func MidNEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldMid, v))
}

// MidIn applies the In predicate on the "mid" field.
func MidIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIn(FieldMid, vs...))
}

// MidNotIn applies the NotIn predicate on the "mid" field.
func MidNotIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotIn(FieldMid, vs...))
}

// MidGT applies the GT predicate on the "mid" field.
func MidGT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGT(FieldMid, v))
}

// MidGTE applies the GTE predicate on the "mid" field.
func MidGTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGTE(FieldMid, v))
}

// MidLT applies the LT predicate on the "mid" field.
func MidLT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLT(FieldMid, v))
}

// MidLTE applies the LTE predicate on the "mid" field.
func MidLTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLTE(FieldMid, v))
}

// MidContains applies the Contains predicate on the "mid" field.
func MidContains(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContains(FieldMid, v))
}

// MidHasPrefix applies the HasPrefix predicate on the "mid" field.
func MidHasPrefix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasPrefix(FieldMid, v))
}

// MidHasSuffix applies the HasSuffix predicate on the "mid" field.
func MidHasSuffix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasSuffix(FieldMid, v))
}

// MidIsNil applies the IsNil predicate on the "mid" field.
func MidIsNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIsNull(FieldMid))
}

// MidNotNil applies the NotNil predicate on the "mid" field.
func MidNotNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotNull(FieldMid))
}

// MidEqualFold applies the EqualFold predicate on the "mid" field.
func MidEqualFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEqualFold(FieldMid, v))
}

// MidContainsFold applies the ContainsFold predicate on the "mid" field.
func MidContainsFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContainsFold(FieldMid, v))
}

// ManifestMidEQ applies the EQ predicate on the "manifest_mid" field.
func ManifestMidEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldManifestMid, v))
}

// ManifestMidNEQ applies the NEQ predicate on the "manifest_mid" field.
func ManifestMidNEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldManifestMid, v))
}

// ManifestMidIn applies the In predicate on the "manifest_mid" field.
func ManifestMidIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIn(FieldManifestMid, vs...))
}

// ManifestMidNotIn applies the NotIn predicate on the "manifest_mid" field.
func ManifestMidNotIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotIn(FieldManifestMid, vs...))
}

// ManifestMidGT applies the GT predicate on the "manifest_mid" field.
func ManifestMidGT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGT(FieldManifestMid, v))
}

// ManifestMidGTE applies the GTE predicate on the "manifest_mid" field.
func ManifestMidGTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGTE(FieldManifestMid, v))
}

// ManifestMidLT applies the LT predicate on the "manifest_mid" field.
func ManifestMidLT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLT(FieldManifestMid, v))
}

// ManifestMidLTE applies the LTE predicate on the "manifest_mid" field.
func ManifestMidLTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLTE(FieldManifestMid, v))
}

// ManifestMidContains applies the Contains predicate on the "manifest_mid" field.
func ManifestMidContains(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContains(FieldManifestMid, v))
}

// ManifestMidHasPrefix applies the HasPrefix predicate on the "manifest_mid" field.
func ManifestMidHasPrefix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasPrefix(FieldManifestMid, v))
}

// ManifestMidHasSuffix applies the HasSuffix predicate on the "manifest_mid" field.
func ManifestMidHasSuffix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasSuffix(FieldManifestMid, v))
}

// ManifestMidIsNil applies the IsNil predicate on the "manifest_mid" field.
func ManifestMidIsNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIsNull(FieldManifestMid))
}

// ManifestMidNotNil applies the NotNil predicate on the "manifest_mid" field.
func ManifestMidNotNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotNull(FieldManifestMid))
}

// ManifestMidEqualFold applies the EqualFold predicate on the "manifest_mid" field.
func ManifestMidEqualFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEqualFold(FieldManifestMid, v))
}

// ManifestMidContainsFold applies the ContainsFold predicate on the "manifest_mid" field.
func ManifestMidContainsFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContainsFold(FieldManifestMid, v))
}

// CridEQ applies the EQ predicate on the "crid" field.
func CridEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldCrid, v))
}

// CridNEQ applies the NEQ predicate on the "crid" field.
func CridNEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldCrid, v))
}

// CridIn applies the In predicate on the "crid" field.
func CridIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIn(FieldCrid, vs...))
}

// CridNotIn applies the NotIn predicate on the "crid" field.
func CridNotIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotIn(FieldCrid, vs...))
}

// CridGT applies the GT predicate on the "crid" field.
func CridGT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGT(FieldCrid, v))
}

// CridGTE applies the GTE predicate on the "crid" field.
func CridGTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGTE(FieldCrid, v))
}

// CridLT applies the LT predicate on the "crid" field.
func CridLT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLT(FieldCrid, v))
}

// CridLTE applies the LTE predicate on the "crid" field.
func CridLTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLTE(FieldCrid, v))
}

// CridContains applies the Contains predicate on the "crid" field.
func CridContains(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContains(FieldCrid, v))
}

// CridHasPrefix applies the HasPrefix predicate on the "crid" field.
func CridHasPrefix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasPrefix(FieldCrid, v))
}

// CridHasSuffix applies the HasSuffix predicate on the "crid" field.
func CridHasSuffix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasSuffix(FieldCrid, v))
}

// CridIsNil applies the IsNil predicate on the "crid" field.
func CridIsNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIsNull(FieldCrid))
}

// CridNotNil applies the NotNil predicate on the "crid" field.
func CridNotNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotNull(FieldCrid))
}

// CridEqualFold applies the EqualFold predicate on the "crid" field.
func CridEqualFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEqualFold(FieldCrid, v))
}

// CridContainsFold applies the ContainsFold predicate on the "crid" field.
func CridContainsFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContainsFold(FieldCrid, v))
}

// EpsAccountNumberEQ applies the EQ predicate on the "eps_account_number" field.
func EpsAccountNumberEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEQ(FieldEpsAccountNumber, v))
}

// EpsAccountNumberNEQ applies the NEQ predicate on the "eps_account_number" field.
func EpsAccountNumberNEQ(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNEQ(FieldEpsAccountNumber, v))
}

// EpsAccountNumberIn applies the In predicate on the "eps_account_number" field.
func EpsAccountNumberIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIn(FieldEpsAccountNumber, vs...))
}

// EpsAccountNumberNotIn applies the NotIn predicate on the "eps_account_number" field.
func EpsAccountNumberNotIn(vs ...string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotIn(FieldEpsAccountNumber, vs...))
}

// EpsAccountNumberGT applies the GT predicate on the "eps_account_number" field.
func EpsAccountNumberGT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGT(FieldEpsAccountNumber, v))
}

// EpsAccountNumberGTE applies the GTE predicate on the "eps_account_number" field.
func EpsAccountNumberGTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldGTE(FieldEpsAccountNumber, v))
}

// EpsAccountNumberLT applies the LT predicate on the "eps_account_number" field.
func EpsAccountNumberLT(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLT(FieldEpsAccountNumber, v))
}

// EpsAccountNumberLTE applies the LTE predicate on the "eps_account_number" field.
func EpsAccountNumberLTE(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldLTE(FieldEpsAccountNumber, v))
}

// EpsAccountNumberContains applies the Contains predicate on the "eps_account_number" field.
func EpsAccountNumberContains(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContains(FieldEpsAccountNumber, v))
}

// EpsAccountNumberHasPrefix applies the HasPrefix predicate on the "eps_account_number" field.
func EpsAccountNumberHasPrefix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasPrefix(FieldEpsAccountNumber, v))
}

// EpsAccountNumberHasSuffix applies the HasSuffix predicate on the "eps_account_number" field.
func EpsAccountNumberHasSuffix(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldHasSuffix(FieldEpsAccountNumber, v))
}

// EpsAccountNumberIsNil applies the IsNil predicate on the "eps_account_number" field.
func EpsAccountNumberIsNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldIsNull(FieldEpsAccountNumber))
}

// EpsAccountNumberNotNil applies the NotNil predicate on the "eps_account_number" field.
func EpsAccountNumberNotNil() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldNotNull(FieldEpsAccountNumber))
}

// EpsAccountNumberEqualFold applies the EqualFold predicate on the "eps_account_number" field.
func EpsAccountNumberEqualFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldEqualFold(FieldEpsAccountNumber, v))
}

// EpsAccountNumberContainsFold applies the ContainsFold predicate on the "eps_account_number" field.
func EpsAccountNumberContainsFold(v string) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.FieldContainsFold(FieldEpsAccountNumber, v))
}

// HasTenant applies the HasEdge predicate on the "tenant" edge.
func HasTenant() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, TenantTable, TenantColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTenantWith applies the HasEdge predicate on the "tenant" edge with a given conditions (other predicates).
func HasTenantWith(preds ...predicate.Tenant) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(func(s *sql.Selector) {
		step := newTenantStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasCarrier applies the HasEdge predicate on the "carrier" edge.
func HasCarrier() predicate.CarrierUSPS {
	return predicate.CarrierUSPS(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, CarrierTable, CarrierColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasCarrierWith applies the HasEdge predicate on the "carrier" edge with a given conditions (other predicates).
func HasCarrierWith(preds ...predicate.Carrier) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(func(s *sql.Selector) {
		step := newCarrierStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CarrierUSPS) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CarrierUSPS) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CarrierUSPS) predicate.CarrierUSPS {
	return predicate.CarrierUSPS(sql.NotPredicates(p))
}
