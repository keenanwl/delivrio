-- Disable the enforcement of foreign-keys constraints
PRAGMA foreign_keys = off;
-- Create "new_connections" table
CREATE TABLE `new_connections` (`id` text NOT NULL, `name` text NOT NULL, `sync_orders` bool NOT NULL DEFAULT (false), `sync_products` bool NOT NULL DEFAULT (false), `fulfill_automatically` bool NOT NULL DEFAULT (false), `dispatch_automatically` bool NOT NULL DEFAULT (false), `convert_currency` bool NOT NULL DEFAULT (false), `auto_print_parcel_slip` bool NOT NULL DEFAULT (false), `tenant_id` text NOT NULL, `connection_connection_brand` text NOT NULL, `connection_sender_location` text NOT NULL, `connection_pickup_location` text NOT NULL, `connection_return_location` text NOT NULL, `connection_seller_location` text NOT NULL, `connection_currency` text NOT NULL, `connection_packing_slip_template` text NULL, `return_portal_connection` text NULL, PRIMARY KEY (`id`), CONSTRAINT `connections_tenants_tenant` FOREIGN KEY (`tenant_id`) REFERENCES `tenants` (`id`) ON DELETE NO ACTION, CONSTRAINT `connections_connection_brands_connection_brand` FOREIGN KEY (`connection_connection_brand`) REFERENCES `connection_brands` (`id`) ON DELETE NO ACTION, CONSTRAINT `connections_locations_sender_location` FOREIGN KEY (`connection_sender_location`) REFERENCES `locations` (`id`) ON DELETE NO ACTION, CONSTRAINT `connections_locations_pickup_location` FOREIGN KEY (`connection_pickup_location`) REFERENCES `locations` (`id`) ON DELETE NO ACTION, CONSTRAINT `connections_locations_return_location` FOREIGN KEY (`connection_return_location`) REFERENCES `locations` (`id`) ON DELETE NO ACTION, CONSTRAINT `connections_locations_seller_location` FOREIGN KEY (`connection_seller_location`) REFERENCES `locations` (`id`) ON DELETE NO ACTION, CONSTRAINT `connections_currencies_currency` FOREIGN KEY (`connection_currency`) REFERENCES `currencies` (`id`) ON DELETE NO ACTION, CONSTRAINT `connections_documents_packing_slip_template` FOREIGN KEY (`connection_packing_slip_template`) REFERENCES `documents` (`id`) ON DELETE SET NULL, CONSTRAINT `connections_return_portals_connection` FOREIGN KEY (`return_portal_connection`) REFERENCES `return_portals` (`id`) ON DELETE SET NULL);
-- Copy rows from old table "connections" to new temporary table "new_connections"
INSERT INTO `new_connections` (`id`, `name`, `sync_orders`, `sync_products`, `fulfill_automatically`, `dispatch_automatically`, `convert_currency`, `tenant_id`, `connection_connection_brand`, `connection_sender_location`, `connection_pickup_location`, `connection_return_location`, `connection_seller_location`, `connection_currency`, `connection_packing_slip_template`, `return_portal_connection`) SELECT `id`, `name`, `sync_orders`, `sync_products`, `fulfill_automatically`, `dispatch_automatically`, `convert_currency`, `tenant_id`, `connection_connection_brand`, `connection_sender_location`, `connection_pickup_location`, `connection_return_location`, `connection_seller_location`, `connection_currency`, `connection_packing_slip_template`, `return_portal_connection` FROM `connections`;
-- Drop "connections" table after copying rows
DROP TABLE `connections`;
-- Rename temporary table "new_connections" to "connections"
ALTER TABLE `new_connections` RENAME TO `connections`;
-- Create index "connections_return_portal_connection_key" to table: "connections"
CREATE UNIQUE INDEX `connections_return_portal_connection_key` ON `connections` (`return_portal_connection`);
-- Create index "connection_tenant_id" to table: "connections"
CREATE INDEX `connection_tenant_id` ON `connections` (`tenant_id`);
-- Enable back the enforcement of foreign-keys constraints
PRAGMA foreign_keys = on;
