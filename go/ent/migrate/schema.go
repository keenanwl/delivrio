// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// APITokensColumns holds the columns for the "api_tokens" table.
	APITokensColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "hashed_token", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "last_used", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "user_api_token", Type: field.TypeString},
	}
	// APITokensTable holds the schema information for the "api_tokens" table.
	APITokensTable = &schema.Table{
		Name:       "api_tokens",
		Columns:    APITokensColumns,
		PrimaryKey: []*schema.Column{APITokensColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "api_tokens_tenants_tenant",
				Columns:    []*schema.Column{APITokensColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "api_tokens_users_api_token",
				Columns:    []*schema.Column{APITokensColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "apitoken_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{APITokensColumns[5]},
			},
		},
	}
	// AccessRightsColumns holds the columns for the "access_rights" table.
	AccessRightsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "internal_id", Type: field.TypeString, Unique: true},
	}
	// AccessRightsTable holds the schema information for the "access_rights" table.
	AccessRightsTable = &schema.Table{
		Name:       "access_rights",
		Columns:    AccessRightsColumns,
		PrimaryKey: []*schema.Column{AccessRightsColumns[0]},
	}
	// AddressesColumns holds the columns for the "addresses" table.
	AddressesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "uniqueness_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "phone_number_2", Type: field.TypeString, Nullable: true},
		{Name: "vat_number", Type: field.TypeString, Nullable: true},
		{Name: "company", Type: field.TypeString, Nullable: true},
		{Name: "address_one", Type: field.TypeString},
		{Name: "address_two", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "state", Type: field.TypeString, Nullable: true},
		{Name: "zip", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "address_country", Type: field.TypeString},
		{Name: "consolidation_recipient", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "consolidation_sender", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// AddressesTable holds the schema information for the "addresses" table.
	AddressesTable = &schema.Table{
		Name:       "addresses",
		Columns:    AddressesColumns,
		PrimaryKey: []*schema.Column{AddressesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "addresses_tenants_tenant",
				Columns:    []*schema.Column{AddressesColumns[14]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "addresses_countries_country",
				Columns:    []*schema.Column{AddressesColumns[15]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "addresses_consolidations_recipient",
				Columns:    []*schema.Column{AddressesColumns[16]},
				RefColumns: []*schema.Column{ConsolidationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "addresses_consolidations_sender",
				Columns:    []*schema.Column{AddressesColumns[17]},
				RefColumns: []*schema.Column{ConsolidationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "address_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{AddressesColumns[14]},
			},
		},
	}
	// AddressGlobalsColumns holds the columns for the "address_globals" table.
	AddressGlobalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "uniqueness_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "company", Type: field.TypeString, Nullable: true},
		{Name: "address_one", Type: field.TypeString},
		{Name: "address_two", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString},
		{Name: "state", Type: field.TypeString, Nullable: true},
		{Name: "zip", Type: field.TypeString},
		{Name: "latitude", Type: field.TypeFloat64, Default: 0},
		{Name: "longitude", Type: field.TypeFloat64, Default: 0},
		{Name: "address_global_country", Type: field.TypeString},
		{Name: "parcel_shop_address", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "parcel_shop_bring_address_delivery", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "parcel_shop_post_nord_address_delivery", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// AddressGlobalsTable holds the schema information for the "address_globals" table.
	AddressGlobalsTable = &schema.Table{
		Name:       "address_globals",
		Columns:    AddressGlobalsColumns,
		PrimaryKey: []*schema.Column{AddressGlobalsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "address_globals_countries_country",
				Columns:    []*schema.Column{AddressGlobalsColumns[10]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "address_globals_parcel_shops_address",
				Columns:    []*schema.Column{AddressGlobalsColumns[11]},
				RefColumns: []*schema.Column{ParcelShopsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "address_globals_parcel_shop_brings_address_delivery",
				Columns:    []*schema.Column{AddressGlobalsColumns[12]},
				RefColumns: []*schema.Column{ParcelShopBringsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "address_globals_parcel_shop_post_nords_address_delivery",
				Columns:    []*schema.Column{AddressGlobalsColumns[13]},
				RefColumns: []*schema.Column{ParcelShopPostNordsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// BusinessHoursPeriodsColumns holds the columns for the "business_hours_periods" table.
	BusinessHoursPeriodsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "day_of_week", Type: field.TypeEnum, Enums: []string{"MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"}},
		{Name: "opening", Type: field.TypeTime},
		{Name: "closing", Type: field.TypeTime},
		{Name: "parcel_shop_business_hours_period", Type: field.TypeString},
	}
	// BusinessHoursPeriodsTable holds the schema information for the "business_hours_periods" table.
	BusinessHoursPeriodsTable = &schema.Table{
		Name:       "business_hours_periods",
		Columns:    BusinessHoursPeriodsColumns,
		PrimaryKey: []*schema.Column{BusinessHoursPeriodsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "business_hours_periods_parcel_shops_business_hours_period",
				Columns:    []*schema.Column{BusinessHoursPeriodsColumns[4]},
				RefColumns: []*schema.Column{ParcelShopsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarriersColumns holds the columns for the "carriers" table.
	CarriersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "sync_cancelation", Type: field.TypeBool, Default: false},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "carrier_carrier_brand", Type: field.TypeString},
	}
	// CarriersTable holds the schema information for the "carriers" table.
	CarriersTable = &schema.Table{
		Name:       "carriers",
		Columns:    CarriersColumns,
		PrimaryKey: []*schema.Column{CarriersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carriers_tenants_tenant",
				Columns:    []*schema.Column{CarriersColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carriers_carrier_brands_carrier_brand",
				Columns:    []*schema.Column{CarriersColumns[4]},
				RefColumns: []*schema.Column{CarrierBrandsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carrier_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarriersColumns[3]},
			},
		},
	}
	// CarrierAdditionalServiceBringsColumns holds the columns for the "carrier_additional_service_brings" table.
	CarrierAdditionalServiceBringsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "api_code_booking", Type: field.TypeString},
		{Name: "carrier_service_bring_carrier_additional_service_bring", Type: field.TypeString, Nullable: true},
	}
	// CarrierAdditionalServiceBringsTable holds the schema information for the "carrier_additional_service_brings" table.
	CarrierAdditionalServiceBringsTable = &schema.Table{
		Name:       "carrier_additional_service_brings",
		Columns:    CarrierAdditionalServiceBringsColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceBringsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_additional_service_brings_carrier_service_brings_carrier_additional_service_bring",
				Columns:    []*schema.Column{CarrierAdditionalServiceBringsColumns[3]},
				RefColumns: []*schema.Column{CarrierServiceBringsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CarrierAdditionalServiceDaOsColumns holds the columns for the "carrier_additional_service_da_os" table.
	CarrierAdditionalServiceDaOsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "api_code", Type: field.TypeString},
	}
	// CarrierAdditionalServiceDaOsTable holds the schema information for the "carrier_additional_service_da_os" table.
	CarrierAdditionalServiceDaOsTable = &schema.Table{
		Name:       "carrier_additional_service_da_os",
		Columns:    CarrierAdditionalServiceDaOsColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceDaOsColumns[0]},
	}
	// CarrierAdditionalServiceDfsColumns holds the columns for the "carrier_additional_service_dfs" table.
	CarrierAdditionalServiceDfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "api_code", Type: field.TypeString},
	}
	// CarrierAdditionalServiceDfsTable holds the schema information for the "carrier_additional_service_dfs" table.
	CarrierAdditionalServiceDfsTable = &schema.Table{
		Name:       "carrier_additional_service_dfs",
		Columns:    CarrierAdditionalServiceDfsColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceDfsColumns[0]},
	}
	// CarrierAdditionalServiceDsVsColumns holds the columns for the "carrier_additional_service_ds_vs" table.
	CarrierAdditionalServiceDsVsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "api_code", Type: field.TypeString},
	}
	// CarrierAdditionalServiceDsVsTable holds the schema information for the "carrier_additional_service_ds_vs" table.
	CarrierAdditionalServiceDsVsTable = &schema.Table{
		Name:       "carrier_additional_service_ds_vs",
		Columns:    CarrierAdditionalServiceDsVsColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceDsVsColumns[0]},
	}
	// CarrierAdditionalServiceEasyPostsColumns holds the columns for the "carrier_additional_service_easy_posts" table.
	CarrierAdditionalServiceEasyPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "api_key", Type: field.TypeString},
		{Name: "api_value", Type: field.TypeString},
	}
	// CarrierAdditionalServiceEasyPostsTable holds the schema information for the "carrier_additional_service_easy_posts" table.
	CarrierAdditionalServiceEasyPostsTable = &schema.Table{
		Name:       "carrier_additional_service_easy_posts",
		Columns:    CarrierAdditionalServiceEasyPostsColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceEasyPostsColumns[0]},
	}
	// CarrierAdditionalServiceGlSsColumns holds the columns for the "carrier_additional_service_gl_ss" table.
	CarrierAdditionalServiceGlSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "mandatory", Type: field.TypeBool},
		{Name: "all_countries_consignor", Type: field.TypeBool, Default: false},
		{Name: "all_countries_consignee", Type: field.TypeBool, Default: false},
		{Name: "internal_id", Type: field.TypeString},
		{Name: "carrier_service_gls_carrier_additional_service_gls", Type: field.TypeString, Nullable: true},
	}
	// CarrierAdditionalServiceGlSsTable holds the schema information for the "carrier_additional_service_gl_ss" table.
	CarrierAdditionalServiceGlSsTable = &schema.Table{
		Name:       "carrier_additional_service_gl_ss",
		Columns:    CarrierAdditionalServiceGlSsColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceGlSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_additional_service_gl_ss_carrier_service_gl_ss_carrier_additional_service_gls",
				Columns:    []*schema.Column{CarrierAdditionalServiceGlSsColumns[6]},
				RefColumns: []*schema.Column{CarrierServiceGlSsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CarrierAdditionalServicePostNordsColumns holds the columns for the "carrier_additional_service_post_nords" table.
	CarrierAdditionalServicePostNordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "mandatory", Type: field.TypeBool},
		{Name: "all_countries_consignor", Type: field.TypeBool, Default: false},
		{Name: "all_countries_consignee", Type: field.TypeBool, Default: false},
		{Name: "internal_id", Type: field.TypeString},
		{Name: "api_code", Type: field.TypeString},
		{Name: "carrier_service_post_nord_carrier_add_serv_post_nord", Type: field.TypeString, Nullable: true},
	}
	// CarrierAdditionalServicePostNordsTable holds the schema information for the "carrier_additional_service_post_nords" table.
	CarrierAdditionalServicePostNordsTable = &schema.Table{
		Name:       "carrier_additional_service_post_nords",
		Columns:    CarrierAdditionalServicePostNordsColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServicePostNordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_additional_service_post_nords_carrier_service_post_nords_carrier_add_serv_post_nord",
				Columns:    []*schema.Column{CarrierAdditionalServicePostNordsColumns[7]},
				RefColumns: []*schema.Column{CarrierServicePostNordsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carrieradditionalservicepostnord_internal_id_carrier_service_post_nord_carrier_add_serv_post_nord",
				Unique:  true,
				Columns: []*schema.Column{CarrierAdditionalServicePostNordsColumns[5], CarrierAdditionalServicePostNordsColumns[7]},
			},
		},
	}
	// CarrierAdditionalServiceUspSsColumns holds the columns for the "carrier_additional_service_usp_ss" table.
	CarrierAdditionalServiceUspSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "commonly_used", Type: field.TypeBool, Default: false},
		{Name: "internal_id", Type: field.TypeEnum, Enums: []string{"global_direct_entry", "usps_label_delivery_service", "tracking_plus_6_months", "tracking_plus_1_year", "tracking_plus_3_years", "tracking_plus_5_years", "tracking_plus_7_years", "tracking_plus_10_years", "tracking_plus_signature_3_years", "tracking_plus_signature_5_years", "tracking_plus_signature_7_years", "tracking_plus_signature_10_years", "hazardous_materials_air_eligible_ethanol", "hazardous_materials_class_1_toy_propellant", "hazardous_materials_class_3_flammable_and_combustible_liquids", "hazardous_materials_class_7_radioactive_materials", "hazardous_materials_class_8_air_eligible_corrosive_materials", "hazardous_materials_class_8_nonspillable_wet_batteries", "hazardous_materials_class_9_lithium_battery_marked_ground_only", "hazardous_materials_class_9_lithium_battery_returns", "hazardous_materials_class_9_marked_lithium_battery", "hazardous_materials_class_9_dry_ice", "hazardous_materials_class_9_unmarked_lithium_batteries", "hazardous_materials_class_9_magnetized_materials", "hazardous_materials_division_4_1_mailable_flammable_solids_and_safety_matches", "hazardous_materials_division_5_2_organic_peroxides", "hazardous_materials_division_6_1_toxic_materials", "hazardous_materials_division_6_2_biological_materials", "hazardous_materials_excepted_quantity_provision", "hazardous_materials_ground_only_hazardous_materials", "hazardous_materials_air_eligible_id8000_consumer_commodity", "hazardous_materials_lighters", "hazardous_materials_limited_quantity_ground", "hazardous_materials_small_quantity_provision_markings_required", "hazardous_materials", "certified_mail", "certified_mail_restricted_delivery", "certified_mail_adult_signature_required", "certified_mail_adult_signature_restricted_delivery", "usps_tracking_electronic", "signature_confirmation", "adult_signature_required", "adult_signature_restricted_delivery", "signature_confirmation_restricted_delivery", "priority_mail_express_insurance", "insurance", "insurance_restricted_delivery", "return_receipt", "return_receipt_electronic", "signature_requested_priority_mail_express_only", "po_to_addressee_priority_mail_express_only", "sunday_delivery"}},
		{Name: "api_code", Type: field.TypeString},
		{Name: "carrier_service_usps_carrier_additional_service_usps", Type: field.TypeString, Nullable: true},
	}
	// CarrierAdditionalServiceUspSsTable holds the schema information for the "carrier_additional_service_usp_ss" table.
	CarrierAdditionalServiceUspSsTable = &schema.Table{
		Name:       "carrier_additional_service_usp_ss",
		Columns:    CarrierAdditionalServiceUspSsColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceUspSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_additional_service_usp_ss_carrier_service_usp_ss_carrier_additional_service_usps",
				Columns:    []*schema.Column{CarrierAdditionalServiceUspSsColumns[5]},
				RefColumns: []*schema.Column{CarrierServiceUspSsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CarrierBrandsColumns holds the columns for the "carrier_brands" table.
	CarrierBrandsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "label_short", Type: field.TypeString},
		{Name: "internal_id", Type: field.TypeEnum, Enums: []string{"bring", "dao", "df", "dsv", "easy_post", "gls", "dhl", "post_nord", "usps"}},
		{Name: "logo_url", Type: field.TypeString, Nullable: true},
		{Name: "text_color", Type: field.TypeString, Nullable: true, Default: "#FFFFFF"},
		{Name: "background_color", Type: field.TypeString, Nullable: true, Default: "#000000"},
	}
	// CarrierBrandsTable holds the schema information for the "carrier_brands" table.
	CarrierBrandsTable = &schema.Table{
		Name:       "carrier_brands",
		Columns:    CarrierBrandsColumns,
		PrimaryKey: []*schema.Column{CarrierBrandsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "carrierbrand_internal_id",
				Unique:  true,
				Columns: []*schema.Column{CarrierBrandsColumns[3]},
			},
		},
	}
	// CarrierBringsColumns holds the columns for the "carrier_brings" table.
	CarrierBringsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "api_key", Type: field.TypeString, Nullable: true},
		{Name: "customer_number", Type: field.TypeString, Nullable: true},
		{Name: "test", Type: field.TypeBool, Default: true},
		{Name: "carrier_carrier_bring", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarrierBringsTable holds the schema information for the "carrier_brings" table.
	CarrierBringsTable = &schema.Table{
		Name:       "carrier_brings",
		Columns:    CarrierBringsColumns,
		PrimaryKey: []*schema.Column{CarrierBringsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_brings_carriers_carrier_bring",
				Columns:    []*schema.Column{CarrierBringsColumns[4]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carrier_brings_tenants_tenant",
				Columns:    []*schema.Column{CarrierBringsColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carrierbring_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarrierBringsColumns[5]},
			},
		},
	}
	// CarrierDaOsColumns holds the columns for the "carrier_da_os" table.
	CarrierDaOsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "customer_id", Type: field.TypeString, Nullable: true},
		{Name: "api_key", Type: field.TypeString, Nullable: true},
		{Name: "test", Type: field.TypeBool, Default: true},
		{Name: "carrier_carrier_dao", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarrierDaOsTable holds the schema information for the "carrier_da_os" table.
	CarrierDaOsTable = &schema.Table{
		Name:       "carrier_da_os",
		Columns:    CarrierDaOsColumns,
		PrimaryKey: []*schema.Column{CarrierDaOsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_da_os_carriers_carrier_dao",
				Columns:    []*schema.Column{CarrierDaOsColumns[4]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carrier_da_os_tenants_tenant",
				Columns:    []*schema.Column{CarrierDaOsColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carrierdao_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarrierDaOsColumns[5]},
			},
		},
	}
	// CarrierDfsColumns holds the columns for the "carrier_dfs" table.
	CarrierDfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "customer_id", Type: field.TypeString},
		{Name: "agreement_number", Type: field.TypeString},
		{Name: "who_pays", Type: field.TypeEnum, Enums: []string{"Prepaid", "Collect"}, Default: "Prepaid"},
		{Name: "test", Type: field.TypeBool, Default: true},
		{Name: "carrier_carrier_df", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarrierDfsTable holds the schema information for the "carrier_dfs" table.
	CarrierDfsTable = &schema.Table{
		Name:       "carrier_dfs",
		Columns:    CarrierDfsColumns,
		PrimaryKey: []*schema.Column{CarrierDfsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_dfs_carriers_carrier_df",
				Columns:    []*schema.Column{CarrierDfsColumns[5]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carrier_dfs_tenants_tenant",
				Columns:    []*schema.Column{CarrierDfsColumns[6]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carrierdf_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarrierDfsColumns[6]},
			},
		},
	}
	// CarrierDsVsColumns holds the columns for the "carrier_ds_vs" table.
	CarrierDsVsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "carrier_carrier_dsv", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarrierDsVsTable holds the schema information for the "carrier_ds_vs" table.
	CarrierDsVsTable = &schema.Table{
		Name:       "carrier_ds_vs",
		Columns:    CarrierDsVsColumns,
		PrimaryKey: []*schema.Column{CarrierDsVsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_ds_vs_carriers_carrier_dsv",
				Columns:    []*schema.Column{CarrierDsVsColumns[1]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carrier_ds_vs_tenants_tenant",
				Columns:    []*schema.Column{CarrierDsVsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carrierdsv_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarrierDsVsColumns[2]},
			},
		},
	}
	// CarrierEasyPostsColumns holds the columns for the "carrier_easy_posts" table.
	CarrierEasyPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "api_key", Type: field.TypeString},
		{Name: "test", Type: field.TypeBool, Default: true},
		{Name: "carrier_accounts", Type: field.TypeJSON},
		{Name: "carrier_carrier_easy_post", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarrierEasyPostsTable holds the schema information for the "carrier_easy_posts" table.
	CarrierEasyPostsTable = &schema.Table{
		Name:       "carrier_easy_posts",
		Columns:    CarrierEasyPostsColumns,
		PrimaryKey: []*schema.Column{CarrierEasyPostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_easy_posts_carriers_carrier_easy_post",
				Columns:    []*schema.Column{CarrierEasyPostsColumns[4]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carrier_easy_posts_tenants_tenant",
				Columns:    []*schema.Column{CarrierEasyPostsColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carriereasypost_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarrierEasyPostsColumns[5]},
			},
		},
	}
	// CarrierGlSsColumns holds the columns for the "carrier_gl_ss" table.
	CarrierGlSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "contact_id", Type: field.TypeString, Nullable: true},
		{Name: "gls_username", Type: field.TypeString, Nullable: true},
		{Name: "gls_password", Type: field.TypeString, Nullable: true},
		{Name: "customer_id", Type: field.TypeString, Nullable: true},
		{Name: "gls_country_code", Type: field.TypeString, Nullable: true},
		{Name: "sync_shipment_cancellation", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "print_error_on_label", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "carrier_carrier_gls", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarrierGlSsTable holds the schema information for the "carrier_gl_ss" table.
	CarrierGlSsTable = &schema.Table{
		Name:       "carrier_gl_ss",
		Columns:    CarrierGlSsColumns,
		PrimaryKey: []*schema.Column{CarrierGlSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_gl_ss_carriers_carrier_gls",
				Columns:    []*schema.Column{CarrierGlSsColumns[8]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carrier_gl_ss_tenants_tenant",
				Columns:    []*schema.Column{CarrierGlSsColumns[9]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carriergls_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarrierGlSsColumns[9]},
			},
		},
	}
	// CarrierPostNordsColumns holds the columns for the "carrier_post_nords" table.
	CarrierPostNordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "customer_number", Type: field.TypeString, Default: ""},
		{Name: "carrier_carrier_post_nord", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarrierPostNordsTable holds the schema information for the "carrier_post_nords" table.
	CarrierPostNordsTable = &schema.Table{
		Name:       "carrier_post_nords",
		Columns:    CarrierPostNordsColumns,
		PrimaryKey: []*schema.Column{CarrierPostNordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_post_nords_carriers_carrier_post_nord",
				Columns:    []*schema.Column{CarrierPostNordsColumns[2]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carrier_post_nords_tenants_tenant",
				Columns:    []*schema.Column{CarrierPostNordsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carrierpostnord_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarrierPostNordsColumns[3]},
			},
		},
	}
	// CarrierServicesColumns holds the columns for the "carrier_services" table.
	CarrierServicesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "internal_id", Type: field.TypeString, Unique: true},
		{Name: "return", Type: field.TypeBool, Default: false},
		{Name: "consolidation", Type: field.TypeBool, Default: false},
		{Name: "delivery_point_optional", Type: field.TypeBool, Default: false},
		{Name: "delivery_point_required", Type: field.TypeBool, Default: false},
		{Name: "carrier_brand_carrier_service", Type: field.TypeString},
	}
	// CarrierServicesTable holds the schema information for the "carrier_services" table.
	CarrierServicesTable = &schema.Table{
		Name:       "carrier_services",
		Columns:    CarrierServicesColumns,
		PrimaryKey: []*schema.Column{CarrierServicesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_services_carrier_brands_carrier_service",
				Columns:    []*schema.Column{CarrierServicesColumns[7]},
				RefColumns: []*schema.Column{CarrierBrandsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierServiceBringsColumns holds the columns for the "carrier_service_brings" table.
	CarrierServiceBringsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "api_service_code", Type: field.TypeString},
		{Name: "api_request", Type: field.TypeString},
		{Name: "carrier_service_carrier_service_bring", Type: field.TypeString, Unique: true},
	}
	// CarrierServiceBringsTable holds the schema information for the "carrier_service_brings" table.
	CarrierServiceBringsTable = &schema.Table{
		Name:       "carrier_service_brings",
		Columns:    CarrierServiceBringsColumns,
		PrimaryKey: []*schema.Column{CarrierServiceBringsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_brings_carrier_services_carrier_service_bring",
				Columns:    []*schema.Column{CarrierServiceBringsColumns[3]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierServiceDaOsColumns holds the columns for the "carrier_service_da_os" table.
	CarrierServiceDaOsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "carrier_service_carrier_service_dao", Type: field.TypeString, Unique: true},
	}
	// CarrierServiceDaOsTable holds the schema information for the "carrier_service_da_os" table.
	CarrierServiceDaOsTable = &schema.Table{
		Name:       "carrier_service_da_os",
		Columns:    CarrierServiceDaOsColumns,
		PrimaryKey: []*schema.Column{CarrierServiceDaOsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_da_os_carrier_services_carrier_service_dao",
				Columns:    []*schema.Column{CarrierServiceDaOsColumns[1]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierServiceDfsColumns holds the columns for the "carrier_service_dfs" table.
	CarrierServiceDfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "carrier_service_carrier_service_df", Type: field.TypeString, Unique: true},
	}
	// CarrierServiceDfsTable holds the schema information for the "carrier_service_dfs" table.
	CarrierServiceDfsTable = &schema.Table{
		Name:       "carrier_service_dfs",
		Columns:    CarrierServiceDfsColumns,
		PrimaryKey: []*schema.Column{CarrierServiceDfsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_dfs_carrier_services_carrier_service_df",
				Columns:    []*schema.Column{CarrierServiceDfsColumns[1]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierServiceDsVsColumns holds the columns for the "carrier_service_ds_vs" table.
	CarrierServiceDsVsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "carrier_service_carrier_service_dsv", Type: field.TypeString, Unique: true},
	}
	// CarrierServiceDsVsTable holds the schema information for the "carrier_service_ds_vs" table.
	CarrierServiceDsVsTable = &schema.Table{
		Name:       "carrier_service_ds_vs",
		Columns:    CarrierServiceDsVsColumns,
		PrimaryKey: []*schema.Column{CarrierServiceDsVsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_ds_vs_carrier_services_carrier_service_dsv",
				Columns:    []*schema.Column{CarrierServiceDsVsColumns[1]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierServiceEasyPostsColumns holds the columns for the "carrier_service_easy_posts" table.
	CarrierServiceEasyPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "api_key", Type: field.TypeEnum, Enums: []string{"First", "Priority", "Express", "GroundAdvantage", "LibraryMail", "MediaMail", "FirstClassMailInternational", "FirstClassPackageInternationalService", "PriorityMailInternational", "ExpressMailInternational"}},
		{Name: "carrier_service_carrier_serv_easy_post", Type: field.TypeString, Unique: true},
	}
	// CarrierServiceEasyPostsTable holds the schema information for the "carrier_service_easy_posts" table.
	CarrierServiceEasyPostsTable = &schema.Table{
		Name:       "carrier_service_easy_posts",
		Columns:    CarrierServiceEasyPostsColumns,
		PrimaryKey: []*schema.Column{CarrierServiceEasyPostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_easy_posts_carrier_services_carrier_serv_easy_post",
				Columns:    []*schema.Column{CarrierServiceEasyPostsColumns[2]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierServiceGlSsColumns holds the columns for the "carrier_service_gl_ss" table.
	CarrierServiceGlSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "api_key", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "api_value", Type: field.TypeEnum, Enums: []string{"Y", "numeric_string", "none"}},
		{Name: "carrier_service_carrier_service_gls", Type: field.TypeString, Unique: true},
	}
	// CarrierServiceGlSsTable holds the schema information for the "carrier_service_gl_ss" table.
	CarrierServiceGlSsTable = &schema.Table{
		Name:       "carrier_service_gl_ss",
		Columns:    CarrierServiceGlSsColumns,
		PrimaryKey: []*schema.Column{CarrierServiceGlSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_gl_ss_carrier_services_carrier_service_gls",
				Columns:    []*schema.Column{CarrierServiceGlSsColumns[3]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierServicePostNordsColumns holds the columns for the "carrier_service_post_nords" table.
	CarrierServicePostNordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString},
		{Name: "internal_id", Type: field.TypeString, Unique: true},
		{Name: "api_code", Type: field.TypeString},
		{Name: "carrier_service_carrier_service_post_nord", Type: field.TypeString, Unique: true},
	}
	// CarrierServicePostNordsTable holds the schema information for the "carrier_service_post_nords" table.
	CarrierServicePostNordsTable = &schema.Table{
		Name:       "carrier_service_post_nords",
		Columns:    CarrierServicePostNordsColumns,
		PrimaryKey: []*schema.Column{CarrierServicePostNordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_post_nords_carrier_services_carrier_service_post_nord",
				Columns:    []*schema.Column{CarrierServicePostNordsColumns[4]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierServiceUspSsColumns holds the columns for the "carrier_service_usp_ss" table.
	CarrierServiceUspSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "api_key", Type: field.TypeEnum, Enums: []string{"PARCEL_SELECT", "PARCEL_SELECT_LIGHTWEIGHT", "USPS_CONNECT_LOCAL", "USPS_CONNECT_REGIONAL", "USPS_CONNECT_MAIL", "USPS_GROUND_ADVANTAGE", "PRIORITY_MAIL_EXPRESS", "PRIORITY_MAIL", "FIRST-CLASS_PACKAGE_SERVICE", "LIBRARY_MAIL", "MEDIA_MAIL", "BOUND_PRINTED_MATTER", "DOMESTIC_MATTER_FOR_THE_BLIND", "FIRST-CLASS_PACKAGE_RETURN_SERVICE", "GROUND_RETURN_SERVICE", "PRIORITY_MAIL_EXPRESS_RETURN_SERVICE", "PRIORITY_MAIL_RETURN_SERVICE", "USPS_GROUND_ADVANTAGE_RETURN_SERVICE"}},
		{Name: "carrier_service_carrier_service_usps", Type: field.TypeString, Unique: true},
	}
	// CarrierServiceUspSsTable holds the schema information for the "carrier_service_usp_ss" table.
	CarrierServiceUspSsTable = &schema.Table{
		Name:       "carrier_service_usp_ss",
		Columns:    CarrierServiceUspSsColumns,
		PrimaryKey: []*schema.Column{CarrierServiceUspSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_usp_ss_carrier_services_carrier_service_usps",
				Columns:    []*schema.Column{CarrierServiceUspSsColumns[2]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// CarrierUspSsColumns holds the columns for the "carrier_usp_ss" table.
	CarrierUspSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "is_test_api", Type: field.TypeBool, Default: false},
		{Name: "consumer_key", Type: field.TypeString, Nullable: true},
		{Name: "consumer_secret", Type: field.TypeString, Nullable: true},
		{Name: "mid", Type: field.TypeString, Nullable: true},
		{Name: "manifest_mid", Type: field.TypeString, Nullable: true},
		{Name: "crid", Type: field.TypeString, Nullable: true},
		{Name: "eps_account_number", Type: field.TypeString, Nullable: true},
		{Name: "carrier_carrier_usps", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// CarrierUspSsTable holds the schema information for the "carrier_usp_ss" table.
	CarrierUspSsTable = &schema.Table{
		Name:       "carrier_usp_ss",
		Columns:    CarrierUspSsColumns,
		PrimaryKey: []*schema.Column{CarrierUspSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_usp_ss_carriers_carrier_usps",
				Columns:    []*schema.Column{CarrierUspSsColumns[8]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "carrier_usp_ss_tenants_tenant",
				Columns:    []*schema.Column{CarrierUspSsColumns[9]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "carrierusps_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CarrierUspSsColumns[9]},
			},
		},
	}
	// ChangeHistoriesColumns holds the columns for the "change_histories" table.
	ChangeHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "origin", Type: field.TypeEnum, Enums: []string{"unknown", "background", "rest_api", "web_client", "print_client", "seed"}, Default: "unknown"},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "change_history_user", Type: field.TypeString, Nullable: true},
	}
	// ChangeHistoriesTable holds the schema information for the "change_histories" table.
	ChangeHistoriesTable = &schema.Table{
		Name:       "change_histories",
		Columns:    ChangeHistoriesColumns,
		PrimaryKey: []*schema.Column{ChangeHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "change_histories_tenants_tenant",
				Columns:    []*schema.Column{ChangeHistoriesColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "change_histories_users_user",
				Columns:    []*schema.Column{ChangeHistoriesColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "changehistory_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ChangeHistoriesColumns[3]},
			},
		},
	}
	// CollisColumns holds the columns for the "collis" table.
	CollisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "internal_barcode", Type: field.TypeInt64, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Pending", "Dispatched", "Cancelled"}},
		{Name: "slip_print_status", Type: field.TypeEnum, Enums: []string{"pending", "printed"}, Default: "pending"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "email_packing_slip_printed_at", Type: field.TypeTime, Nullable: true},
		{Name: "email_label_printed_at", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "colli_recipient", Type: field.TypeString},
		{Name: "colli_sender", Type: field.TypeString},
		{Name: "colli_parcel_shop", Type: field.TypeString, Nullable: true},
		{Name: "colli_click_collect_location", Type: field.TypeString, Nullable: true},
		{Name: "colli_delivery_option", Type: field.TypeString, Nullable: true},
		{Name: "colli_packaging", Type: field.TypeString, Nullable: true},
		{Name: "order_colli", Type: field.TypeString},
	}
	// CollisTable holds the schema information for the "collis" table.
	CollisTable = &schema.Table{
		Name:       "collis",
		Columns:    CollisColumns,
		PrimaryKey: []*schema.Column{CollisColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "collis_tenants_tenant",
				Columns:    []*schema.Column{CollisColumns[7]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "collis_addresses_recipient",
				Columns:    []*schema.Column{CollisColumns[8]},
				RefColumns: []*schema.Column{AddressesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "collis_addresses_sender",
				Columns:    []*schema.Column{CollisColumns[9]},
				RefColumns: []*schema.Column{AddressesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "collis_parcel_shops_parcel_shop",
				Columns:    []*schema.Column{CollisColumns[10]},
				RefColumns: []*schema.Column{ParcelShopsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "collis_locations_click_collect_location",
				Columns:    []*schema.Column{CollisColumns[11]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "collis_delivery_options_delivery_option",
				Columns:    []*schema.Column{CollisColumns[12]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "collis_packagings_packaging",
				Columns:    []*schema.Column{CollisColumns[13]},
				RefColumns: []*schema.Column{PackagingsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "collis_orders_colli",
				Columns:    []*schema.Column{CollisColumns[14]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "colli_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CollisColumns[7]},
			},
			{
				Name:    "colli_internal_barcode_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{CollisColumns[1], CollisColumns[7]},
			},
		},
	}
	// ConnectOptionCarriersColumns holds the columns for the "connect_option_carriers" table.
	ConnectOptionCarriersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// ConnectOptionCarriersTable holds the schema information for the "connect_option_carriers" table.
	ConnectOptionCarriersTable = &schema.Table{
		Name:       "connect_option_carriers",
		Columns:    ConnectOptionCarriersColumns,
		PrimaryKey: []*schema.Column{ConnectOptionCarriersColumns[0]},
	}
	// ConnectOptionPlatformsColumns holds the columns for the "connect_option_platforms" table.
	ConnectOptionPlatformsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
	}
	// ConnectOptionPlatformsTable holds the schema information for the "connect_option_platforms" table.
	ConnectOptionPlatformsTable = &schema.Table{
		Name:       "connect_option_platforms",
		Columns:    ConnectOptionPlatformsColumns,
		PrimaryKey: []*schema.Column{ConnectOptionPlatformsColumns[0]},
	}
	// ConnectionsColumns holds the columns for the "connections" table.
	ConnectionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "sync_orders", Type: field.TypeBool, Default: false},
		{Name: "sync_products", Type: field.TypeBool, Default: false},
		{Name: "fulfill_automatically", Type: field.TypeBool, Default: false},
		{Name: "dispatch_automatically", Type: field.TypeBool, Default: false},
		{Name: "convert_currency", Type: field.TypeBool, Default: false},
		{Name: "auto_print_parcel_slip", Type: field.TypeBool, Default: false},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "connection_connection_brand", Type: field.TypeString},
		{Name: "connection_sender_location", Type: field.TypeString},
		{Name: "connection_pickup_location", Type: field.TypeString},
		{Name: "connection_return_location", Type: field.TypeString},
		{Name: "connection_seller_location", Type: field.TypeString},
		{Name: "connection_currency", Type: field.TypeString},
		{Name: "connection_packing_slip_template", Type: field.TypeString, Nullable: true},
		{Name: "return_portal_connection", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// ConnectionsTable holds the schema information for the "connections" table.
	ConnectionsTable = &schema.Table{
		Name:       "connections",
		Columns:    ConnectionsColumns,
		PrimaryKey: []*schema.Column{ConnectionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "connections_tenants_tenant",
				Columns:    []*schema.Column{ConnectionsColumns[8]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connections_connection_brands_connection_brand",
				Columns:    []*schema.Column{ConnectionsColumns[9]},
				RefColumns: []*schema.Column{ConnectionBrandsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connections_locations_sender_location",
				Columns:    []*schema.Column{ConnectionsColumns[10]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connections_locations_pickup_location",
				Columns:    []*schema.Column{ConnectionsColumns[11]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connections_locations_return_location",
				Columns:    []*schema.Column{ConnectionsColumns[12]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connections_locations_seller_location",
				Columns:    []*schema.Column{ConnectionsColumns[13]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connections_currencies_currency",
				Columns:    []*schema.Column{ConnectionsColumns[14]},
				RefColumns: []*schema.Column{CurrenciesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connections_documents_packing_slip_template",
				Columns:    []*schema.Column{ConnectionsColumns[15]},
				RefColumns: []*schema.Column{DocumentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "connections_return_portals_connection",
				Columns:    []*schema.Column{ConnectionsColumns[16]},
				RefColumns: []*schema.Column{ReturnPortalsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "connection_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ConnectionsColumns[8]},
			},
		},
	}
	// ConnectionBrandsColumns holds the columns for the "connection_brands" table.
	ConnectionBrandsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "internal_id", Type: field.TypeEnum, Enums: []string{"shopify"}, Default: "shopify"},
		{Name: "logo_url", Type: field.TypeString, Nullable: true},
	}
	// ConnectionBrandsTable holds the schema information for the "connection_brands" table.
	ConnectionBrandsTable = &schema.Table{
		Name:       "connection_brands",
		Columns:    ConnectionBrandsColumns,
		PrimaryKey: []*schema.Column{ConnectionBrandsColumns[0]},
	}
	// ConnectionLookupsColumns holds the columns for the "connection_lookups" table.
	ConnectionLookupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "payload", Type: field.TypeString},
		{Name: "options_output_count", Type: field.TypeInt},
		{Name: "error", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "connection_lookup_connections", Type: field.TypeString, Nullable: true},
	}
	// ConnectionLookupsTable holds the schema information for the "connection_lookups" table.
	ConnectionLookupsTable = &schema.Table{
		Name:       "connection_lookups",
		Columns:    ConnectionLookupsColumns,
		PrimaryKey: []*schema.Column{ConnectionLookupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "connection_lookups_tenants_tenant",
				Columns:    []*schema.Column{ConnectionLookupsColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connection_lookups_connections_connections",
				Columns:    []*schema.Column{ConnectionLookupsColumns[6]},
				RefColumns: []*schema.Column{ConnectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "connectionlookup_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ConnectionLookupsColumns[5]},
			},
		},
	}
	// ConnectionShopifiesColumns holds the columns for the "connection_shopifies" table.
	ConnectionShopifiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "rate_integration", Type: field.TypeBool, Default: false},
		{Name: "store_url", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "api_key", Type: field.TypeString, Nullable: true},
		{Name: "lookup_key", Type: field.TypeString, Nullable: true},
		{Name: "sync_from", Type: field.TypeTime, Nullable: true},
		{Name: "filter_tags", Type: field.TypeJSON, Nullable: true},
		{Name: "connection_connection_shopify", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ConnectionShopifiesTable holds the schema information for the "connection_shopifies" table.
	ConnectionShopifiesTable = &schema.Table{
		Name:       "connection_shopifies",
		Columns:    ConnectionShopifiesColumns,
		PrimaryKey: []*schema.Column{ConnectionShopifiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "connection_shopifies_connections_connection_shopify",
				Columns:    []*schema.Column{ConnectionShopifiesColumns[7]},
				RefColumns: []*schema.Column{ConnectionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "connection_shopifies_tenants_tenant",
				Columns:    []*schema.Column{ConnectionShopifiesColumns[8]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "connectionshopify_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ConnectionShopifiesColumns[8]},
			},
		},
	}
	// ConsolidationsColumns holds the columns for the "consolidations" table.
	ConsolidationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "public_id", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Pending", "Prebooked", "Booked", "Cancelled"}, Default: "Pending"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "consolidation_delivery_option", Type: field.TypeString, Nullable: true},
		{Name: "shipment_consolidation", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// ConsolidationsTable holds the schema information for the "consolidations" table.
	ConsolidationsTable = &schema.Table{
		Name:       "consolidations",
		Columns:    ConsolidationsColumns,
		PrimaryKey: []*schema.Column{ConsolidationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "consolidations_tenants_tenant",
				Columns:    []*schema.Column{ConsolidationsColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "consolidations_delivery_options_delivery_option",
				Columns:    []*schema.Column{ConsolidationsColumns[6]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "consolidations_shipments_consolidation",
				Columns:    []*schema.Column{ConsolidationsColumns[7]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "consolidation_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ConsolidationsColumns[5]},
			},
		},
	}
	// ContactsColumns holds the columns for the "contacts" table.
	ContactsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "surname", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ContactsTable holds the schema information for the "contacts" table.
	ContactsTable = &schema.Table{
		Name:       "contacts",
		Columns:    ContactsColumns,
		PrimaryKey: []*schema.Column{ContactsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "contacts_tenants_tenant",
				Columns:    []*schema.Column{ContactsColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "contact_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ContactsColumns[5]},
			},
		},
	}
	// CountriesColumns holds the columns for the "countries" table.
	CountriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "alpha_2", Type: field.TypeString, Unique: true, Size: 2},
		{Name: "alpha_3", Type: field.TypeString, Unique: true, Size: 3},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "region", Type: field.TypeEnum, Enums: []string{"Asia", "Europe", "Oceania", "Americas", "Africa"}},
	}
	// CountriesTable holds the schema information for the "countries" table.
	CountriesTable = &schema.Table{
		Name:       "countries",
		Columns:    CountriesColumns,
		PrimaryKey: []*schema.Column{CountriesColumns[0]},
	}
	// CountryHarmonizedCodesColumns holds the columns for the "country_harmonized_codes" table.
	CountryHarmonizedCodesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "code", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "country_harmonized_code_country", Type: field.TypeString},
		{Name: "inventory_item_country_harmonized_code", Type: field.TypeString},
	}
	// CountryHarmonizedCodesTable holds the schema information for the "country_harmonized_codes" table.
	CountryHarmonizedCodesTable = &schema.Table{
		Name:       "country_harmonized_codes",
		Columns:    CountryHarmonizedCodesColumns,
		PrimaryKey: []*schema.Column{CountryHarmonizedCodesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "country_harmonized_codes_tenants_tenant",
				Columns:    []*schema.Column{CountryHarmonizedCodesColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "country_harmonized_codes_countries_country",
				Columns:    []*schema.Column{CountryHarmonizedCodesColumns[3]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "country_harmonized_codes_inventory_items_country_harmonized_code",
				Columns:    []*schema.Column{CountryHarmonizedCodesColumns[4]},
				RefColumns: []*schema.Column{InventoryItemsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "countryharmonizedcode_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{CountryHarmonizedCodesColumns[2]},
			},
		},
	}
	// CurrenciesColumns holds the columns for the "currencies" table.
	CurrenciesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "display", Type: field.TypeString, Unique: true},
		{Name: "currency_code", Type: field.TypeEnum, Enums: []string{"DKK", "EUR", "SEK", "USD"}, Default: "DKK"},
	}
	// CurrenciesTable holds the schema information for the "currencies" table.
	CurrenciesTable = &schema.Table{
		Name:       "currencies",
		Columns:    CurrenciesColumns,
		PrimaryKey: []*schema.Column{CurrenciesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "currency_currency_code",
				Unique:  true,
				Columns: []*schema.Column{CurrenciesColumns[2]},
			},
		},
	}
	// DeliveryOptionsColumns holds the columns for the "delivery_options" table.
	DeliveryOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "archived_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "sort_order", Type: field.TypeInt},
		{Name: "click_option_display_count", Type: field.TypeInt, Nullable: true, Default: 3},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "click_collect", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "override_sender_address", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "override_return_address", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "hide_delivery_option", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "delivery_estimate_from", Type: field.TypeInt, Nullable: true},
		{Name: "delivery_estimate_to", Type: field.TypeInt, Nullable: true},
		{Name: "webshipper_integration", Type: field.TypeBool, Default: false},
		{Name: "webshipper_id", Type: field.TypeInt, Nullable: true, Default: 1},
		{Name: "shipmondo_integration", Type: field.TypeBool, Default: false},
		{Name: "shipmondo_delivery_option", Type: field.TypeString, Nullable: true},
		{Name: "customs_enabled", Type: field.TypeBool, Default: false},
		{Name: "customs_signer", Type: field.TypeString, Nullable: true},
		{Name: "hide_if_company_empty", Type: field.TypeBool, Default: false},
		{Name: "connection_delivery_option", Type: field.TypeString},
		{Name: "connection_default_delivery_option", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "delivery_option_carrier", Type: field.TypeString},
		{Name: "delivery_option_carrier_service", Type: field.TypeString},
		{Name: "delivery_option_email_click_collect_at_store", Type: field.TypeString, Nullable: true},
		{Name: "delivery_option_default_packaging", Type: field.TypeString, Nullable: true},
	}
	// DeliveryOptionsTable holds the schema information for the "delivery_options" table.
	DeliveryOptionsTable = &schema.Table{
		Name:       "delivery_options",
		Columns:    DeliveryOptionsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_options_connections_delivery_option",
				Columns:    []*schema.Column{DeliveryOptionsColumns[19]},
				RefColumns: []*schema.Column{ConnectionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_options_connections_default_delivery_option",
				Columns:    []*schema.Column{DeliveryOptionsColumns[20]},
				RefColumns: []*schema.Column{ConnectionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "delivery_options_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionsColumns[21]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_options_carriers_carrier",
				Columns:    []*schema.Column{DeliveryOptionsColumns[22]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_options_carrier_services_carrier_service",
				Columns:    []*schema.Column{DeliveryOptionsColumns[23]},
				RefColumns: []*schema.Column{CarrierServicesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_options_email_templates_email_click_collect_at_store",
				Columns:    []*schema.Column{DeliveryOptionsColumns[24]},
				RefColumns: []*schema.Column{EmailTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "delivery_options_packagings_default_packaging",
				Columns:    []*schema.Column{DeliveryOptionsColumns[25]},
				RefColumns: []*schema.Column{PackagingsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoption_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionsColumns[21]},
			},
		},
	}
	// DeliveryOptionBringsColumns holds the columns for the "delivery_option_brings" table.
	DeliveryOptionBringsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "electronic_customs", Type: field.TypeBool, Default: false},
		{Name: "delivery_option_delivery_option_bring", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryOptionBringsTable holds the schema information for the "delivery_option_brings" table.
	DeliveryOptionBringsTable = &schema.Table{
		Name:       "delivery_option_brings",
		Columns:    DeliveryOptionBringsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionBringsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_brings_delivery_options_delivery_option_bring",
				Columns:    []*schema.Column{DeliveryOptionBringsColumns[2]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_option_brings_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionBringsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoptionbring_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionBringsColumns[3]},
			},
		},
	}
	// DeliveryOptionDaOsColumns holds the columns for the "delivery_option_da_os" table.
	DeliveryOptionDaOsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "delivery_option_delivery_option_dao", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryOptionDaOsTable holds the schema information for the "delivery_option_da_os" table.
	DeliveryOptionDaOsTable = &schema.Table{
		Name:       "delivery_option_da_os",
		Columns:    DeliveryOptionDaOsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionDaOsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_da_os_delivery_options_delivery_option_dao",
				Columns:    []*schema.Column{DeliveryOptionDaOsColumns[1]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_option_da_os_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionDaOsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoptiondao_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionDaOsColumns[2]},
			},
		},
	}
	// DeliveryOptionDfsColumns holds the columns for the "delivery_option_dfs" table.
	DeliveryOptionDfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "delivery_option_delivery_option_df", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryOptionDfsTable holds the schema information for the "delivery_option_dfs" table.
	DeliveryOptionDfsTable = &schema.Table{
		Name:       "delivery_option_dfs",
		Columns:    DeliveryOptionDfsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionDfsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_dfs_delivery_options_delivery_option_df",
				Columns:    []*schema.Column{DeliveryOptionDfsColumns[1]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_option_dfs_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionDfsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoptiondf_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionDfsColumns[2]},
			},
		},
	}
	// DeliveryOptionDsVsColumns holds the columns for the "delivery_option_ds_vs" table.
	DeliveryOptionDsVsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "delivery_option_delivery_option_dsv", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryOptionDsVsTable holds the schema information for the "delivery_option_ds_vs" table.
	DeliveryOptionDsVsTable = &schema.Table{
		Name:       "delivery_option_ds_vs",
		Columns:    DeliveryOptionDsVsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionDsVsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_ds_vs_delivery_options_delivery_option_dsv",
				Columns:    []*schema.Column{DeliveryOptionDsVsColumns[1]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_option_ds_vs_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionDsVsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoptiondsv_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionDsVsColumns[2]},
			},
		},
	}
	// DeliveryOptionEasyPostsColumns holds the columns for the "delivery_option_easy_posts" table.
	DeliveryOptionEasyPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "delivery_option_delivery_option_easy_post", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryOptionEasyPostsTable holds the schema information for the "delivery_option_easy_posts" table.
	DeliveryOptionEasyPostsTable = &schema.Table{
		Name:       "delivery_option_easy_posts",
		Columns:    DeliveryOptionEasyPostsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionEasyPostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_easy_posts_delivery_options_delivery_option_easy_post",
				Columns:    []*schema.Column{DeliveryOptionEasyPostsColumns[1]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_option_easy_posts_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionEasyPostsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoptioneasypost_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionEasyPostsColumns[2]},
			},
		},
	}
	// DeliveryOptionGlSsColumns holds the columns for the "delivery_option_gl_ss" table.
	DeliveryOptionGlSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "delivery_option_delivery_option_gls", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryOptionGlSsTable holds the schema information for the "delivery_option_gl_ss" table.
	DeliveryOptionGlSsTable = &schema.Table{
		Name:       "delivery_option_gl_ss",
		Columns:    DeliveryOptionGlSsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionGlSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_gl_ss_delivery_options_delivery_option_gls",
				Columns:    []*schema.Column{DeliveryOptionGlSsColumns[1]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_option_gl_ss_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionGlSsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoptiongls_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionGlSsColumns[2]},
			},
		},
	}
	// DeliveryOptionPostNordsColumns holds the columns for the "delivery_option_post_nords" table.
	DeliveryOptionPostNordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "format_zpl", Type: field.TypeBool, Default: true},
		{Name: "delivery_option_delivery_option_post_nord", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryOptionPostNordsTable holds the schema information for the "delivery_option_post_nords" table.
	DeliveryOptionPostNordsTable = &schema.Table{
		Name:       "delivery_option_post_nords",
		Columns:    DeliveryOptionPostNordsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionPostNordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_post_nords_delivery_options_delivery_option_post_nord",
				Columns:    []*schema.Column{DeliveryOptionPostNordsColumns[2]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_option_post_nords_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionPostNordsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoptionpostnord_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionPostNordsColumns[3]},
			},
		},
	}
	// DeliveryOptionUspSsColumns holds the columns for the "delivery_option_usp_ss" table.
	DeliveryOptionUspSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "format_zpl", Type: field.TypeBool, Default: true},
		{Name: "delivery_option_delivery_option_usps", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryOptionUspSsTable holds the schema information for the "delivery_option_usp_ss" table.
	DeliveryOptionUspSsTable = &schema.Table{
		Name:       "delivery_option_usp_ss",
		Columns:    DeliveryOptionUspSsColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionUspSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_usp_ss_delivery_options_delivery_option_usps",
				Columns:    []*schema.Column{DeliveryOptionUspSsColumns[2]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_option_usp_ss_tenants_tenant",
				Columns:    []*schema.Column{DeliveryOptionUspSsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryoptionusps_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryOptionUspSsColumns[3]},
			},
		},
	}
	// DeliveryRulesColumns holds the columns for the "delivery_rules" table.
	DeliveryRulesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat64, Default: 20},
		{Name: "delivery_option_delivery_rule", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "delivery_rule_currency", Type: field.TypeString, Nullable: true},
	}
	// DeliveryRulesTable holds the schema information for the "delivery_rules" table.
	DeliveryRulesTable = &schema.Table{
		Name:       "delivery_rules",
		Columns:    DeliveryRulesColumns,
		PrimaryKey: []*schema.Column{DeliveryRulesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_rules_delivery_options_delivery_rule",
				Columns:    []*schema.Column{DeliveryRulesColumns[3]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "delivery_rules_tenants_tenant",
				Columns:    []*schema.Column{DeliveryRulesColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_rules_currencies_currency",
				Columns:    []*schema.Column{DeliveryRulesColumns[5]},
				RefColumns: []*schema.Column{CurrenciesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryrule_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryRulesColumns[4]},
			},
		},
	}
	// DeliveryRuleConstraintsColumns holds the columns for the "delivery_rule_constraints" table.
	DeliveryRuleConstraintsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "property_type", Type: field.TypeEnum, Enums: []string{"total_weight", "cart_total", "day_of_week", "time_of_day", "product_tag", "all_products_tagged", "sku", "order_lines", "postal_code_numeric", "postal_code_string"}},
		{Name: "comparison", Type: field.TypeEnum, Enums: []string{"equals", "not_equals", "between", "outside", "less_than", "greater_than", "contains", "prefix", "suffix"}},
		{Name: "selected_value", Type: field.TypeOther, SchemaType: map[string]string{"postgres": "jsonb", "sqlite3": "json"}},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "delivery_rule_constraint_group_delivery_rule_constraints", Type: field.TypeString},
	}
	// DeliveryRuleConstraintsTable holds the schema information for the "delivery_rule_constraints" table.
	DeliveryRuleConstraintsTable = &schema.Table{
		Name:       "delivery_rule_constraints",
		Columns:    DeliveryRuleConstraintsColumns,
		PrimaryKey: []*schema.Column{DeliveryRuleConstraintsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_rule_constraints_tenants_tenant",
				Columns:    []*schema.Column{DeliveryRuleConstraintsColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_rule_constraints_delivery_rule_constraint_groups_delivery_rule_constraints",
				Columns:    []*schema.Column{DeliveryRuleConstraintsColumns[5]},
				RefColumns: []*schema.Column{DeliveryRuleConstraintGroupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryruleconstraint_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryRuleConstraintsColumns[4]},
			},
		},
	}
	// DeliveryRuleConstraintGroupsColumns holds the columns for the "delivery_rule_constraint_groups" table.
	DeliveryRuleConstraintGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "constraint_logic", Type: field.TypeEnum, Enums: []string{"and", "or"}, Default: "and"},
		{Name: "delivery_rule_delivery_rule_constraint_group", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// DeliveryRuleConstraintGroupsTable holds the schema information for the "delivery_rule_constraint_groups" table.
	DeliveryRuleConstraintGroupsTable = &schema.Table{
		Name:       "delivery_rule_constraint_groups",
		Columns:    DeliveryRuleConstraintGroupsColumns,
		PrimaryKey: []*schema.Column{DeliveryRuleConstraintGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_rule_constraint_groups_delivery_rules_delivery_rule_constraint_group",
				Columns:    []*schema.Column{DeliveryRuleConstraintGroupsColumns[2]},
				RefColumns: []*schema.Column{DeliveryRulesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "delivery_rule_constraint_groups_tenants_tenant",
				Columns:    []*schema.Column{DeliveryRuleConstraintGroupsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "deliveryruleconstraintgroup_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DeliveryRuleConstraintGroupsColumns[3]},
			},
		},
	}
	// DocumentsColumns holds the columns for the "documents" table.
	DocumentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "html_template", Type: field.TypeString, Nullable: true},
		{Name: "html_header", Type: field.TypeString, Nullable: true},
		{Name: "html_footer", Type: field.TypeString, Nullable: true},
		{Name: "last_base64_pdf", Type: field.TypeString, Nullable: true},
		{Name: "merge_type", Type: field.TypeEnum, Enums: []string{"Orders", "PackingSlip", "Waybill"}, Default: "Orders"},
		{Name: "paper_size", Type: field.TypeEnum, Enums: []string{"A4", "Four_x_six"}, Default: "A4"},
		{Name: "start_at", Type: field.TypeTime},
		{Name: "end_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "document_carrier_brand", Type: field.TypeString, Nullable: true},
	}
	// DocumentsTable holds the schema information for the "documents" table.
	DocumentsTable = &schema.Table{
		Name:       "documents",
		Columns:    DocumentsColumns,
		PrimaryKey: []*schema.Column{DocumentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "documents_tenants_tenant",
				Columns:    []*schema.Column{DocumentsColumns[11]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "documents_carrier_brands_carrier_brand",
				Columns:    []*schema.Column{DocumentsColumns[12]},
				RefColumns: []*schema.Column{CarrierBrandsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "document_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DocumentsColumns[11]},
			},
		},
	}
	// DocumentFilesColumns holds the columns for the "document_files" table.
	DocumentFilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "storage_type", Type: field.TypeEnum, Enums: []string{"database", "bucket"}},
		{Name: "storage_path", Type: field.TypeString, Nullable: true},
		{Name: "storage_path_zpl", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "doc_type", Type: field.TypeEnum, Enums: []string{"carrier_label", "packing_slip"}},
		{Name: "data_pdf_base64", Type: field.TypeString, Nullable: true},
		{Name: "data_zpl_base64", Type: field.TypeString, Nullable: true},
		{Name: "colli_document_file", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "shipment_parcel_document_file", Type: field.TypeString, Unique: true, Nullable: true},
	}
	// DocumentFilesTable holds the schema information for the "document_files" table.
	DocumentFilesTable = &schema.Table{
		Name:       "document_files",
		Columns:    DocumentFilesColumns,
		PrimaryKey: []*schema.Column{DocumentFilesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "document_files_collis_document_file",
				Columns:    []*schema.Column{DocumentFilesColumns[8]},
				RefColumns: []*schema.Column{CollisColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "document_files_tenants_tenant",
				Columns:    []*schema.Column{DocumentFilesColumns[9]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "document_files_shipment_parcels_document_file",
				Columns:    []*schema.Column{DocumentFilesColumns[10]},
				RefColumns: []*schema.Column{ShipmentParcelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "documentfile_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{DocumentFilesColumns[9]},
			},
		},
	}
	// EmailTemplatesColumns holds the columns for the "email_templates" table.
	EmailTemplatesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Size: 64},
		{Name: "subject", Type: field.TypeString, Size: 255, Default: ""},
		{Name: "html_template", Type: field.TypeString, Default: ""},
		{Name: "merge_type", Type: field.TypeEnum, Enums: []string{"return_colli_label", "return_colli_qr", "return_colli_received", "return_colli_accepted", "order_confirmation", "order_picked"}, Default: "return_colli_label"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// EmailTemplatesTable holds the schema information for the "email_templates" table.
	EmailTemplatesTable = &schema.Table{
		Name:       "email_templates",
		Columns:    EmailTemplatesColumns,
		PrimaryKey: []*schema.Column{EmailTemplatesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "email_templates_tenants_tenant",
				Columns:    []*schema.Column{EmailTemplatesColumns[7]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "emailtemplate_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{EmailTemplatesColumns[7]},
			},
		},
	}
	// HypothesisTestsColumns holds the columns for the "hypothesis_tests" table.
	HypothesisTestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "active", Type: field.TypeBool, Default: false},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "hypothesis_test_connection", Type: field.TypeString},
	}
	// HypothesisTestsTable holds the schema information for the "hypothesis_tests" table.
	HypothesisTestsTable = &schema.Table{
		Name:       "hypothesis_tests",
		Columns:    HypothesisTestsColumns,
		PrimaryKey: []*schema.Column{HypothesisTestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hypothesis_tests_tenants_tenant",
				Columns:    []*schema.Column{HypothesisTestsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "hypothesis_tests_connections_connection",
				Columns:    []*schema.Column{HypothesisTestsColumns[4]},
				RefColumns: []*schema.Column{ConnectionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hypothesistest_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HypothesisTestsColumns[3]},
			},
		},
	}
	// HypothesisTestDeliveryOptionsColumns holds the columns for the "hypothesis_test_delivery_options" table.
	HypothesisTestDeliveryOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "randomize_within_group_sort", Type: field.TypeBool, Default: false},
		{Name: "by_interval_rotation", Type: field.TypeBool, Default: false},
		{Name: "rotation_interval_hours", Type: field.TypeInt, Default: 6},
		{Name: "by_order", Type: field.TypeBool, Default: false},
		{Name: "hypothesis_test_hypothesis_test_delivery_option", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// HypothesisTestDeliveryOptionsTable holds the schema information for the "hypothesis_test_delivery_options" table.
	HypothesisTestDeliveryOptionsTable = &schema.Table{
		Name:       "hypothesis_test_delivery_options",
		Columns:    HypothesisTestDeliveryOptionsColumns,
		PrimaryKey: []*schema.Column{HypothesisTestDeliveryOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hypothesis_test_delivery_options_hypothesis_tests_hypothesis_test_delivery_option",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionsColumns[5]},
				RefColumns: []*schema.Column{HypothesisTestsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "hypothesis_test_delivery_options_tenants_tenant",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionsColumns[6]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hypothesistestdeliveryoption_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HypothesisTestDeliveryOptionsColumns[6]},
			},
		},
	}
	// HypothesisTestDeliveryOptionLookupsColumns holds the columns for the "hypothesis_test_delivery_option_lookups" table.
	HypothesisTestDeliveryOptionLookupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "hypothesis_test_delivery_option_lookup_delivery_option", Type: field.TypeString},
		{Name: "hypothesis_test_delivery_option_request_hypothesis_test_delivery_option_lookup", Type: field.TypeString},
	}
	// HypothesisTestDeliveryOptionLookupsTable holds the schema information for the "hypothesis_test_delivery_option_lookups" table.
	HypothesisTestDeliveryOptionLookupsTable = &schema.Table{
		Name:       "hypothesis_test_delivery_option_lookups",
		Columns:    HypothesisTestDeliveryOptionLookupsColumns,
		PrimaryKey: []*schema.Column{HypothesisTestDeliveryOptionLookupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hypothesis_test_delivery_option_lookups_tenants_tenant",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionLookupsColumns[1]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "hypothesis_test_delivery_option_lookups_delivery_options_delivery_option",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionLookupsColumns[2]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "hypothesis_test_delivery_option_lookups_hypothesis_test_delivery_option_requests_hypothesis_test_delivery_option_lookup",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionLookupsColumns[3]},
				RefColumns: []*schema.Column{HypothesisTestDeliveryOptionRequestsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hypothesistestdeliveryoptionlookup_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HypothesisTestDeliveryOptionLookupsColumns[1]},
			},
			{
				Name:    "hypothesistestdeliveryoptionlookup_hypothesis_test_delivery_option_lookup_delivery_option_hypothesis_test_delivery_option_request_hypothesis_test_delivery_option_lookup",
				Unique:  true,
				Columns: []*schema.Column{HypothesisTestDeliveryOptionLookupsColumns[2], HypothesisTestDeliveryOptionLookupsColumns[3]},
			},
		},
	}
	// HypothesisTestDeliveryOptionRequestsColumns holds the columns for the "hypothesis_test_delivery_option_requests" table.
	HypothesisTestDeliveryOptionRequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "order_hash", Type: field.TypeString},
		{Name: "shipping_address_hash", Type: field.TypeString},
		{Name: "is_control_group", Type: field.TypeBool},
		{Name: "request_count", Type: field.TypeUint},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_requested_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "hypothesis_test_delivery_option_request_hypothesis_test_delivery_option", Type: field.TypeString},
	}
	// HypothesisTestDeliveryOptionRequestsTable holds the schema information for the "hypothesis_test_delivery_option_requests" table.
	HypothesisTestDeliveryOptionRequestsTable = &schema.Table{
		Name:       "hypothesis_test_delivery_option_requests",
		Columns:    HypothesisTestDeliveryOptionRequestsColumns,
		PrimaryKey: []*schema.Column{HypothesisTestDeliveryOptionRequestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hypothesis_test_delivery_option_requests_tenants_tenant",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionRequestsColumns[7]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "hypothesis_test_delivery_option_requests_hypothesis_test_delivery_options_hypothesis_test_delivery_option",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionRequestsColumns[8]},
				RefColumns: []*schema.Column{HypothesisTestDeliveryOptionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "hypothesistestdeliveryoptionrequest_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{HypothesisTestDeliveryOptionRequestsColumns[7]},
			},
		},
	}
	// InventoryItemsColumns holds the columns for the "inventory_items" table.
	InventoryItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "code", Type: field.TypeString, Nullable: true},
		{Name: "sku", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "inventory_item_country_of_origin", Type: field.TypeString, Nullable: true},
		{Name: "product_variant_inventory_item", Type: field.TypeString, Unique: true},
	}
	// InventoryItemsTable holds the schema information for the "inventory_items" table.
	InventoryItemsTable = &schema.Table{
		Name:       "inventory_items",
		Columns:    InventoryItemsColumns,
		PrimaryKey: []*schema.Column{InventoryItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "inventory_items_tenants_tenant",
				Columns:    []*schema.Column{InventoryItemsColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "inventory_items_countries_country_of_origin",
				Columns:    []*schema.Column{InventoryItemsColumns[5]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "inventory_items_product_variants_inventory_item",
				Columns:    []*schema.Column{InventoryItemsColumns[6]},
				RefColumns: []*schema.Column{ProductVariantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "inventoryitem_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{InventoryItemsColumns[4]},
			},
		},
	}
	// LanguagesColumns holds the columns for the "languages" table.
	LanguagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "internal_id", Type: field.TypeEnum, Enums: []string{"EN", "DA"}, Default: "EN"},
	}
	// LanguagesTable holds the schema information for the "languages" table.
	LanguagesTable = &schema.Table{
		Name:       "languages",
		Columns:    LanguagesColumns,
		PrimaryKey: []*schema.Column{LanguagesColumns[0]},
	}
	// LocationsColumns holds the columns for the "locations" table.
	LocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "location_address", Type: field.TypeString},
	}
	// LocationsTable holds the schema information for the "locations" table.
	LocationsTable = &schema.Table{
		Name:       "locations",
		Columns:    LocationsColumns,
		PrimaryKey: []*schema.Column{LocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "locations_tenants_tenant",
				Columns:    []*schema.Column{LocationsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "locations_addresses_address",
				Columns:    []*schema.Column{LocationsColumns[3]},
				RefColumns: []*schema.Column{AddressesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "location_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{LocationsColumns[2]},
			},
			{
				Name:    "location_name_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{LocationsColumns[1], LocationsColumns[2]},
			},
		},
	}
	// LocationTagsColumns holds the columns for the "location_tags" table.
	LocationTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "internal_id", Type: field.TypeString, Unique: true},
	}
	// LocationTagsTable holds the schema information for the "location_tags" table.
	LocationTagsTable = &schema.Table{
		Name:       "location_tags",
		Columns:    LocationTagsColumns,
		PrimaryKey: []*schema.Column{LocationTagsColumns[0]},
	}
	// NotificationsColumns holds the columns for the "notifications" table.
	NotificationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "active", Type: field.TypeBool, Default: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "notification_connection", Type: field.TypeString},
		{Name: "notification_email_template", Type: field.TypeString},
	}
	// NotificationsTable holds the schema information for the "notifications" table.
	NotificationsTable = &schema.Table{
		Name:       "notifications",
		Columns:    NotificationsColumns,
		PrimaryKey: []*schema.Column{NotificationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notifications_tenants_tenant",
				Columns:    []*schema.Column{NotificationsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "notifications_connections_connection",
				Columns:    []*schema.Column{NotificationsColumns[4]},
				RefColumns: []*schema.Column{ConnectionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "notifications_email_templates_email_template",
				Columns:    []*schema.Column{NotificationsColumns[5]},
				RefColumns: []*schema.Column{EmailTemplatesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "notification_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{NotificationsColumns[3]},
			},
		},
	}
	// OtkRequestsColumns holds the columns for the "otk_requests" table.
	OtkRequestsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "otk", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "user_otk_requests", Type: field.TypeString, Nullable: true},
	}
	// OtkRequestsTable holds the schema information for the "otk_requests" table.
	OtkRequestsTable = &schema.Table{
		Name:       "otk_requests",
		Columns:    OtkRequestsColumns,
		PrimaryKey: []*schema.Column{OtkRequestsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "otk_requests_tenants_tenant",
				Columns:    []*schema.Column{OtkRequestsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "otk_requests_users_otk_requests",
				Columns:    []*schema.Column{OtkRequestsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "otkrequests_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{OtkRequestsColumns[2]},
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "order_public_id", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "comment_internal", Type: field.TypeString, Nullable: true},
		{Name: "comment_external", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "email_sync_confirmation_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Pending", "Partially_dispatched", "Dispatched", "Cancelled"}},
		{Name: "note_attributes", Type: field.TypeJSON, Nullable: true},
		{Name: "connection_orders", Type: field.TypeString},
		{Name: "consolidation_orders", Type: field.TypeString, Nullable: true},
		{Name: "hypothesis_test_delivery_option_request_order", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "pallet_orders", Type: field.TypeString, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_connections_orders",
				Columns:    []*schema.Column{OrdersColumns[9]},
				RefColumns: []*schema.Column{ConnectionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "orders_consolidations_orders",
				Columns:    []*schema.Column{OrdersColumns[10]},
				RefColumns: []*schema.Column{ConsolidationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "orders_hypothesis_test_delivery_option_requests_order",
				Columns:    []*schema.Column{OrdersColumns[11]},
				RefColumns: []*schema.Column{HypothesisTestDeliveryOptionRequestsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "orders_tenants_tenant",
				Columns:    []*schema.Column{OrdersColumns[12]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "orders_pallets_orders",
				Columns:    []*schema.Column{OrdersColumns[13]},
				RefColumns: []*schema.Column{PalletsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "order_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{OrdersColumns[12]},
			},
			{
				Name:    "order_order_public_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{OrdersColumns[1], OrdersColumns[12]},
			},
			{
				Name:    "order_external_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{OrdersColumns[2], OrdersColumns[12]},
			},
			{
				Name:    "order_created_at",
				Unique:  false,
				Columns: []*schema.Column{OrdersColumns[5]},
			},
		},
	}
	// OrderHistoriesColumns holds the columns for the "order_histories" table.
	OrderHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"create", "update", "delete", "notify"}},
		{Name: "change_history_order_history", Type: field.TypeString},
		{Name: "order_order_history", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// OrderHistoriesTable holds the schema information for the "order_histories" table.
	OrderHistoriesTable = &schema.Table{
		Name:       "order_histories",
		Columns:    OrderHistoriesColumns,
		PrimaryKey: []*schema.Column{OrderHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_histories_change_histories_order_history",
				Columns:    []*schema.Column{OrderHistoriesColumns[3]},
				RefColumns: []*schema.Column{ChangeHistoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "order_histories_orders_order_history",
				Columns:    []*schema.Column{OrderHistoriesColumns[4]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "order_histories_tenants_tenant",
				Columns:    []*schema.Column{OrderHistoriesColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderhistory_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{OrderHistoriesColumns[5]},
			},
		},
	}
	// OrderLinesColumns holds the columns for the "order_lines" table.
	OrderLinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "unit_price", Type: field.TypeFloat64},
		{Name: "discount_allocation_amount", Type: field.TypeFloat64},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "units", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "colli_id", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "product_variant_id", Type: field.TypeString},
		{Name: "order_line_currency", Type: field.TypeString},
	}
	// OrderLinesTable holds the schema information for the "order_lines" table.
	OrderLinesTable = &schema.Table{
		Name:       "order_lines",
		Columns:    OrderLinesColumns,
		PrimaryKey: []*schema.Column{OrderLinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_lines_collis_order_lines",
				Columns:    []*schema.Column{OrderLinesColumns[7]},
				RefColumns: []*schema.Column{CollisColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "order_lines_tenants_tenant",
				Columns:    []*schema.Column{OrderLinesColumns[8]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "order_lines_product_variants_product_variant",
				Columns:    []*schema.Column{OrderLinesColumns[9]},
				RefColumns: []*schema.Column{ProductVariantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "order_lines_currencies_currency",
				Columns:    []*schema.Column{OrderLinesColumns[10]},
				RefColumns: []*schema.Column{CurrenciesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "orderline_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{OrderLinesColumns[8]},
			},
		},
	}
	// OrderSendersColumns holds the columns for the "order_senders" table.
	OrderSendersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "uniqueness_id", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "first_name", Type: field.TypeString},
		{Name: "last_name", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "phone_number", Type: field.TypeString},
		{Name: "vat_number", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// OrderSendersTable holds the schema information for the "order_senders" table.
	OrderSendersTable = &schema.Table{
		Name:       "order_senders",
		Columns:    OrderSendersColumns,
		PrimaryKey: []*schema.Column{OrderSendersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_senders_tenants_tenant",
				Columns:    []*schema.Column{OrderSendersColumns[7]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "ordersender_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{OrderSendersColumns[7]},
			},
		},
	}
	// PackagingsColumns holds the columns for the "packagings" table.
	PackagingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "archived_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "height_cm", Type: field.TypeInt},
		{Name: "width_cm", Type: field.TypeInt},
		{Name: "length_cm", Type: field.TypeInt},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "packaging_carrier_brand", Type: field.TypeString, Nullable: true},
	}
	// PackagingsTable holds the schema information for the "packagings" table.
	PackagingsTable = &schema.Table{
		Name:       "packagings",
		Columns:    PackagingsColumns,
		PrimaryKey: []*schema.Column{PackagingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "packagings_tenants_tenant",
				Columns:    []*schema.Column{PackagingsColumns[6]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "packagings_carrier_brands_carrier_brand",
				Columns:    []*schema.Column{PackagingsColumns[7]},
				RefColumns: []*schema.Column{CarrierBrandsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "packaging_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{PackagingsColumns[6]},
			},
		},
	}
	// PackagingDfsColumns holds the columns for the "packaging_dfs" table.
	PackagingDfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "api_type", Type: field.TypeEnum, Enums: []string{"PKK", "PL1", "PL2", "PL4", "K10", "K20", "C10", "PL7", "CLL", "PLL"}},
		{Name: "max_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "min_weight", Type: field.TypeFloat64, Nullable: true},
		{Name: "stackable", Type: field.TypeBool, Default: false},
		{Name: "packaging_packaging_df", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// PackagingDfsTable holds the schema information for the "packaging_dfs" table.
	PackagingDfsTable = &schema.Table{
		Name:       "packaging_dfs",
		Columns:    PackagingDfsColumns,
		PrimaryKey: []*schema.Column{PackagingDfsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "packaging_dfs_packagings_packaging_df",
				Columns:    []*schema.Column{PackagingDfsColumns[5]},
				RefColumns: []*schema.Column{PackagingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "packaging_dfs_tenants_tenant",
				Columns:    []*schema.Column{PackagingDfsColumns[6]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "packagingdf_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{PackagingDfsColumns[6]},
			},
		},
	}
	// PackagingUspSsColumns holds the columns for the "packaging_usp_ss" table.
	PackagingUspSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "packaging_packaging_usps", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "packaging_usps_packaging_usps_rate_indicator", Type: field.TypeString},
		{Name: "packaging_usps_packaging_usps_processing_category", Type: field.TypeString},
	}
	// PackagingUspSsTable holds the schema information for the "packaging_usp_ss" table.
	PackagingUspSsTable = &schema.Table{
		Name:       "packaging_usp_ss",
		Columns:    PackagingUspSsColumns,
		PrimaryKey: []*schema.Column{PackagingUspSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "packaging_usp_ss_packagings_packaging_usps",
				Columns:    []*schema.Column{PackagingUspSsColumns[1]},
				RefColumns: []*schema.Column{PackagingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "packaging_usp_ss_tenants_tenant",
				Columns:    []*schema.Column{PackagingUspSsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "packaging_usp_ss_packaging_usps_rate_indicators_packaging_usps_rate_indicator",
				Columns:    []*schema.Column{PackagingUspSsColumns[3]},
				RefColumns: []*schema.Column{PackagingUSPSRateIndicatorsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "packaging_usp_ss_packaging_usps_processing_categories_packaging_usps_processing_category",
				Columns:    []*schema.Column{PackagingUspSsColumns[4]},
				RefColumns: []*schema.Column{PackagingUSPSProcessingCategoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "packagingusps_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{PackagingUspSsColumns[2]},
			},
		},
	}
	// PackagingUSPSProcessingCategoriesColumns holds the columns for the "packaging_usps_processing_categories" table.
	PackagingUSPSProcessingCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "processing_category", Type: field.TypeEnum, Enums: []string{"LETTERS", "FLATS", "MACHINABLE", "IRREGULAR", "NON_MACHINABLE"}},
	}
	// PackagingUSPSProcessingCategoriesTable holds the schema information for the "packaging_usps_processing_categories" table.
	PackagingUSPSProcessingCategoriesTable = &schema.Table{
		Name:       "packaging_usps_processing_categories",
		Columns:    PackagingUSPSProcessingCategoriesColumns,
		PrimaryKey: []*schema.Column{PackagingUSPSProcessingCategoriesColumns[0]},
	}
	// PackagingUSPSRateIndicatorsColumns holds the columns for the "packaging_usps_rate_indicators" table.
	PackagingUSPSRateIndicatorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "code", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
	}
	// PackagingUSPSRateIndicatorsTable holds the schema information for the "packaging_usps_rate_indicators" table.
	PackagingUSPSRateIndicatorsTable = &schema.Table{
		Name:       "packaging_usps_rate_indicators",
		Columns:    PackagingUSPSRateIndicatorsColumns,
		PrimaryKey: []*schema.Column{PackagingUSPSRateIndicatorsColumns[0]},
	}
	// PalletsColumns holds the columns for the "pallets" table.
	PalletsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "public_id", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "consolidation_pallets", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "pallet_packaging", Type: field.TypeString, Nullable: true},
	}
	// PalletsTable holds the schema information for the "pallets" table.
	PalletsTable = &schema.Table{
		Name:       "pallets",
		Columns:    PalletsColumns,
		PrimaryKey: []*schema.Column{PalletsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "pallets_consolidations_pallets",
				Columns:    []*schema.Column{PalletsColumns[3]},
				RefColumns: []*schema.Column{ConsolidationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "pallets_tenants_tenant",
				Columns:    []*schema.Column{PalletsColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "pallets_packagings_packaging",
				Columns:    []*schema.Column{PalletsColumns[5]},
				RefColumns: []*schema.Column{PackagingsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "pallet_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{PalletsColumns[4]},
			},
		},
	}
	// ParcelShopsColumns holds the columns for the "parcel_shops" table.
	ParcelShopsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "last_updated", Type: field.TypeTime},
		{Name: "parcel_shop_carrier_brand", Type: field.TypeString},
	}
	// ParcelShopsTable holds the schema information for the "parcel_shops" table.
	ParcelShopsTable = &schema.Table{
		Name:       "parcel_shops",
		Columns:    ParcelShopsColumns,
		PrimaryKey: []*schema.Column{ParcelShopsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "parcel_shops_carrier_brands_carrier_brand",
				Columns:    []*schema.Column{ParcelShopsColumns[3]},
				RefColumns: []*schema.Column{CarrierBrandsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ParcelShopBringsColumns holds the columns for the "parcel_shop_brings" table.
	ParcelShopBringsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "point_type", Type: field.TypeEnum, Enums: []string{"one", "four", "nineteen", "twenty_one", "thirty_two", "thirty_four", "thirty_seven", "thirty_eight", "thirty_nine", "eighty_five", "eighty_six", "SmartPOST", "Posti", "Noutopiste", "LOCKER", "Unknown"}},
		{Name: "bring_id", Type: field.TypeString, Unique: true},
		{Name: "parcel_shop_parcel_shop_bring", Type: field.TypeString, Unique: true},
	}
	// ParcelShopBringsTable holds the schema information for the "parcel_shop_brings" table.
	ParcelShopBringsTable = &schema.Table{
		Name:       "parcel_shop_brings",
		Columns:    ParcelShopBringsColumns,
		PrimaryKey: []*schema.Column{ParcelShopBringsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "parcel_shop_brings_parcel_shops_parcel_shop_bring",
				Columns:    []*schema.Column{ParcelShopBringsColumns[3]},
				RefColumns: []*schema.Column{ParcelShopsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ParcelShopDaOsColumns holds the columns for the "parcel_shop_da_os" table.
	ParcelShopDaOsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "shop_id", Type: field.TypeString},
		{Name: "parcel_shop_parcel_shop_dao", Type: field.TypeString, Unique: true},
	}
	// ParcelShopDaOsTable holds the schema information for the "parcel_shop_da_os" table.
	ParcelShopDaOsTable = &schema.Table{
		Name:       "parcel_shop_da_os",
		Columns:    ParcelShopDaOsColumns,
		PrimaryKey: []*schema.Column{ParcelShopDaOsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "parcel_shop_da_os_parcel_shops_parcel_shop_dao",
				Columns:    []*schema.Column{ParcelShopDaOsColumns[2]},
				RefColumns: []*schema.Column{ParcelShopsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ParcelShopGlSsColumns holds the columns for the "parcel_shop_gl_ss" table.
	ParcelShopGlSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "gls_parcel_shop_id", Type: field.TypeString, Unique: true},
		{Name: "partner_id", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeString, Nullable: true},
		{Name: "parcel_shop_parcel_shop_gls", Type: field.TypeString, Unique: true},
	}
	// ParcelShopGlSsTable holds the schema information for the "parcel_shop_gl_ss" table.
	ParcelShopGlSsTable = &schema.Table{
		Name:       "parcel_shop_gl_ss",
		Columns:    ParcelShopGlSsColumns,
		PrimaryKey: []*schema.Column{ParcelShopGlSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "parcel_shop_gl_ss_parcel_shops_parcel_shop_gls",
				Columns:    []*schema.Column{ParcelShopGlSsColumns[4]},
				RefColumns: []*schema.Column{ParcelShopsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ParcelShopPostNordsColumns holds the columns for the "parcel_shop_post_nords" table.
	ParcelShopPostNordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "service_point_id", Type: field.TypeString},
		{Name: "pudoid", Type: field.TypeString, Unique: true},
		{Name: "type_id", Type: field.TypeString},
		{Name: "parcel_shop_parcel_shop_post_nord", Type: field.TypeString, Unique: true},
	}
	// ParcelShopPostNordsTable holds the schema information for the "parcel_shop_post_nords" table.
	ParcelShopPostNordsTable = &schema.Table{
		Name:       "parcel_shop_post_nords",
		Columns:    ParcelShopPostNordsColumns,
		PrimaryKey: []*schema.Column{ParcelShopPostNordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "parcel_shop_post_nords_parcel_shops_parcel_shop_post_nord",
				Columns:    []*schema.Column{ParcelShopPostNordsColumns[4]},
				RefColumns: []*schema.Column{ParcelShopsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// PlansColumns holds the columns for the "plans" table.
	PlansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "label", Type: field.TypeString, Unique: true},
		{Name: "rank", Type: field.TypeInt},
		{Name: "price_dkk", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
	}
	// PlansTable holds the schema information for the "plans" table.
	PlansTable = &schema.Table{
		Name:       "plans",
		Columns:    PlansColumns,
		PrimaryKey: []*schema.Column{PlansColumns[0]},
	}
	// PlanHistoriesColumns holds the columns for the "plan_histories" table.
	PlanHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "change_history_plan_history", Type: field.TypeString},
		{Name: "plan_plan_history_plan", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "user_plan_history_user", Type: field.TypeString},
	}
	// PlanHistoriesTable holds the schema information for the "plan_histories" table.
	PlanHistoriesTable = &schema.Table{
		Name:       "plan_histories",
		Columns:    PlanHistoriesColumns,
		PrimaryKey: []*schema.Column{PlanHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "plan_histories_change_histories_plan_history",
				Columns:    []*schema.Column{PlanHistoriesColumns[2]},
				RefColumns: []*schema.Column{ChangeHistoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "plan_histories_plans_plan_history_plan",
				Columns:    []*schema.Column{PlanHistoriesColumns[3]},
				RefColumns: []*schema.Column{PlansColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "plan_histories_tenants_tenant",
				Columns:    []*schema.Column{PlanHistoriesColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "plan_histories_users_plan_history_user",
				Columns:    []*schema.Column{PlanHistoriesColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "planhistory_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{PlanHistoriesColumns[4]},
			},
		},
	}
	// PrintJobsColumns holds the columns for the "print_jobs" table.
	PrintJobsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "at_printer", "success", "canceled"}},
		{Name: "file_extension", Type: field.TypeEnum, Enums: []string{"pdf", "zpl", "txt", "png"}},
		{Name: "document_type", Type: field.TypeEnum, Enums: []string{"parcel_label", "unknown", "packing_list"}},
		{Name: "printer_messages", Type: field.TypeJSON, Nullable: true},
		{Name: "base64_print_data", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "print_job_printer", Type: field.TypeString},
		{Name: "print_job_colli", Type: field.TypeString, Nullable: true},
		{Name: "print_job_shipment_parcel", Type: field.TypeString, Nullable: true},
	}
	// PrintJobsTable holds the schema information for the "print_jobs" table.
	PrintJobsTable = &schema.Table{
		Name:       "print_jobs",
		Columns:    PrintJobsColumns,
		PrimaryKey: []*schema.Column{PrintJobsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "print_jobs_tenants_tenant",
				Columns:    []*schema.Column{PrintJobsColumns[7]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "print_jobs_printers_printer",
				Columns:    []*schema.Column{PrintJobsColumns[8]},
				RefColumns: []*schema.Column{PrintersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "print_jobs_collis_colli",
				Columns:    []*schema.Column{PrintJobsColumns[9]},
				RefColumns: []*schema.Column{CollisColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "print_jobs_shipment_parcels_shipment_parcel",
				Columns:    []*schema.Column{PrintJobsColumns[10]},
				RefColumns: []*schema.Column{ShipmentParcelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "printjob_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{PrintJobsColumns[7]},
			},
		},
	}
	// PrintersColumns holds the columns for the "printers" table.
	PrintersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "device_id", Type: field.TypeString, Unique: true},
		{Name: "name", Type: field.TypeString},
		{Name: "label_zpl", Type: field.TypeBool, Default: false},
		{Name: "label_pdf", Type: field.TypeBool, Default: false},
		{Name: "label_png", Type: field.TypeBool, Default: false},
		{Name: "document", Type: field.TypeBool, Default: false},
		{Name: "rotate_180", Type: field.TypeBool, Default: false},
		{Name: "use_shell", Type: field.TypeBool, Default: false},
		{Name: "print_size", Type: field.TypeEnum, Enums: []string{"A4", "cm_100_150", "cm_100_192"}, Default: "A4"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_ping", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "workstation_printer", Type: field.TypeString},
	}
	// PrintersTable holds the schema information for the "printers" table.
	PrintersTable = &schema.Table{
		Name:       "printers",
		Columns:    PrintersColumns,
		PrimaryKey: []*schema.Column{PrintersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "printers_tenants_tenant",
				Columns:    []*schema.Column{PrintersColumns[12]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "printers_workstations_printer",
				Columns:    []*schema.Column{PrintersColumns[13]},
				RefColumns: []*schema.Column{WorkstationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "printer_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{PrintersColumns[12]},
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "body_html", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"active", "archived", "draft"}, Default: "active"},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_tenants_tenant",
				Columns:    []*schema.Column{ProductsColumns[7]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "product_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProductsColumns[7]},
			},
			{
				Name:    "product_external_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{ProductsColumns[1], ProductsColumns[7]},
			},
		},
	}
	// ProductImagesColumns holds the columns for the "product_images" table.
	ProductImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "url", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "product_image_product", Type: field.TypeString},
	}
	// ProductImagesTable holds the schema information for the "product_images" table.
	ProductImagesTable = &schema.Table{
		Name:       "product_images",
		Columns:    ProductImagesColumns,
		PrimaryKey: []*schema.Column{ProductImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_images_tenants_tenant",
				Columns:    []*schema.Column{ProductImagesColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "product_images_products_product",
				Columns:    []*schema.Column{ProductImagesColumns[4]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "productimage_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProductImagesColumns[3]},
			},
			{
				Name:    "productimage_external_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{ProductImagesColumns[1], ProductImagesColumns[3]},
			},
		},
	}
	// ProductTagsColumns holds the columns for the "product_tags" table.
	ProductTagsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ProductTagsTable holds the schema information for the "product_tags" table.
	ProductTagsTable = &schema.Table{
		Name:       "product_tags",
		Columns:    ProductTagsColumns,
		PrimaryKey: []*schema.Column{ProductTagsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_tags_tenants_tenant",
				Columns:    []*schema.Column{ProductTagsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "producttag_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProductTagsColumns[3]},
			},
			{
				Name:    "producttag_name_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{ProductTagsColumns[1], ProductTagsColumns[3]},
			},
		},
	}
	// ProductVariantsColumns holds the columns for the "product_variants" table.
	ProductVariantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "archived", Type: field.TypeBool, Default: false},
		{Name: "external_id", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "ean_number", Type: field.TypeString, Nullable: true},
		{Name: "weight_g", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "dimension_length", Type: field.TypeInt, Nullable: true},
		{Name: "dimension_width", Type: field.TypeInt, Nullable: true},
		{Name: "dimension_height", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product_product_variant", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ProductVariantsTable holds the schema information for the "product_variants" table.
	ProductVariantsTable = &schema.Table{
		Name:       "product_variants",
		Columns:    ProductVariantsColumns,
		PrimaryKey: []*schema.Column{ProductVariantsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_variants_products_product_variant",
				Columns:    []*schema.Column{ProductVariantsColumns[11]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "product_variants_tenants_tenant",
				Columns:    []*schema.Column{ProductVariantsColumns[12]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "productvariant_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ProductVariantsColumns[12]},
			},
			{
				Name:    "productvariant_external_id_tenant_id",
				Unique:  true,
				Columns: []*schema.Column{ProductVariantsColumns[2], ProductVariantsColumns[12]},
			},
		},
	}
	// ReturnCollisColumns holds the columns for the "return_collis" table.
	ReturnCollisColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "expected_at", Type: field.TypeTime, Nullable: true},
		{Name: "label_pdf", Type: field.TypeString, Nullable: true},
		{Name: "label_png", Type: field.TypeString, Nullable: true},
		{Name: "qr_code_png", Type: field.TypeString, Nullable: true},
		{Name: "comment", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Opened", "Pending", "Inbound", "Received", "Accepted", "Declined", "Deleted"}, Default: "Opened"},
		{Name: "email_received", Type: field.TypeTime, Nullable: true},
		{Name: "email_accepted", Type: field.TypeTime, Nullable: true},
		{Name: "email_confirmation_label", Type: field.TypeTime, Nullable: true},
		{Name: "email_confirmation_qr_code", Type: field.TypeTime, Nullable: true},
		{Name: "order_return_colli", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "return_colli_recipient", Type: field.TypeString},
		{Name: "return_colli_sender", Type: field.TypeString},
		{Name: "return_colli_delivery_option", Type: field.TypeString, Nullable: true},
		{Name: "return_colli_return_portal", Type: field.TypeString},
		{Name: "return_colli_packaging", Type: field.TypeString, Nullable: true},
	}
	// ReturnCollisTable holds the schema information for the "return_collis" table.
	ReturnCollisTable = &schema.Table{
		Name:       "return_collis",
		Columns:    ReturnCollisColumns,
		PrimaryKey: []*schema.Column{ReturnCollisColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "return_collis_orders_return_colli",
				Columns:    []*schema.Column{ReturnCollisColumns[12]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_collis_tenants_tenant",
				Columns:    []*schema.Column{ReturnCollisColumns[13]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_collis_addresses_recipient",
				Columns:    []*schema.Column{ReturnCollisColumns[14]},
				RefColumns: []*schema.Column{AddressesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_collis_addresses_sender",
				Columns:    []*schema.Column{ReturnCollisColumns[15]},
				RefColumns: []*schema.Column{AddressesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_collis_delivery_options_delivery_option",
				Columns:    []*schema.Column{ReturnCollisColumns[16]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "return_collis_return_portals_return_portal",
				Columns:    []*schema.Column{ReturnCollisColumns[17]},
				RefColumns: []*schema.Column{ReturnPortalsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_collis_packagings_packaging",
				Columns:    []*schema.Column{ReturnCollisColumns[18]},
				RefColumns: []*schema.Column{PackagingsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "returncolli_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ReturnCollisColumns[13]},
			},
		},
	}
	// ReturnColliHistoriesColumns holds the columns for the "return_colli_histories" table.
	ReturnColliHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"create", "update", "delete", "notify"}},
		{Name: "change_history_return_colli_history", Type: field.TypeString},
		{Name: "return_colli_return_colli_history", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ReturnColliHistoriesTable holds the schema information for the "return_colli_histories" table.
	ReturnColliHistoriesTable = &schema.Table{
		Name:       "return_colli_histories",
		Columns:    ReturnColliHistoriesColumns,
		PrimaryKey: []*schema.Column{ReturnColliHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "return_colli_histories_change_histories_return_colli_history",
				Columns:    []*schema.Column{ReturnColliHistoriesColumns[3]},
				RefColumns: []*schema.Column{ChangeHistoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_colli_histories_return_collis_return_colli_history",
				Columns:    []*schema.Column{ReturnColliHistoriesColumns[4]},
				RefColumns: []*schema.Column{ReturnCollisColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_colli_histories_tenants_tenant",
				Columns:    []*schema.Column{ReturnColliHistoriesColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "returncollihistory_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ReturnColliHistoriesColumns[5]},
			},
		},
	}
	// ReturnOrderLinesColumns holds the columns for the "return_order_lines" table.
	ReturnOrderLinesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "units", Type: field.TypeInt},
		{Name: "return_colli_return_order_line", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "return_order_line_order_line", Type: field.TypeString},
		{Name: "return_order_line_return_portal_claim", Type: field.TypeString},
	}
	// ReturnOrderLinesTable holds the schema information for the "return_order_lines" table.
	ReturnOrderLinesTable = &schema.Table{
		Name:       "return_order_lines",
		Columns:    ReturnOrderLinesColumns,
		PrimaryKey: []*schema.Column{ReturnOrderLinesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "return_order_lines_return_collis_return_order_line",
				Columns:    []*schema.Column{ReturnOrderLinesColumns[2]},
				RefColumns: []*schema.Column{ReturnCollisColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_order_lines_tenants_tenant",
				Columns:    []*schema.Column{ReturnOrderLinesColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_order_lines_order_lines_order_line",
				Columns:    []*schema.Column{ReturnOrderLinesColumns[4]},
				RefColumns: []*schema.Column{OrderLinesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_order_lines_return_portal_claims_return_portal_claim",
				Columns:    []*schema.Column{ReturnOrderLinesColumns[5]},
				RefColumns: []*schema.Column{ReturnPortalClaimsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "returnorderline_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ReturnOrderLinesColumns[3]},
			},
		},
	}
	// ReturnPortalsColumns holds the columns for the "return_portals" table.
	ReturnPortalsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "return_open_hours", Type: field.TypeInt, Default: 720},
		{Name: "automatically_accept", Type: field.TypeBool, Default: false},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "return_portal_email_confirmation_label", Type: field.TypeString, Nullable: true},
		{Name: "return_portal_email_confirmation_qr_code", Type: field.TypeString, Nullable: true},
		{Name: "return_portal_email_received", Type: field.TypeString, Nullable: true},
		{Name: "return_portal_email_accepted", Type: field.TypeString, Nullable: true},
	}
	// ReturnPortalsTable holds the schema information for the "return_portals" table.
	ReturnPortalsTable = &schema.Table{
		Name:       "return_portals",
		Columns:    ReturnPortalsColumns,
		PrimaryKey: []*schema.Column{ReturnPortalsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "return_portals_tenants_tenant",
				Columns:    []*schema.Column{ReturnPortalsColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_portals_email_templates_email_confirmation_label",
				Columns:    []*schema.Column{ReturnPortalsColumns[5]},
				RefColumns: []*schema.Column{EmailTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "return_portals_email_templates_email_confirmation_qr_code",
				Columns:    []*schema.Column{ReturnPortalsColumns[6]},
				RefColumns: []*schema.Column{EmailTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "return_portals_email_templates_email_received",
				Columns:    []*schema.Column{ReturnPortalsColumns[7]},
				RefColumns: []*schema.Column{EmailTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "return_portals_email_templates_email_accepted",
				Columns:    []*schema.Column{ReturnPortalsColumns[8]},
				RefColumns: []*schema.Column{EmailTemplatesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "returnportal_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ReturnPortalsColumns[4]},
			},
		},
	}
	// ReturnPortalClaimsColumns holds the columns for the "return_portal_claims" table.
	ReturnPortalClaimsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "restockable", Type: field.TypeBool},
		{Name: "archived", Type: field.TypeBool},
		{Name: "return_portal_return_portal_claim", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "return_portal_claim_return_location", Type: field.TypeString, Nullable: true},
	}
	// ReturnPortalClaimsTable holds the schema information for the "return_portal_claims" table.
	ReturnPortalClaimsTable = &schema.Table{
		Name:       "return_portal_claims",
		Columns:    ReturnPortalClaimsColumns,
		PrimaryKey: []*schema.Column{ReturnPortalClaimsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "return_portal_claims_return_portals_return_portal_claim",
				Columns:    []*schema.Column{ReturnPortalClaimsColumns[5]},
				RefColumns: []*schema.Column{ReturnPortalsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_portal_claims_tenants_tenant",
				Columns:    []*schema.Column{ReturnPortalClaimsColumns[6]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "return_portal_claims_locations_return_location",
				Columns:    []*schema.Column{ReturnPortalClaimsColumns[7]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "returnportalclaim_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ReturnPortalClaimsColumns[6]},
			},
		},
	}
	// SeatGroupsColumns holds the columns for the "seat_groups" table.
	SeatGroupsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// SeatGroupsTable holds the schema information for the "seat_groups" table.
	SeatGroupsTable = &schema.Table{
		Name:       "seat_groups",
		Columns:    SeatGroupsColumns,
		PrimaryKey: []*schema.Column{SeatGroupsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seat_groups_tenants_tenant",
				Columns:    []*schema.Column{SeatGroupsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "seatgroup_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SeatGroupsColumns[3]},
			},
		},
	}
	// SeatGroupAccessRightsColumns holds the columns for the "seat_group_access_rights" table.
	SeatGroupAccessRightsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "level", Type: field.TypeEnum, Enums: []string{"none", "read", "write"}, Default: "none"},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "access_right_id", Type: field.TypeString},
		{Name: "seat_group_id", Type: field.TypeString},
	}
	// SeatGroupAccessRightsTable holds the schema information for the "seat_group_access_rights" table.
	SeatGroupAccessRightsTable = &schema.Table{
		Name:       "seat_group_access_rights",
		Columns:    SeatGroupAccessRightsColumns,
		PrimaryKey: []*schema.Column{SeatGroupAccessRightsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "seat_group_access_rights_tenants_tenant",
				Columns:    []*schema.Column{SeatGroupAccessRightsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "seat_group_access_rights_access_rights_access_right",
				Columns:    []*schema.Column{SeatGroupAccessRightsColumns[3]},
				RefColumns: []*schema.Column{AccessRightsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "seat_group_access_rights_seat_groups_seat_group",
				Columns:    []*schema.Column{SeatGroupAccessRightsColumns[4]},
				RefColumns: []*schema.Column{SeatGroupsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "seatgroupaccessright_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SeatGroupAccessRightsColumns[2]},
			},
			{
				Name:    "seatgroupaccessright_seat_group_id_access_right_id",
				Unique:  true,
				Columns: []*schema.Column{SeatGroupAccessRightsColumns[4], SeatGroupAccessRightsColumns[3]},
			},
		},
	}
	// ShipmentsColumns holds the columns for the "shipments" table.
	ShipmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "shipment_public_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"Pending", "Prebooked", "Booked", "Partially_dispatched", "Dispatched", "Deleted"}},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "shipment_carrier", Type: field.TypeString},
	}
	// ShipmentsTable holds the schema information for the "shipments" table.
	ShipmentsTable = &schema.Table{
		Name:       "shipments",
		Columns:    ShipmentsColumns,
		PrimaryKey: []*schema.Column{ShipmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipments_tenants_tenant",
				Columns:    []*schema.Column{ShipmentsColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipments_carriers_carrier",
				Columns:    []*schema.Column{ShipmentsColumns[5]},
				RefColumns: []*schema.Column{CarriersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipment_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentsColumns[4]},
			},
		},
	}
	// ShipmentBringsColumns holds the columns for the "shipment_brings" table.
	ShipmentBringsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "consignment_number", Type: field.TypeString},
		{Name: "shipment_shipment_bring", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentBringsTable holds the schema information for the "shipment_brings" table.
	ShipmentBringsTable = &schema.Table{
		Name:       "shipment_brings",
		Columns:    ShipmentBringsColumns,
		PrimaryKey: []*schema.Column{ShipmentBringsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_brings_shipments_shipment_bring",
				Columns:    []*schema.Column{ShipmentBringsColumns[2]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_brings_tenants_tenant",
				Columns:    []*schema.Column{ShipmentBringsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentbring_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentBringsColumns[3]},
			},
		},
	}
	// ShipmentDaOsColumns holds the columns for the "shipment_da_os" table.
	ShipmentDaOsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "barcode_id", Type: field.TypeString},
		{Name: "shipment_shipment_dao", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentDaOsTable holds the schema information for the "shipment_da_os" table.
	ShipmentDaOsTable = &schema.Table{
		Name:       "shipment_da_os",
		Columns:    ShipmentDaOsColumns,
		PrimaryKey: []*schema.Column{ShipmentDaOsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_da_os_shipments_shipment_dao",
				Columns:    []*schema.Column{ShipmentDaOsColumns[2]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_da_os_tenants_tenant",
				Columns:    []*schema.Column{ShipmentDaOsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentdao_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentDaOsColumns[3]},
			},
		},
	}
	// ShipmentDfsColumns holds the columns for the "shipment_dfs" table.
	ShipmentDfsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "shipment_shipment_df", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentDfsTable holds the schema information for the "shipment_dfs" table.
	ShipmentDfsTable = &schema.Table{
		Name:       "shipment_dfs",
		Columns:    ShipmentDfsColumns,
		PrimaryKey: []*schema.Column{ShipmentDfsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_dfs_shipments_shipment_df",
				Columns:    []*schema.Column{ShipmentDfsColumns[1]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_dfs_tenants_tenant",
				Columns:    []*schema.Column{ShipmentDfsColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentdf_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentDfsColumns[2]},
			},
		},
	}
	// ShipmentDsVsColumns holds the columns for the "shipment_ds_vs" table.
	ShipmentDsVsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "barcode_id", Type: field.TypeString},
		{Name: "shipment_shipment_dsv", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentDsVsTable holds the schema information for the "shipment_ds_vs" table.
	ShipmentDsVsTable = &schema.Table{
		Name:       "shipment_ds_vs",
		Columns:    ShipmentDsVsColumns,
		PrimaryKey: []*schema.Column{ShipmentDsVsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_ds_vs_shipments_shipment_dsv",
				Columns:    []*schema.Column{ShipmentDsVsColumns[2]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_ds_vs_tenants_tenant",
				Columns:    []*schema.Column{ShipmentDsVsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentdsv_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentDsVsColumns[3]},
			},
		},
	}
	// ShipmentEasyPostsColumns holds the columns for the "shipment_easy_posts" table.
	ShipmentEasyPostsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "tracking_number", Type: field.TypeString, Nullable: true},
		{Name: "ep_shipment_id", Type: field.TypeString, Nullable: true},
		{Name: "rate", Type: field.TypeFloat64, Nullable: true},
		{Name: "est_delivery_date", Type: field.TypeTime, Nullable: true},
		{Name: "shipment_shipment_easy_post", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentEasyPostsTable holds the schema information for the "shipment_easy_posts" table.
	ShipmentEasyPostsTable = &schema.Table{
		Name:       "shipment_easy_posts",
		Columns:    ShipmentEasyPostsColumns,
		PrimaryKey: []*schema.Column{ShipmentEasyPostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_easy_posts_shipments_shipment_easy_post",
				Columns:    []*schema.Column{ShipmentEasyPostsColumns[5]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_easy_posts_tenants_tenant",
				Columns:    []*schema.Column{ShipmentEasyPostsColumns[6]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmenteasypost_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentEasyPostsColumns[6]},
			},
		},
	}
	// ShipmentGlSsColumns holds the columns for the "shipment_gl_ss" table.
	ShipmentGlSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "consignment_id", Type: field.TypeString},
		{Name: "shipment_shipment_gls", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentGlSsTable holds the schema information for the "shipment_gl_ss" table.
	ShipmentGlSsTable = &schema.Table{
		Name:       "shipment_gl_ss",
		Columns:    ShipmentGlSsColumns,
		PrimaryKey: []*schema.Column{ShipmentGlSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_gl_ss_shipments_shipment_gls",
				Columns:    []*schema.Column{ShipmentGlSsColumns[2]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_gl_ss_tenants_tenant",
				Columns:    []*schema.Column{ShipmentGlSsColumns[3]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentgls_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentGlSsColumns[3]},
			},
		},
	}
	// ShipmentHistoriesColumns holds the columns for the "shipment_histories" table.
	ShipmentHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"create", "update", "delete"}},
		{Name: "change_history_shipment_history", Type: field.TypeString},
		{Name: "shipment_shipment_history", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentHistoriesTable holds the schema information for the "shipment_histories" table.
	ShipmentHistoriesTable = &schema.Table{
		Name:       "shipment_histories",
		Columns:    ShipmentHistoriesColumns,
		PrimaryKey: []*schema.Column{ShipmentHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_histories_change_histories_shipment_history",
				Columns:    []*schema.Column{ShipmentHistoriesColumns[2]},
				RefColumns: []*schema.Column{ChangeHistoriesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_histories_shipments_shipment_history",
				Columns:    []*schema.Column{ShipmentHistoriesColumns[3]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_histories_tenants_tenant",
				Columns:    []*schema.Column{ShipmentHistoriesColumns[4]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmenthistory_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentHistoriesColumns[4]},
			},
		},
	}
	// ShipmentPalletsColumns holds the columns for the "shipment_pallets" table.
	ShipmentPalletsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "barcode", Type: field.TypeString},
		{Name: "colli_number", Type: field.TypeString},
		{Name: "carrier_id", Type: field.TypeString},
		{Name: "label_pdf", Type: field.TypeString, Nullable: true},
		{Name: "label_zpl", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "printed"}, Default: "pending"},
		{Name: "pallet_shipment_pallet", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "shipment_shipment_pallet", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentPalletsTable holds the schema information for the "shipment_pallets" table.
	ShipmentPalletsTable = &schema.Table{
		Name:       "shipment_pallets",
		Columns:    ShipmentPalletsColumns,
		PrimaryKey: []*schema.Column{ShipmentPalletsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_pallets_pallets_shipment_pallet",
				Columns:    []*schema.Column{ShipmentPalletsColumns[7]},
				RefColumns: []*schema.Column{PalletsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "shipment_pallets_shipments_shipment_pallet",
				Columns:    []*schema.Column{ShipmentPalletsColumns[8]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_pallets_tenants_tenant",
				Columns:    []*schema.Column{ShipmentPalletsColumns[9]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentpallet_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentPalletsColumns[9]},
			},
		},
	}
	// ShipmentParcelsColumns holds the columns for the "shipment_parcels" table.
	ShipmentParcelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "item_id", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "printed", "in_transit", "out_for_delivery", "delivered", "awaiting_cc_pickup", "picked_up"}, Default: "pending"},
		{Name: "cc_pickup_signature_urls", Type: field.TypeJSON, Nullable: true},
		{Name: "expected_at", Type: field.TypeTime, Nullable: true},
		{Name: "fulfillment_synced_at", Type: field.TypeTime, Nullable: true},
		{Name: "cancel_synced_at", Type: field.TypeTime, Nullable: true},
		{Name: "colli_shipment_parcel", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "shipment_shipment_parcel", Type: field.TypeString},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "shipment_parcel_packaging", Type: field.TypeString, Nullable: true},
	}
	// ShipmentParcelsTable holds the schema information for the "shipment_parcels" table.
	ShipmentParcelsTable = &schema.Table{
		Name:       "shipment_parcels",
		Columns:    ShipmentParcelsColumns,
		PrimaryKey: []*schema.Column{ShipmentParcelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_parcels_collis_shipment_parcel",
				Columns:    []*schema.Column{ShipmentParcelsColumns[7]},
				RefColumns: []*schema.Column{CollisColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "shipment_parcels_shipments_shipment_parcel",
				Columns:    []*schema.Column{ShipmentParcelsColumns[8]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_parcels_tenants_tenant",
				Columns:    []*schema.Column{ShipmentParcelsColumns[9]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_parcels_packagings_packaging",
				Columns:    []*schema.Column{ShipmentParcelsColumns[10]},
				RefColumns: []*schema.Column{PackagingsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentparcel_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentParcelsColumns[9]},
			},
		},
	}
	// ShipmentPostNordsColumns holds the columns for the "shipment_post_nords" table.
	ShipmentPostNordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "booking_id", Type: field.TypeString},
		{Name: "item_id", Type: field.TypeString},
		{Name: "shipment_reference_no", Type: field.TypeString},
		{Name: "shipment_shipment_post_nord", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentPostNordsTable holds the schema information for the "shipment_post_nords" table.
	ShipmentPostNordsTable = &schema.Table{
		Name:       "shipment_post_nords",
		Columns:    ShipmentPostNordsColumns,
		PrimaryKey: []*schema.Column{ShipmentPostNordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_post_nords_shipments_shipment_post_nord",
				Columns:    []*schema.Column{ShipmentPostNordsColumns[4]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_post_nords_tenants_tenant",
				Columns:    []*schema.Column{ShipmentPostNordsColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentpostnord_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentPostNordsColumns[5]},
			},
		},
	}
	// ShipmentUspSsColumns holds the columns for the "shipment_usp_ss" table.
	ShipmentUspSsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "tracking_number", Type: field.TypeString, Nullable: true},
		{Name: "postage", Type: field.TypeFloat64, Nullable: true},
		{Name: "scheduled_delivery_date", Type: field.TypeTime, Nullable: true},
		{Name: "shipment_shipment_usps", Type: field.TypeString, Unique: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// ShipmentUspSsTable holds the schema information for the "shipment_usp_ss" table.
	ShipmentUspSsTable = &schema.Table{
		Name:       "shipment_usp_ss",
		Columns:    ShipmentUspSsColumns,
		PrimaryKey: []*schema.Column{ShipmentUspSsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_usp_ss_shipments_shipment_usps",
				Columns:    []*schema.Column{ShipmentUspSsColumns[4]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "shipment_usp_ss_tenants_tenant",
				Columns:    []*schema.Column{ShipmentUspSsColumns[5]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "shipmentusps_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{ShipmentUspSsColumns[5]},
			},
		},
	}
	// SignupOptionsColumns holds the columns for the "signup_options" table.
	SignupOptionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "better_delivery_options", Type: field.TypeBool},
		{Name: "improve_pick_pack", Type: field.TypeBool},
		{Name: "shipping_label", Type: field.TypeBool},
		{Name: "custom_docs", Type: field.TypeBool},
		{Name: "reduced_costs", Type: field.TypeBool},
		{Name: "easy_returns", Type: field.TypeBool},
		{Name: "click_collect", Type: field.TypeBool},
		{Name: "num_shipments", Type: field.TypeInt},
		{Name: "user_signup_options", Type: field.TypeString, Unique: true},
	}
	// SignupOptionsTable holds the schema information for the "signup_options" table.
	SignupOptionsTable = &schema.Table{
		Name:       "signup_options",
		Columns:    SignupOptionsColumns,
		PrimaryKey: []*schema.Column{SignupOptionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "signup_options_users_signup_options",
				Columns:    []*schema.Column{SignupOptionsColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SystemEventsColumns holds the columns for the "system_events" table.
	SystemEventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "event_type", Type: field.TypeEnum, Enums: []string{"background_tasks", "shopify_product_sync", "shopify_order_sync", "shopify_order_cancelled_sync", "background_product_mutate", "send_notifications", "sync_cancelled_shipments"}},
		{Name: "event_type_id", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"running", "fail", "success"}},
		{Name: "description", Type: field.TypeString},
		{Name: "data", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// SystemEventsTable holds the schema information for the "system_events" table.
	SystemEventsTable = &schema.Table{
		Name:       "system_events",
		Columns:    SystemEventsColumns,
		PrimaryKey: []*schema.Column{SystemEventsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "system_events_tenants_tenant",
				Columns:    []*schema.Column{SystemEventsColumns[8]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "systemevents_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{SystemEventsColumns[8]},
			},
			{
				Name:    "systemevents_updated_at",
				Unique:  false,
				Columns: []*schema.Column{SystemEventsColumns[6]},
			},
		},
	}
	// TenantsColumns holds the columns for the "tenants" table.
	TenantsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "vat_number", Type: field.TypeString, Nullable: true},
		{Name: "invoice_reference", Type: field.TypeString, Nullable: true},
		{Name: "plan_tenant", Type: field.TypeString},
		{Name: "tenant_company_address", Type: field.TypeString, Nullable: true},
		{Name: "tenant_default_language", Type: field.TypeString},
		{Name: "tenant_billing_contact", Type: field.TypeString, Nullable: true},
		{Name: "tenant_admin_contact", Type: field.TypeString, Nullable: true},
	}
	// TenantsTable holds the schema information for the "tenants" table.
	TenantsTable = &schema.Table{
		Name:       "tenants",
		Columns:    TenantsColumns,
		PrimaryKey: []*schema.Column{TenantsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tenants_plans_tenant",
				Columns:    []*schema.Column{TenantsColumns[4]},
				RefColumns: []*schema.Column{PlansColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "tenants_addresses_company_address",
				Columns:    []*schema.Column{TenantsColumns[5]},
				RefColumns: []*schema.Column{AddressesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tenants_languages_default_language",
				Columns:    []*schema.Column{TenantsColumns[6]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "tenants_contacts_billing_contact",
				Columns:    []*schema.Column{TenantsColumns[7]},
				RefColumns: []*schema.Column{ContactsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "tenants_contacts_admin_contact",
				Columns:    []*schema.Column{TenantsColumns[8]},
				RefColumns: []*schema.Column{ContactsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "surname", Type: field.TypeString, Nullable: true},
		{Name: "phone_number", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "hash", Type: field.TypeString},
		{Name: "is_account_owner", Type: field.TypeBool, Default: false},
		{Name: "is_global_admin", Type: field.TypeBool, Default: false},
		{Name: "marketing_consent", Type: field.TypeBool, Nullable: true, Default: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true},
		{Name: "archived_at", Type: field.TypeTime, Nullable: true},
		{Name: "pickup_day", Type: field.TypeEnum, Enums: []string{"Today", "Tomorrow", "In_2_Days", "In_3_Days", "In_4_Days", "In_5_Days"}, Default: "Today"},
		{Name: "pickup_day_last_changed", Type: field.TypeTime, Nullable: true},
		{Name: "seat_group_user", Type: field.TypeString, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "user_language", Type: field.TypeString, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "users_seat_groups_user",
				Columns:    []*schema.Column{UsersColumns[14]},
				RefColumns: []*schema.Column{SeatGroupsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "users_tenants_tenant",
				Columns:    []*schema.Column{UsersColumns[15]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "users_languages_language",
				Columns:    []*schema.Column{UsersColumns[16]},
				RefColumns: []*schema.Column{LanguagesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "user_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{UsersColumns[15]},
			},
		},
	}
	// UserSeatsColumns holds the columns for the "user_seats" table.
	UserSeatsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "surname", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "hash", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
	}
	// UserSeatsTable holds the schema information for the "user_seats" table.
	UserSeatsTable = &schema.Table{
		Name:       "user_seats",
		Columns:    UserSeatsColumns,
		PrimaryKey: []*schema.Column{UserSeatsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_seats_tenants_tenant",
				Columns:    []*schema.Column{UserSeatsColumns[7]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userseat_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{UserSeatsColumns[7]},
			},
		},
	}
	// WorkspaceRecentScansColumns holds the columns for the "workspace_recent_scans" table.
	WorkspaceRecentScansColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "workspace_recent_scan_shipment_parcel", Type: field.TypeString, Nullable: true},
		{Name: "workspace_recent_scan_user", Type: field.TypeString},
	}
	// WorkspaceRecentScansTable holds the schema information for the "workspace_recent_scans" table.
	WorkspaceRecentScansTable = &schema.Table{
		Name:       "workspace_recent_scans",
		Columns:    WorkspaceRecentScansColumns,
		PrimaryKey: []*schema.Column{WorkspaceRecentScansColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workspace_recent_scans_tenants_tenant",
				Columns:    []*schema.Column{WorkspaceRecentScansColumns[2]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workspace_recent_scans_shipment_parcels_shipment_parcel",
				Columns:    []*schema.Column{WorkspaceRecentScansColumns[3]},
				RefColumns: []*schema.Column{ShipmentParcelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "workspace_recent_scans_users_user",
				Columns:    []*schema.Column{WorkspaceRecentScansColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workspacerecentscan_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{WorkspaceRecentScansColumns[2]},
			},
		},
	}
	// WorkstationsColumns holds the columns for the "workstations" table.
	WorkstationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString},
		{Name: "archived_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "device_type", Type: field.TypeEnum, Enums: []string{"label_station", "app"}, Default: "label_station"},
		{Name: "registration_code", Type: field.TypeString},
		{Name: "workstation_id", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "last_ping", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "active", "offline", "disabled"}, Default: "pending"},
		{Name: "auto_print_receiver", Type: field.TypeBool, Default: false},
		{Name: "user_selected_workstation", Type: field.TypeString, Unique: true, Nullable: true},
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "workstation_user", Type: field.TypeString, Nullable: true},
	}
	// WorkstationsTable holds the schema information for the "workstations" table.
	WorkstationsTable = &schema.Table{
		Name:       "workstations",
		Columns:    WorkstationsColumns,
		PrimaryKey: []*schema.Column{WorkstationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "workstations_users_selected_workstation",
				Columns:    []*schema.Column{WorkstationsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "workstations_tenants_tenant",
				Columns:    []*schema.Column{WorkstationsColumns[11]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "workstations_users_user",
				Columns:    []*schema.Column{WorkstationsColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "workstation_tenant_id",
				Unique:  false,
				Columns: []*schema.Column{WorkstationsColumns[11]},
			},
		},
	}
	// CarrierAdditionalServiceGLSCountriesConsigneeColumns holds the columns for the "carrier_additional_service_gls_countries_consignee" table.
	CarrierAdditionalServiceGLSCountriesConsigneeColumns = []*schema.Column{
		{Name: "carrier_additional_service_gls_id", Type: field.TypeString},
		{Name: "country_id", Type: field.TypeString},
	}
	// CarrierAdditionalServiceGLSCountriesConsigneeTable holds the schema information for the "carrier_additional_service_gls_countries_consignee" table.
	CarrierAdditionalServiceGLSCountriesConsigneeTable = &schema.Table{
		Name:       "carrier_additional_service_gls_countries_consignee",
		Columns:    CarrierAdditionalServiceGLSCountriesConsigneeColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceGLSCountriesConsigneeColumns[0], CarrierAdditionalServiceGLSCountriesConsigneeColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_additional_service_gls_countries_consignee_carrier_additional_service_gls_id",
				Columns:    []*schema.Column{CarrierAdditionalServiceGLSCountriesConsigneeColumns[0]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceGlSsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "carrier_additional_service_gls_countries_consignee_country_id",
				Columns:    []*schema.Column{CarrierAdditionalServiceGLSCountriesConsigneeColumns[1]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CarrierAdditionalServiceGLSCountriesConsignorColumns holds the columns for the "carrier_additional_service_gls_countries_consignor" table.
	CarrierAdditionalServiceGLSCountriesConsignorColumns = []*schema.Column{
		{Name: "carrier_additional_service_gls_id", Type: field.TypeString},
		{Name: "country_id", Type: field.TypeString},
	}
	// CarrierAdditionalServiceGLSCountriesConsignorTable holds the schema information for the "carrier_additional_service_gls_countries_consignor" table.
	CarrierAdditionalServiceGLSCountriesConsignorTable = &schema.Table{
		Name:       "carrier_additional_service_gls_countries_consignor",
		Columns:    CarrierAdditionalServiceGLSCountriesConsignorColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServiceGLSCountriesConsignorColumns[0], CarrierAdditionalServiceGLSCountriesConsignorColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_additional_service_gls_countries_consignor_carrier_additional_service_gls_id",
				Columns:    []*schema.Column{CarrierAdditionalServiceGLSCountriesConsignorColumns[0]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceGlSsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "carrier_additional_service_gls_countries_consignor_country_id",
				Columns:    []*schema.Column{CarrierAdditionalServiceGLSCountriesConsignorColumns[1]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CarrierAdditionalServicePostNordCountriesConsigneeColumns holds the columns for the "carrier_additional_service_post_nord_countries_consignee" table.
	CarrierAdditionalServicePostNordCountriesConsigneeColumns = []*schema.Column{
		{Name: "carrier_additional_service_post_nord_id", Type: field.TypeString},
		{Name: "country_id", Type: field.TypeString},
	}
	// CarrierAdditionalServicePostNordCountriesConsigneeTable holds the schema information for the "carrier_additional_service_post_nord_countries_consignee" table.
	CarrierAdditionalServicePostNordCountriesConsigneeTable = &schema.Table{
		Name:       "carrier_additional_service_post_nord_countries_consignee",
		Columns:    CarrierAdditionalServicePostNordCountriesConsigneeColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServicePostNordCountriesConsigneeColumns[0], CarrierAdditionalServicePostNordCountriesConsigneeColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_additional_service_post_nord_countries_consignee_carrier_additional_service_post_nord_id",
				Columns:    []*schema.Column{CarrierAdditionalServicePostNordCountriesConsigneeColumns[0]},
				RefColumns: []*schema.Column{CarrierAdditionalServicePostNordsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "carrier_additional_service_post_nord_countries_consignee_country_id",
				Columns:    []*schema.Column{CarrierAdditionalServicePostNordCountriesConsigneeColumns[1]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CarrierAdditionalServicePostNordCountriesConsignorColumns holds the columns for the "carrier_additional_service_post_nord_countries_consignor" table.
	CarrierAdditionalServicePostNordCountriesConsignorColumns = []*schema.Column{
		{Name: "carrier_additional_service_post_nord_id", Type: field.TypeString},
		{Name: "country_id", Type: field.TypeString},
	}
	// CarrierAdditionalServicePostNordCountriesConsignorTable holds the schema information for the "carrier_additional_service_post_nord_countries_consignor" table.
	CarrierAdditionalServicePostNordCountriesConsignorTable = &schema.Table{
		Name:       "carrier_additional_service_post_nord_countries_consignor",
		Columns:    CarrierAdditionalServicePostNordCountriesConsignorColumns,
		PrimaryKey: []*schema.Column{CarrierAdditionalServicePostNordCountriesConsignorColumns[0], CarrierAdditionalServicePostNordCountriesConsignorColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_additional_service_post_nord_countries_consignor_carrier_additional_service_post_nord_id",
				Columns:    []*schema.Column{CarrierAdditionalServicePostNordCountriesConsignorColumns[0]},
				RefColumns: []*schema.Column{CarrierAdditionalServicePostNordsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "carrier_additional_service_post_nord_countries_consignor_country_id",
				Columns:    []*schema.Column{CarrierAdditionalServicePostNordCountriesConsignorColumns[1]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CarrierServiceDAOCarrierAdditionalServiceDAOColumns holds the columns for the "carrier_service_dao_carrier_additional_service_dao" table.
	CarrierServiceDAOCarrierAdditionalServiceDAOColumns = []*schema.Column{
		{Name: "carrier_service_dao_id", Type: field.TypeString},
		{Name: "carrier_additional_service_dao_id", Type: field.TypeString},
	}
	// CarrierServiceDAOCarrierAdditionalServiceDAOTable holds the schema information for the "carrier_service_dao_carrier_additional_service_dao" table.
	CarrierServiceDAOCarrierAdditionalServiceDAOTable = &schema.Table{
		Name:       "carrier_service_dao_carrier_additional_service_dao",
		Columns:    CarrierServiceDAOCarrierAdditionalServiceDAOColumns,
		PrimaryKey: []*schema.Column{CarrierServiceDAOCarrierAdditionalServiceDAOColumns[0], CarrierServiceDAOCarrierAdditionalServiceDAOColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_dao_carrier_additional_service_dao_carrier_service_dao_id",
				Columns:    []*schema.Column{CarrierServiceDAOCarrierAdditionalServiceDAOColumns[0]},
				RefColumns: []*schema.Column{CarrierServiceDaOsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "carrier_service_dao_carrier_additional_service_dao_carrier_additional_service_dao_id",
				Columns:    []*schema.Column{CarrierServiceDAOCarrierAdditionalServiceDAOColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceDaOsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CarrierServiceDFCarrierAdditionalServiceDFColumns holds the columns for the "carrier_service_df_carrier_additional_service_df" table.
	CarrierServiceDFCarrierAdditionalServiceDFColumns = []*schema.Column{
		{Name: "carrier_service_df_id", Type: field.TypeString},
		{Name: "carrier_additional_service_df_id", Type: field.TypeString},
	}
	// CarrierServiceDFCarrierAdditionalServiceDFTable holds the schema information for the "carrier_service_df_carrier_additional_service_df" table.
	CarrierServiceDFCarrierAdditionalServiceDFTable = &schema.Table{
		Name:       "carrier_service_df_carrier_additional_service_df",
		Columns:    CarrierServiceDFCarrierAdditionalServiceDFColumns,
		PrimaryKey: []*schema.Column{CarrierServiceDFCarrierAdditionalServiceDFColumns[0], CarrierServiceDFCarrierAdditionalServiceDFColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_df_carrier_additional_service_df_carrier_service_df_id",
				Columns:    []*schema.Column{CarrierServiceDFCarrierAdditionalServiceDFColumns[0]},
				RefColumns: []*schema.Column{CarrierServiceDfsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "carrier_service_df_carrier_additional_service_df_carrier_additional_service_df_id",
				Columns:    []*schema.Column{CarrierServiceDFCarrierAdditionalServiceDFColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceDfsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CarrierServiceDSVCarrierAdditionalServiceDSVColumns holds the columns for the "carrier_service_dsv_carrier_additional_service_dsv" table.
	CarrierServiceDSVCarrierAdditionalServiceDSVColumns = []*schema.Column{
		{Name: "carrier_service_dsv_id", Type: field.TypeString},
		{Name: "carrier_additional_service_dsv_id", Type: field.TypeString},
	}
	// CarrierServiceDSVCarrierAdditionalServiceDSVTable holds the schema information for the "carrier_service_dsv_carrier_additional_service_dsv" table.
	CarrierServiceDSVCarrierAdditionalServiceDSVTable = &schema.Table{
		Name:       "carrier_service_dsv_carrier_additional_service_dsv",
		Columns:    CarrierServiceDSVCarrierAdditionalServiceDSVColumns,
		PrimaryKey: []*schema.Column{CarrierServiceDSVCarrierAdditionalServiceDSVColumns[0], CarrierServiceDSVCarrierAdditionalServiceDSVColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_dsv_carrier_additional_service_dsv_carrier_service_dsv_id",
				Columns:    []*schema.Column{CarrierServiceDSVCarrierAdditionalServiceDSVColumns[0]},
				RefColumns: []*schema.Column{CarrierServiceDsVsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "carrier_service_dsv_carrier_additional_service_dsv_carrier_additional_service_dsv_id",
				Columns:    []*schema.Column{CarrierServiceDSVCarrierAdditionalServiceDSVColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceDsVsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CarrierServiceEasyPostCarrierAddServEasyPostColumns holds the columns for the "carrier_service_easy_post_carrier_add_serv_easy_post" table.
	CarrierServiceEasyPostCarrierAddServEasyPostColumns = []*schema.Column{
		{Name: "carrier_service_easy_post_id", Type: field.TypeString},
		{Name: "carrier_additional_service_easy_post_id", Type: field.TypeString},
	}
	// CarrierServiceEasyPostCarrierAddServEasyPostTable holds the schema information for the "carrier_service_easy_post_carrier_add_serv_easy_post" table.
	CarrierServiceEasyPostCarrierAddServEasyPostTable = &schema.Table{
		Name:       "carrier_service_easy_post_carrier_add_serv_easy_post",
		Columns:    CarrierServiceEasyPostCarrierAddServEasyPostColumns,
		PrimaryKey: []*schema.Column{CarrierServiceEasyPostCarrierAddServEasyPostColumns[0], CarrierServiceEasyPostCarrierAddServEasyPostColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carrier_service_easy_post_carrier_add_serv_easy_post_carrier_service_easy_post_id",
				Columns:    []*schema.Column{CarrierServiceEasyPostCarrierAddServEasyPostColumns[0]},
				RefColumns: []*schema.Column{CarrierServiceEasyPostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "carrier_service_easy_post_carrier_add_serv_easy_post_carrier_additional_service_easy_post_id",
				Columns:    []*schema.Column{CarrierServiceEasyPostCarrierAddServEasyPostColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceEasyPostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ColliCancelledShipmentParcelColumns holds the columns for the "colli_cancelled_shipment_parcel" table.
	ColliCancelledShipmentParcelColumns = []*schema.Column{
		{Name: "colli_id", Type: field.TypeString},
		{Name: "shipment_parcel_id", Type: field.TypeString},
	}
	// ColliCancelledShipmentParcelTable holds the schema information for the "colli_cancelled_shipment_parcel" table.
	ColliCancelledShipmentParcelTable = &schema.Table{
		Name:       "colli_cancelled_shipment_parcel",
		Columns:    ColliCancelledShipmentParcelColumns,
		PrimaryKey: []*schema.Column{ColliCancelledShipmentParcelColumns[0], ColliCancelledShipmentParcelColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "colli_cancelled_shipment_parcel_colli_id",
				Columns:    []*schema.Column{ColliCancelledShipmentParcelColumns[0]},
				RefColumns: []*schema.Column{CollisColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "colli_cancelled_shipment_parcel_shipment_parcel_id",
				Columns:    []*schema.Column{ColliCancelledShipmentParcelColumns[1]},
				RefColumns: []*schema.Column{ShipmentParcelsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// CountryDeliveryRuleColumns holds the columns for the "country_delivery_rule" table.
	CountryDeliveryRuleColumns = []*schema.Column{
		{Name: "country_id", Type: field.TypeString},
		{Name: "delivery_rule_id", Type: field.TypeString},
	}
	// CountryDeliveryRuleTable holds the schema information for the "country_delivery_rule" table.
	CountryDeliveryRuleTable = &schema.Table{
		Name:       "country_delivery_rule",
		Columns:    CountryDeliveryRuleColumns,
		PrimaryKey: []*schema.Column{CountryDeliveryRuleColumns[0], CountryDeliveryRuleColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "country_delivery_rule_country_id",
				Columns:    []*schema.Column{CountryDeliveryRuleColumns[0]},
				RefColumns: []*schema.Column{CountriesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "country_delivery_rule_delivery_rule_id",
				Columns:    []*schema.Column{CountryDeliveryRuleColumns[1]},
				RefColumns: []*schema.Column{DeliveryRulesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionClickCollectLocationColumns holds the columns for the "delivery_option_click_collect_location" table.
	DeliveryOptionClickCollectLocationColumns = []*schema.Column{
		{Name: "delivery_option_id", Type: field.TypeString},
		{Name: "location_id", Type: field.TypeString},
	}
	// DeliveryOptionClickCollectLocationTable holds the schema information for the "delivery_option_click_collect_location" table.
	DeliveryOptionClickCollectLocationTable = &schema.Table{
		Name:       "delivery_option_click_collect_location",
		Columns:    DeliveryOptionClickCollectLocationColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionClickCollectLocationColumns[0], DeliveryOptionClickCollectLocationColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_click_collect_location_delivery_option_id",
				Columns:    []*schema.Column{DeliveryOptionClickCollectLocationColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_click_collect_location_location_id",
				Columns:    []*schema.Column{DeliveryOptionClickCollectLocationColumns[1]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionBringCarrierAdditionalServiceBringColumns holds the columns for the "delivery_option_bring_carrier_additional_service_bring" table.
	DeliveryOptionBringCarrierAdditionalServiceBringColumns = []*schema.Column{
		{Name: "delivery_option_bring_id", Type: field.TypeString},
		{Name: "carrier_additional_service_bring_id", Type: field.TypeString},
	}
	// DeliveryOptionBringCarrierAdditionalServiceBringTable holds the schema information for the "delivery_option_bring_carrier_additional_service_bring" table.
	DeliveryOptionBringCarrierAdditionalServiceBringTable = &schema.Table{
		Name:       "delivery_option_bring_carrier_additional_service_bring",
		Columns:    DeliveryOptionBringCarrierAdditionalServiceBringColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionBringCarrierAdditionalServiceBringColumns[0], DeliveryOptionBringCarrierAdditionalServiceBringColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_bring_carrier_additional_service_bring_delivery_option_bring_id",
				Columns:    []*schema.Column{DeliveryOptionBringCarrierAdditionalServiceBringColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionBringsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_bring_carrier_additional_service_bring_carrier_additional_service_bring_id",
				Columns:    []*schema.Column{DeliveryOptionBringCarrierAdditionalServiceBringColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceBringsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionDAOCarrierAdditionalServiceDAOColumns holds the columns for the "delivery_option_dao_carrier_additional_service_dao" table.
	DeliveryOptionDAOCarrierAdditionalServiceDAOColumns = []*schema.Column{
		{Name: "delivery_option_dao_id", Type: field.TypeString},
		{Name: "carrier_additional_service_dao_id", Type: field.TypeString},
	}
	// DeliveryOptionDAOCarrierAdditionalServiceDAOTable holds the schema information for the "delivery_option_dao_carrier_additional_service_dao" table.
	DeliveryOptionDAOCarrierAdditionalServiceDAOTable = &schema.Table{
		Name:       "delivery_option_dao_carrier_additional_service_dao",
		Columns:    DeliveryOptionDAOCarrierAdditionalServiceDAOColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionDAOCarrierAdditionalServiceDAOColumns[0], DeliveryOptionDAOCarrierAdditionalServiceDAOColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_dao_carrier_additional_service_dao_delivery_option_dao_id",
				Columns:    []*schema.Column{DeliveryOptionDAOCarrierAdditionalServiceDAOColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionDaOsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_dao_carrier_additional_service_dao_carrier_additional_service_dao_id",
				Columns:    []*schema.Column{DeliveryOptionDAOCarrierAdditionalServiceDAOColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceDaOsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionDFCarrierAdditionalServiceDFColumns holds the columns for the "delivery_option_df_carrier_additional_service_df" table.
	DeliveryOptionDFCarrierAdditionalServiceDFColumns = []*schema.Column{
		{Name: "delivery_option_df_id", Type: field.TypeString},
		{Name: "carrier_additional_service_df_id", Type: field.TypeString},
	}
	// DeliveryOptionDFCarrierAdditionalServiceDFTable holds the schema information for the "delivery_option_df_carrier_additional_service_df" table.
	DeliveryOptionDFCarrierAdditionalServiceDFTable = &schema.Table{
		Name:       "delivery_option_df_carrier_additional_service_df",
		Columns:    DeliveryOptionDFCarrierAdditionalServiceDFColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionDFCarrierAdditionalServiceDFColumns[0], DeliveryOptionDFCarrierAdditionalServiceDFColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_df_carrier_additional_service_df_delivery_option_df_id",
				Columns:    []*schema.Column{DeliveryOptionDFCarrierAdditionalServiceDFColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionDfsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_df_carrier_additional_service_df_carrier_additional_service_df_id",
				Columns:    []*schema.Column{DeliveryOptionDFCarrierAdditionalServiceDFColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceDfsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionDSVCarrierAdditionalServiceDSVColumns holds the columns for the "delivery_option_dsv_carrier_additional_service_dsv" table.
	DeliveryOptionDSVCarrierAdditionalServiceDSVColumns = []*schema.Column{
		{Name: "delivery_option_dsv_id", Type: field.TypeString},
		{Name: "carrier_additional_service_dsv_id", Type: field.TypeString},
	}
	// DeliveryOptionDSVCarrierAdditionalServiceDSVTable holds the schema information for the "delivery_option_dsv_carrier_additional_service_dsv" table.
	DeliveryOptionDSVCarrierAdditionalServiceDSVTable = &schema.Table{
		Name:       "delivery_option_dsv_carrier_additional_service_dsv",
		Columns:    DeliveryOptionDSVCarrierAdditionalServiceDSVColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionDSVCarrierAdditionalServiceDSVColumns[0], DeliveryOptionDSVCarrierAdditionalServiceDSVColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_dsv_carrier_additional_service_dsv_delivery_option_dsv_id",
				Columns:    []*schema.Column{DeliveryOptionDSVCarrierAdditionalServiceDSVColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionDsVsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_dsv_carrier_additional_service_dsv_carrier_additional_service_dsv_id",
				Columns:    []*schema.Column{DeliveryOptionDSVCarrierAdditionalServiceDSVColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceDsVsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionEasyPostCarrierAddServEasyPostColumns holds the columns for the "delivery_option_easy_post_carrier_add_serv_easy_post" table.
	DeliveryOptionEasyPostCarrierAddServEasyPostColumns = []*schema.Column{
		{Name: "delivery_option_easy_post_id", Type: field.TypeString},
		{Name: "carrier_additional_service_easy_post_id", Type: field.TypeString},
	}
	// DeliveryOptionEasyPostCarrierAddServEasyPostTable holds the schema information for the "delivery_option_easy_post_carrier_add_serv_easy_post" table.
	DeliveryOptionEasyPostCarrierAddServEasyPostTable = &schema.Table{
		Name:       "delivery_option_easy_post_carrier_add_serv_easy_post",
		Columns:    DeliveryOptionEasyPostCarrierAddServEasyPostColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionEasyPostCarrierAddServEasyPostColumns[0], DeliveryOptionEasyPostCarrierAddServEasyPostColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_easy_post_carrier_add_serv_easy_post_delivery_option_easy_post_id",
				Columns:    []*schema.Column{DeliveryOptionEasyPostCarrierAddServEasyPostColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionEasyPostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_easy_post_carrier_add_serv_easy_post_carrier_additional_service_easy_post_id",
				Columns:    []*schema.Column{DeliveryOptionEasyPostCarrierAddServEasyPostColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceEasyPostsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionGLSCarrierAdditionalServiceGLSColumns holds the columns for the "delivery_option_gls_carrier_additional_service_gls" table.
	DeliveryOptionGLSCarrierAdditionalServiceGLSColumns = []*schema.Column{
		{Name: "delivery_option_gls_id", Type: field.TypeString},
		{Name: "carrier_additional_service_gls_id", Type: field.TypeString},
	}
	// DeliveryOptionGLSCarrierAdditionalServiceGLSTable holds the schema information for the "delivery_option_gls_carrier_additional_service_gls" table.
	DeliveryOptionGLSCarrierAdditionalServiceGLSTable = &schema.Table{
		Name:       "delivery_option_gls_carrier_additional_service_gls",
		Columns:    DeliveryOptionGLSCarrierAdditionalServiceGLSColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionGLSCarrierAdditionalServiceGLSColumns[0], DeliveryOptionGLSCarrierAdditionalServiceGLSColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_gls_carrier_additional_service_gls_delivery_option_gls_id",
				Columns:    []*schema.Column{DeliveryOptionGLSCarrierAdditionalServiceGLSColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionGlSsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_gls_carrier_additional_service_gls_carrier_additional_service_gls_id",
				Columns:    []*schema.Column{DeliveryOptionGLSCarrierAdditionalServiceGLSColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceGlSsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionPostNordCarrierAddServPostNordColumns holds the columns for the "delivery_option_post_nord_carrier_add_serv_post_nord" table.
	DeliveryOptionPostNordCarrierAddServPostNordColumns = []*schema.Column{
		{Name: "delivery_option_post_nord_id", Type: field.TypeString},
		{Name: "carrier_additional_service_post_nord_id", Type: field.TypeString},
	}
	// DeliveryOptionPostNordCarrierAddServPostNordTable holds the schema information for the "delivery_option_post_nord_carrier_add_serv_post_nord" table.
	DeliveryOptionPostNordCarrierAddServPostNordTable = &schema.Table{
		Name:       "delivery_option_post_nord_carrier_add_serv_post_nord",
		Columns:    DeliveryOptionPostNordCarrierAddServPostNordColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionPostNordCarrierAddServPostNordColumns[0], DeliveryOptionPostNordCarrierAddServPostNordColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_post_nord_carrier_add_serv_post_nord_delivery_option_post_nord_id",
				Columns:    []*schema.Column{DeliveryOptionPostNordCarrierAddServPostNordColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionPostNordsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_post_nord_carrier_add_serv_post_nord_carrier_additional_service_post_nord_id",
				Columns:    []*schema.Column{DeliveryOptionPostNordCarrierAddServPostNordColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServicePostNordsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// DeliveryOptionUSPSCarrierAdditionalServiceUSPSColumns holds the columns for the "delivery_option_usps_carrier_additional_service_usps" table.
	DeliveryOptionUSPSCarrierAdditionalServiceUSPSColumns = []*schema.Column{
		{Name: "delivery_option_usps_id", Type: field.TypeString},
		{Name: "carrier_additional_service_usps_id", Type: field.TypeString},
	}
	// DeliveryOptionUSPSCarrierAdditionalServiceUSPSTable holds the schema information for the "delivery_option_usps_carrier_additional_service_usps" table.
	DeliveryOptionUSPSCarrierAdditionalServiceUSPSTable = &schema.Table{
		Name:       "delivery_option_usps_carrier_additional_service_usps",
		Columns:    DeliveryOptionUSPSCarrierAdditionalServiceUSPSColumns,
		PrimaryKey: []*schema.Column{DeliveryOptionUSPSCarrierAdditionalServiceUSPSColumns[0], DeliveryOptionUSPSCarrierAdditionalServiceUSPSColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "delivery_option_usps_carrier_additional_service_usps_delivery_option_usps_id",
				Columns:    []*schema.Column{DeliveryOptionUSPSCarrierAdditionalServiceUSPSColumns[0]},
				RefColumns: []*schema.Column{DeliveryOptionUspSsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "delivery_option_usps_carrier_additional_service_usps_carrier_additional_service_usps_id",
				Columns:    []*schema.Column{DeliveryOptionUSPSCarrierAdditionalServiceUSPSColumns[1]},
				RefColumns: []*schema.Column{CarrierAdditionalServiceUspSsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// HypothesisTestDeliveryOptionDeliveryOptionGroupOneColumns holds the columns for the "hypothesis_test_delivery_option_delivery_option_group_one" table.
	HypothesisTestDeliveryOptionDeliveryOptionGroupOneColumns = []*schema.Column{
		{Name: "hypothesis_test_delivery_option_id", Type: field.TypeString},
		{Name: "delivery_option_id", Type: field.TypeString},
	}
	// HypothesisTestDeliveryOptionDeliveryOptionGroupOneTable holds the schema information for the "hypothesis_test_delivery_option_delivery_option_group_one" table.
	HypothesisTestDeliveryOptionDeliveryOptionGroupOneTable = &schema.Table{
		Name:       "hypothesis_test_delivery_option_delivery_option_group_one",
		Columns:    HypothesisTestDeliveryOptionDeliveryOptionGroupOneColumns,
		PrimaryKey: []*schema.Column{HypothesisTestDeliveryOptionDeliveryOptionGroupOneColumns[0], HypothesisTestDeliveryOptionDeliveryOptionGroupOneColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hypothesis_test_delivery_option_delivery_option_group_one_hypothesis_test_delivery_option_id",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionDeliveryOptionGroupOneColumns[0]},
				RefColumns: []*schema.Column{HypothesisTestDeliveryOptionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "hypothesis_test_delivery_option_delivery_option_group_one_delivery_option_id",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionDeliveryOptionGroupOneColumns[1]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// HypothesisTestDeliveryOptionDeliveryOptionGroupTwoColumns holds the columns for the "hypothesis_test_delivery_option_delivery_option_group_two" table.
	HypothesisTestDeliveryOptionDeliveryOptionGroupTwoColumns = []*schema.Column{
		{Name: "hypothesis_test_delivery_option_id", Type: field.TypeString},
		{Name: "delivery_option_id", Type: field.TypeString},
	}
	// HypothesisTestDeliveryOptionDeliveryOptionGroupTwoTable holds the schema information for the "hypothesis_test_delivery_option_delivery_option_group_two" table.
	HypothesisTestDeliveryOptionDeliveryOptionGroupTwoTable = &schema.Table{
		Name:       "hypothesis_test_delivery_option_delivery_option_group_two",
		Columns:    HypothesisTestDeliveryOptionDeliveryOptionGroupTwoColumns,
		PrimaryKey: []*schema.Column{HypothesisTestDeliveryOptionDeliveryOptionGroupTwoColumns[0], HypothesisTestDeliveryOptionDeliveryOptionGroupTwoColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "hypothesis_test_delivery_option_delivery_option_group_two_hypothesis_test_delivery_option_id",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionDeliveryOptionGroupTwoColumns[0]},
				RefColumns: []*schema.Column{HypothesisTestDeliveryOptionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "hypothesis_test_delivery_option_delivery_option_group_two_delivery_option_id",
				Columns:    []*schema.Column{HypothesisTestDeliveryOptionDeliveryOptionGroupTwoColumns[1]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// LocationLocationTagsColumns holds the columns for the "location_location_tags" table.
	LocationLocationTagsColumns = []*schema.Column{
		{Name: "location_id", Type: field.TypeString},
		{Name: "location_tag_id", Type: field.TypeString},
	}
	// LocationLocationTagsTable holds the schema information for the "location_location_tags" table.
	LocationLocationTagsTable = &schema.Table{
		Name:       "location_location_tags",
		Columns:    LocationLocationTagsColumns,
		PrimaryKey: []*schema.Column{LocationLocationTagsColumns[0], LocationLocationTagsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "location_location_tags_location_id",
				Columns:    []*schema.Column{LocationLocationTagsColumns[0]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "location_location_tags_location_tag_id",
				Columns:    []*schema.Column{LocationLocationTagsColumns[1]},
				RefColumns: []*schema.Column{LocationTagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// PalletCancelledShipmentPalletColumns holds the columns for the "pallet_cancelled_shipment_pallet" table.
	PalletCancelledShipmentPalletColumns = []*schema.Column{
		{Name: "pallet_id", Type: field.TypeString},
		{Name: "shipment_pallet_id", Type: field.TypeString},
	}
	// PalletCancelledShipmentPalletTable holds the schema information for the "pallet_cancelled_shipment_pallet" table.
	PalletCancelledShipmentPalletTable = &schema.Table{
		Name:       "pallet_cancelled_shipment_pallet",
		Columns:    PalletCancelledShipmentPalletColumns,
		PrimaryKey: []*schema.Column{PalletCancelledShipmentPalletColumns[0], PalletCancelledShipmentPalletColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "pallet_cancelled_shipment_pallet_pallet_id",
				Columns:    []*schema.Column{PalletCancelledShipmentPalletColumns[0]},
				RefColumns: []*schema.Column{PalletsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "pallet_cancelled_shipment_pallet_shipment_pallet_id",
				Columns:    []*schema.Column{PalletCancelledShipmentPalletColumns[1]},
				RefColumns: []*schema.Column{ShipmentPalletsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductImageProductVariantColumns holds the columns for the "product_image_product_variant" table.
	ProductImageProductVariantColumns = []*schema.Column{
		{Name: "product_image_id", Type: field.TypeString},
		{Name: "product_variant_id", Type: field.TypeString},
	}
	// ProductImageProductVariantTable holds the schema information for the "product_image_product_variant" table.
	ProductImageProductVariantTable = &schema.Table{
		Name:       "product_image_product_variant",
		Columns:    ProductImageProductVariantColumns,
		PrimaryKey: []*schema.Column{ProductImageProductVariantColumns[0], ProductImageProductVariantColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_image_product_variant_product_image_id",
				Columns:    []*schema.Column{ProductImageProductVariantColumns[0]},
				RefColumns: []*schema.Column{ProductImagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_image_product_variant_product_variant_id",
				Columns:    []*schema.Column{ProductImageProductVariantColumns[1]},
				RefColumns: []*schema.Column{ProductVariantsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ProductTagProductsColumns holds the columns for the "product_tag_products" table.
	ProductTagProductsColumns = []*schema.Column{
		{Name: "product_tag_id", Type: field.TypeString},
		{Name: "product_id", Type: field.TypeString},
	}
	// ProductTagProductsTable holds the schema information for the "product_tag_products" table.
	ProductTagProductsTable = &schema.Table{
		Name:       "product_tag_products",
		Columns:    ProductTagProductsColumns,
		PrimaryKey: []*schema.Column{ProductTagProductsColumns[0], ProductTagProductsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_tag_products_product_tag_id",
				Columns:    []*schema.Column{ProductTagProductsColumns[0]},
				RefColumns: []*schema.Column{ProductTagsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_tag_products_product_id",
				Columns:    []*schema.Column{ProductTagProductsColumns[1]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ReturnPortalReturnLocationColumns holds the columns for the "return_portal_return_location" table.
	ReturnPortalReturnLocationColumns = []*schema.Column{
		{Name: "return_portal_id", Type: field.TypeString},
		{Name: "location_id", Type: field.TypeString},
	}
	// ReturnPortalReturnLocationTable holds the schema information for the "return_portal_return_location" table.
	ReturnPortalReturnLocationTable = &schema.Table{
		Name:       "return_portal_return_location",
		Columns:    ReturnPortalReturnLocationColumns,
		PrimaryKey: []*schema.Column{ReturnPortalReturnLocationColumns[0], ReturnPortalReturnLocationColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "return_portal_return_location_return_portal_id",
				Columns:    []*schema.Column{ReturnPortalReturnLocationColumns[0]},
				RefColumns: []*schema.Column{ReturnPortalsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "return_portal_return_location_location_id",
				Columns:    []*schema.Column{ReturnPortalReturnLocationColumns[1]},
				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ReturnPortalDeliveryOptionsColumns holds the columns for the "return_portal_delivery_options" table.
	ReturnPortalDeliveryOptionsColumns = []*schema.Column{
		{Name: "return_portal_id", Type: field.TypeString},
		{Name: "delivery_option_id", Type: field.TypeString},
	}
	// ReturnPortalDeliveryOptionsTable holds the schema information for the "return_portal_delivery_options" table.
	ReturnPortalDeliveryOptionsTable = &schema.Table{
		Name:       "return_portal_delivery_options",
		Columns:    ReturnPortalDeliveryOptionsColumns,
		PrimaryKey: []*schema.Column{ReturnPortalDeliveryOptionsColumns[0], ReturnPortalDeliveryOptionsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "return_portal_delivery_options_return_portal_id",
				Columns:    []*schema.Column{ReturnPortalDeliveryOptionsColumns[0]},
				RefColumns: []*schema.Column{ReturnPortalsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "return_portal_delivery_options_delivery_option_id",
				Columns:    []*schema.Column{ReturnPortalDeliveryOptionsColumns[1]},
				RefColumns: []*schema.Column{DeliveryOptionsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// ShipmentOldConsolidationColumns holds the columns for the "shipment_old_consolidation" table.
	ShipmentOldConsolidationColumns = []*schema.Column{
		{Name: "shipment_id", Type: field.TypeString},
		{Name: "consolidation_id", Type: field.TypeString},
	}
	// ShipmentOldConsolidationTable holds the schema information for the "shipment_old_consolidation" table.
	ShipmentOldConsolidationTable = &schema.Table{
		Name:       "shipment_old_consolidation",
		Columns:    ShipmentOldConsolidationColumns,
		PrimaryKey: []*schema.Column{ShipmentOldConsolidationColumns[0], ShipmentOldConsolidationColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "shipment_old_consolidation_shipment_id",
				Columns:    []*schema.Column{ShipmentOldConsolidationColumns[0]},
				RefColumns: []*schema.Column{ShipmentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "shipment_old_consolidation_consolidation_id",
				Columns:    []*schema.Column{ShipmentOldConsolidationColumns[1]},
				RefColumns: []*schema.Column{ConsolidationsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TenantConnectOptionCarriersColumns holds the columns for the "tenant_connect_option_carriers" table.
	TenantConnectOptionCarriersColumns = []*schema.Column{
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "connect_option_carrier_id", Type: field.TypeString},
	}
	// TenantConnectOptionCarriersTable holds the schema information for the "tenant_connect_option_carriers" table.
	TenantConnectOptionCarriersTable = &schema.Table{
		Name:       "tenant_connect_option_carriers",
		Columns:    TenantConnectOptionCarriersColumns,
		PrimaryKey: []*schema.Column{TenantConnectOptionCarriersColumns[0], TenantConnectOptionCarriersColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tenant_connect_option_carriers_tenant_id",
				Columns:    []*schema.Column{TenantConnectOptionCarriersColumns[0]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tenant_connect_option_carriers_connect_option_carrier_id",
				Columns:    []*schema.Column{TenantConnectOptionCarriersColumns[1]},
				RefColumns: []*schema.Column{ConnectOptionCarriersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// TenantConnectOptionPlatformsColumns holds the columns for the "tenant_connect_option_platforms" table.
	TenantConnectOptionPlatformsColumns = []*schema.Column{
		{Name: "tenant_id", Type: field.TypeString},
		{Name: "connect_option_platform_id", Type: field.TypeString},
	}
	// TenantConnectOptionPlatformsTable holds the schema information for the "tenant_connect_option_platforms" table.
	TenantConnectOptionPlatformsTable = &schema.Table{
		Name:       "tenant_connect_option_platforms",
		Columns:    TenantConnectOptionPlatformsColumns,
		PrimaryKey: []*schema.Column{TenantConnectOptionPlatformsColumns[0], TenantConnectOptionPlatformsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "tenant_connect_option_platforms_tenant_id",
				Columns:    []*schema.Column{TenantConnectOptionPlatformsColumns[0]},
				RefColumns: []*schema.Column{TenantsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "tenant_connect_option_platforms_connect_option_platform_id",
				Columns:    []*schema.Column{TenantConnectOptionPlatformsColumns[1]},
				RefColumns: []*schema.Column{ConnectOptionPlatformsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		APITokensTable,
		AccessRightsTable,
		AddressesTable,
		AddressGlobalsTable,
		BusinessHoursPeriodsTable,
		CarriersTable,
		CarrierAdditionalServiceBringsTable,
		CarrierAdditionalServiceDaOsTable,
		CarrierAdditionalServiceDfsTable,
		CarrierAdditionalServiceDsVsTable,
		CarrierAdditionalServiceEasyPostsTable,
		CarrierAdditionalServiceGlSsTable,
		CarrierAdditionalServicePostNordsTable,
		CarrierAdditionalServiceUspSsTable,
		CarrierBrandsTable,
		CarrierBringsTable,
		CarrierDaOsTable,
		CarrierDfsTable,
		CarrierDsVsTable,
		CarrierEasyPostsTable,
		CarrierGlSsTable,
		CarrierPostNordsTable,
		CarrierServicesTable,
		CarrierServiceBringsTable,
		CarrierServiceDaOsTable,
		CarrierServiceDfsTable,
		CarrierServiceDsVsTable,
		CarrierServiceEasyPostsTable,
		CarrierServiceGlSsTable,
		CarrierServicePostNordsTable,
		CarrierServiceUspSsTable,
		CarrierUspSsTable,
		ChangeHistoriesTable,
		CollisTable,
		ConnectOptionCarriersTable,
		ConnectOptionPlatformsTable,
		ConnectionsTable,
		ConnectionBrandsTable,
		ConnectionLookupsTable,
		ConnectionShopifiesTable,
		ConsolidationsTable,
		ContactsTable,
		CountriesTable,
		CountryHarmonizedCodesTable,
		CurrenciesTable,
		DeliveryOptionsTable,
		DeliveryOptionBringsTable,
		DeliveryOptionDaOsTable,
		DeliveryOptionDfsTable,
		DeliveryOptionDsVsTable,
		DeliveryOptionEasyPostsTable,
		DeliveryOptionGlSsTable,
		DeliveryOptionPostNordsTable,
		DeliveryOptionUspSsTable,
		DeliveryRulesTable,
		DeliveryRuleConstraintsTable,
		DeliveryRuleConstraintGroupsTable,
		DocumentsTable,
		DocumentFilesTable,
		EmailTemplatesTable,
		HypothesisTestsTable,
		HypothesisTestDeliveryOptionsTable,
		HypothesisTestDeliveryOptionLookupsTable,
		HypothesisTestDeliveryOptionRequestsTable,
		InventoryItemsTable,
		LanguagesTable,
		LocationsTable,
		LocationTagsTable,
		NotificationsTable,
		OtkRequestsTable,
		OrdersTable,
		OrderHistoriesTable,
		OrderLinesTable,
		OrderSendersTable,
		PackagingsTable,
		PackagingDfsTable,
		PackagingUspSsTable,
		PackagingUSPSProcessingCategoriesTable,
		PackagingUSPSRateIndicatorsTable,
		PalletsTable,
		ParcelShopsTable,
		ParcelShopBringsTable,
		ParcelShopDaOsTable,
		ParcelShopGlSsTable,
		ParcelShopPostNordsTable,
		PlansTable,
		PlanHistoriesTable,
		PrintJobsTable,
		PrintersTable,
		ProductsTable,
		ProductImagesTable,
		ProductTagsTable,
		ProductVariantsTable,
		ReturnCollisTable,
		ReturnColliHistoriesTable,
		ReturnOrderLinesTable,
		ReturnPortalsTable,
		ReturnPortalClaimsTable,
		SeatGroupsTable,
		SeatGroupAccessRightsTable,
		ShipmentsTable,
		ShipmentBringsTable,
		ShipmentDaOsTable,
		ShipmentDfsTable,
		ShipmentDsVsTable,
		ShipmentEasyPostsTable,
		ShipmentGlSsTable,
		ShipmentHistoriesTable,
		ShipmentPalletsTable,
		ShipmentParcelsTable,
		ShipmentPostNordsTable,
		ShipmentUspSsTable,
		SignupOptionsTable,
		SystemEventsTable,
		TenantsTable,
		UsersTable,
		UserSeatsTable,
		WorkspaceRecentScansTable,
		WorkstationsTable,
		CarrierAdditionalServiceGLSCountriesConsigneeTable,
		CarrierAdditionalServiceGLSCountriesConsignorTable,
		CarrierAdditionalServicePostNordCountriesConsigneeTable,
		CarrierAdditionalServicePostNordCountriesConsignorTable,
		CarrierServiceDAOCarrierAdditionalServiceDAOTable,
		CarrierServiceDFCarrierAdditionalServiceDFTable,
		CarrierServiceDSVCarrierAdditionalServiceDSVTable,
		CarrierServiceEasyPostCarrierAddServEasyPostTable,
		ColliCancelledShipmentParcelTable,
		CountryDeliveryRuleTable,
		DeliveryOptionClickCollectLocationTable,
		DeliveryOptionBringCarrierAdditionalServiceBringTable,
		DeliveryOptionDAOCarrierAdditionalServiceDAOTable,
		DeliveryOptionDFCarrierAdditionalServiceDFTable,
		DeliveryOptionDSVCarrierAdditionalServiceDSVTable,
		DeliveryOptionEasyPostCarrierAddServEasyPostTable,
		DeliveryOptionGLSCarrierAdditionalServiceGLSTable,
		DeliveryOptionPostNordCarrierAddServPostNordTable,
		DeliveryOptionUSPSCarrierAdditionalServiceUSPSTable,
		HypothesisTestDeliveryOptionDeliveryOptionGroupOneTable,
		HypothesisTestDeliveryOptionDeliveryOptionGroupTwoTable,
		LocationLocationTagsTable,
		PalletCancelledShipmentPalletTable,
		ProductImageProductVariantTable,
		ProductTagProductsTable,
		ReturnPortalReturnLocationTable,
		ReturnPortalDeliveryOptionsTable,
		ShipmentOldConsolidationTable,
		TenantConnectOptionCarriersTable,
		TenantConnectOptionPlatformsTable,
	}
)

func init() {
	APITokensTable.ForeignKeys[0].RefTable = TenantsTable
	APITokensTable.ForeignKeys[1].RefTable = UsersTable
	AddressesTable.ForeignKeys[0].RefTable = TenantsTable
	AddressesTable.ForeignKeys[1].RefTable = CountriesTable
	AddressesTable.ForeignKeys[2].RefTable = ConsolidationsTable
	AddressesTable.ForeignKeys[3].RefTable = ConsolidationsTable
	AddressGlobalsTable.ForeignKeys[0].RefTable = CountriesTable
	AddressGlobalsTable.ForeignKeys[1].RefTable = ParcelShopsTable
	AddressGlobalsTable.ForeignKeys[2].RefTable = ParcelShopBringsTable
	AddressGlobalsTable.ForeignKeys[3].RefTable = ParcelShopPostNordsTable
	BusinessHoursPeriodsTable.ForeignKeys[0].RefTable = ParcelShopsTable
	CarriersTable.ForeignKeys[0].RefTable = TenantsTable
	CarriersTable.ForeignKeys[1].RefTable = CarrierBrandsTable
	CarrierAdditionalServiceBringsTable.ForeignKeys[0].RefTable = CarrierServiceBringsTable
	CarrierAdditionalServiceGlSsTable.ForeignKeys[0].RefTable = CarrierServiceGlSsTable
	CarrierAdditionalServicePostNordsTable.ForeignKeys[0].RefTable = CarrierServicePostNordsTable
	CarrierAdditionalServiceUspSsTable.ForeignKeys[0].RefTable = CarrierServiceUspSsTable
	CarrierBringsTable.ForeignKeys[0].RefTable = CarriersTable
	CarrierBringsTable.ForeignKeys[1].RefTable = TenantsTable
	CarrierDaOsTable.ForeignKeys[0].RefTable = CarriersTable
	CarrierDaOsTable.ForeignKeys[1].RefTable = TenantsTable
	CarrierDfsTable.ForeignKeys[0].RefTable = CarriersTable
	CarrierDfsTable.ForeignKeys[1].RefTable = TenantsTable
	CarrierDsVsTable.ForeignKeys[0].RefTable = CarriersTable
	CarrierDsVsTable.ForeignKeys[1].RefTable = TenantsTable
	CarrierEasyPostsTable.ForeignKeys[0].RefTable = CarriersTable
	CarrierEasyPostsTable.ForeignKeys[1].RefTable = TenantsTable
	CarrierGlSsTable.ForeignKeys[0].RefTable = CarriersTable
	CarrierGlSsTable.ForeignKeys[1].RefTable = TenantsTable
	CarrierPostNordsTable.ForeignKeys[0].RefTable = CarriersTable
	CarrierPostNordsTable.ForeignKeys[1].RefTable = TenantsTable
	CarrierServicesTable.ForeignKeys[0].RefTable = CarrierBrandsTable
	CarrierServiceBringsTable.ForeignKeys[0].RefTable = CarrierServicesTable
	CarrierServiceDaOsTable.ForeignKeys[0].RefTable = CarrierServicesTable
	CarrierServiceDfsTable.ForeignKeys[0].RefTable = CarrierServicesTable
	CarrierServiceDsVsTable.ForeignKeys[0].RefTable = CarrierServicesTable
	CarrierServiceEasyPostsTable.ForeignKeys[0].RefTable = CarrierServicesTable
	CarrierServiceGlSsTable.ForeignKeys[0].RefTable = CarrierServicesTable
	CarrierServicePostNordsTable.ForeignKeys[0].RefTable = CarrierServicesTable
	CarrierServiceUspSsTable.ForeignKeys[0].RefTable = CarrierServicesTable
	CarrierUspSsTable.ForeignKeys[0].RefTable = CarriersTable
	CarrierUspSsTable.ForeignKeys[1].RefTable = TenantsTable
	ChangeHistoriesTable.ForeignKeys[0].RefTable = TenantsTable
	ChangeHistoriesTable.ForeignKeys[1].RefTable = UsersTable
	CollisTable.ForeignKeys[0].RefTable = TenantsTable
	CollisTable.ForeignKeys[1].RefTable = AddressesTable
	CollisTable.ForeignKeys[2].RefTable = AddressesTable
	CollisTable.ForeignKeys[3].RefTable = ParcelShopsTable
	CollisTable.ForeignKeys[4].RefTable = LocationsTable
	CollisTable.ForeignKeys[5].RefTable = DeliveryOptionsTable
	CollisTable.ForeignKeys[6].RefTable = PackagingsTable
	CollisTable.ForeignKeys[7].RefTable = OrdersTable
	ConnectionsTable.ForeignKeys[0].RefTable = TenantsTable
	ConnectionsTable.ForeignKeys[1].RefTable = ConnectionBrandsTable
	ConnectionsTable.ForeignKeys[2].RefTable = LocationsTable
	ConnectionsTable.ForeignKeys[3].RefTable = LocationsTable
	ConnectionsTable.ForeignKeys[4].RefTable = LocationsTable
	ConnectionsTable.ForeignKeys[5].RefTable = LocationsTable
	ConnectionsTable.ForeignKeys[6].RefTable = CurrenciesTable
	ConnectionsTable.ForeignKeys[7].RefTable = DocumentsTable
	ConnectionsTable.ForeignKeys[8].RefTable = ReturnPortalsTable
	ConnectionLookupsTable.ForeignKeys[0].RefTable = TenantsTable
	ConnectionLookupsTable.ForeignKeys[1].RefTable = ConnectionsTable
	ConnectionShopifiesTable.ForeignKeys[0].RefTable = ConnectionsTable
	ConnectionShopifiesTable.ForeignKeys[1].RefTable = TenantsTable
	ConsolidationsTable.ForeignKeys[0].RefTable = TenantsTable
	ConsolidationsTable.ForeignKeys[1].RefTable = DeliveryOptionsTable
	ConsolidationsTable.ForeignKeys[2].RefTable = ShipmentsTable
	ContactsTable.ForeignKeys[0].RefTable = TenantsTable
	CountryHarmonizedCodesTable.ForeignKeys[0].RefTable = TenantsTable
	CountryHarmonizedCodesTable.ForeignKeys[1].RefTable = CountriesTable
	CountryHarmonizedCodesTable.ForeignKeys[2].RefTable = InventoryItemsTable
	DeliveryOptionsTable.ForeignKeys[0].RefTable = ConnectionsTable
	DeliveryOptionsTable.ForeignKeys[1].RefTable = ConnectionsTable
	DeliveryOptionsTable.ForeignKeys[2].RefTable = TenantsTable
	DeliveryOptionsTable.ForeignKeys[3].RefTable = CarriersTable
	DeliveryOptionsTable.ForeignKeys[4].RefTable = CarrierServicesTable
	DeliveryOptionsTable.ForeignKeys[5].RefTable = EmailTemplatesTable
	DeliveryOptionsTable.ForeignKeys[6].RefTable = PackagingsTable
	DeliveryOptionBringsTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionBringsTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryOptionDaOsTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionDaOsTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryOptionDfsTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionDfsTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryOptionDsVsTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionDsVsTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryOptionEasyPostsTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionEasyPostsTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryOptionGlSsTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionGlSsTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryOptionPostNordsTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionPostNordsTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryOptionUspSsTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionUspSsTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryRulesTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryRulesTable.ForeignKeys[1].RefTable = TenantsTable
	DeliveryRulesTable.ForeignKeys[2].RefTable = CurrenciesTable
	DeliveryRuleConstraintsTable.ForeignKeys[0].RefTable = TenantsTable
	DeliveryRuleConstraintsTable.ForeignKeys[1].RefTable = DeliveryRuleConstraintGroupsTable
	DeliveryRuleConstraintGroupsTable.ForeignKeys[0].RefTable = DeliveryRulesTable
	DeliveryRuleConstraintGroupsTable.ForeignKeys[1].RefTable = TenantsTable
	DocumentsTable.ForeignKeys[0].RefTable = TenantsTable
	DocumentsTable.ForeignKeys[1].RefTable = CarrierBrandsTable
	DocumentFilesTable.ForeignKeys[0].RefTable = CollisTable
	DocumentFilesTable.ForeignKeys[1].RefTable = TenantsTable
	DocumentFilesTable.ForeignKeys[2].RefTable = ShipmentParcelsTable
	EmailTemplatesTable.ForeignKeys[0].RefTable = TenantsTable
	HypothesisTestsTable.ForeignKeys[0].RefTable = TenantsTable
	HypothesisTestsTable.ForeignKeys[1].RefTable = ConnectionsTable
	HypothesisTestDeliveryOptionsTable.ForeignKeys[0].RefTable = HypothesisTestsTable
	HypothesisTestDeliveryOptionsTable.ForeignKeys[1].RefTable = TenantsTable
	HypothesisTestDeliveryOptionLookupsTable.ForeignKeys[0].RefTable = TenantsTable
	HypothesisTestDeliveryOptionLookupsTable.ForeignKeys[1].RefTable = DeliveryOptionsTable
	HypothesisTestDeliveryOptionLookupsTable.ForeignKeys[2].RefTable = HypothesisTestDeliveryOptionRequestsTable
	HypothesisTestDeliveryOptionRequestsTable.ForeignKeys[0].RefTable = TenantsTable
	HypothesisTestDeliveryOptionRequestsTable.ForeignKeys[1].RefTable = HypothesisTestDeliveryOptionsTable
	InventoryItemsTable.ForeignKeys[0].RefTable = TenantsTable
	InventoryItemsTable.ForeignKeys[1].RefTable = CountriesTable
	InventoryItemsTable.ForeignKeys[2].RefTable = ProductVariantsTable
	LocationsTable.ForeignKeys[0].RefTable = TenantsTable
	LocationsTable.ForeignKeys[1].RefTable = AddressesTable
	NotificationsTable.ForeignKeys[0].RefTable = TenantsTable
	NotificationsTable.ForeignKeys[1].RefTable = ConnectionsTable
	NotificationsTable.ForeignKeys[2].RefTable = EmailTemplatesTable
	OtkRequestsTable.ForeignKeys[0].RefTable = TenantsTable
	OtkRequestsTable.ForeignKeys[1].RefTable = UsersTable
	OrdersTable.ForeignKeys[0].RefTable = ConnectionsTable
	OrdersTable.ForeignKeys[1].RefTable = ConsolidationsTable
	OrdersTable.ForeignKeys[2].RefTable = HypothesisTestDeliveryOptionRequestsTable
	OrdersTable.ForeignKeys[3].RefTable = TenantsTable
	OrdersTable.ForeignKeys[4].RefTable = PalletsTable
	OrderHistoriesTable.ForeignKeys[0].RefTable = ChangeHistoriesTable
	OrderHistoriesTable.ForeignKeys[1].RefTable = OrdersTable
	OrderHistoriesTable.ForeignKeys[2].RefTable = TenantsTable
	OrderLinesTable.ForeignKeys[0].RefTable = CollisTable
	OrderLinesTable.ForeignKeys[1].RefTable = TenantsTable
	OrderLinesTable.ForeignKeys[2].RefTable = ProductVariantsTable
	OrderLinesTable.ForeignKeys[3].RefTable = CurrenciesTable
	OrderSendersTable.ForeignKeys[0].RefTable = TenantsTable
	PackagingsTable.ForeignKeys[0].RefTable = TenantsTable
	PackagingsTable.ForeignKeys[1].RefTable = CarrierBrandsTable
	PackagingDfsTable.ForeignKeys[0].RefTable = PackagingsTable
	PackagingDfsTable.ForeignKeys[1].RefTable = TenantsTable
	PackagingUspSsTable.ForeignKeys[0].RefTable = PackagingsTable
	PackagingUspSsTable.ForeignKeys[1].RefTable = TenantsTable
	PackagingUspSsTable.ForeignKeys[2].RefTable = PackagingUSPSRateIndicatorsTable
	PackagingUspSsTable.ForeignKeys[3].RefTable = PackagingUSPSProcessingCategoriesTable
	PalletsTable.ForeignKeys[0].RefTable = ConsolidationsTable
	PalletsTable.ForeignKeys[1].RefTable = TenantsTable
	PalletsTable.ForeignKeys[2].RefTable = PackagingsTable
	ParcelShopsTable.ForeignKeys[0].RefTable = CarrierBrandsTable
	ParcelShopBringsTable.ForeignKeys[0].RefTable = ParcelShopsTable
	ParcelShopDaOsTable.ForeignKeys[0].RefTable = ParcelShopsTable
	ParcelShopGlSsTable.ForeignKeys[0].RefTable = ParcelShopsTable
	ParcelShopPostNordsTable.ForeignKeys[0].RefTable = ParcelShopsTable
	PlanHistoriesTable.ForeignKeys[0].RefTable = ChangeHistoriesTable
	PlanHistoriesTable.ForeignKeys[1].RefTable = PlansTable
	PlanHistoriesTable.ForeignKeys[2].RefTable = TenantsTable
	PlanHistoriesTable.ForeignKeys[3].RefTable = UsersTable
	PrintJobsTable.ForeignKeys[0].RefTable = TenantsTable
	PrintJobsTable.ForeignKeys[1].RefTable = PrintersTable
	PrintJobsTable.ForeignKeys[2].RefTable = CollisTable
	PrintJobsTable.ForeignKeys[3].RefTable = ShipmentParcelsTable
	PrintersTable.ForeignKeys[0].RefTable = TenantsTable
	PrintersTable.ForeignKeys[1].RefTable = WorkstationsTable
	ProductsTable.ForeignKeys[0].RefTable = TenantsTable
	ProductImagesTable.ForeignKeys[0].RefTable = TenantsTable
	ProductImagesTable.ForeignKeys[1].RefTable = ProductsTable
	ProductTagsTable.ForeignKeys[0].RefTable = TenantsTable
	ProductVariantsTable.ForeignKeys[0].RefTable = ProductsTable
	ProductVariantsTable.ForeignKeys[1].RefTable = TenantsTable
	ReturnCollisTable.ForeignKeys[0].RefTable = OrdersTable
	ReturnCollisTable.ForeignKeys[1].RefTable = TenantsTable
	ReturnCollisTable.ForeignKeys[2].RefTable = AddressesTable
	ReturnCollisTable.ForeignKeys[3].RefTable = AddressesTable
	ReturnCollisTable.ForeignKeys[4].RefTable = DeliveryOptionsTable
	ReturnCollisTable.ForeignKeys[5].RefTable = ReturnPortalsTable
	ReturnCollisTable.ForeignKeys[6].RefTable = PackagingsTable
	ReturnColliHistoriesTable.ForeignKeys[0].RefTable = ChangeHistoriesTable
	ReturnColliHistoriesTable.ForeignKeys[1].RefTable = ReturnCollisTable
	ReturnColliHistoriesTable.ForeignKeys[2].RefTable = TenantsTable
	ReturnOrderLinesTable.ForeignKeys[0].RefTable = ReturnCollisTable
	ReturnOrderLinesTable.ForeignKeys[1].RefTable = TenantsTable
	ReturnOrderLinesTable.ForeignKeys[2].RefTable = OrderLinesTable
	ReturnOrderLinesTable.ForeignKeys[3].RefTable = ReturnPortalClaimsTable
	ReturnPortalsTable.ForeignKeys[0].RefTable = TenantsTable
	ReturnPortalsTable.ForeignKeys[1].RefTable = EmailTemplatesTable
	ReturnPortalsTable.ForeignKeys[2].RefTable = EmailTemplatesTable
	ReturnPortalsTable.ForeignKeys[3].RefTable = EmailTemplatesTable
	ReturnPortalsTable.ForeignKeys[4].RefTable = EmailTemplatesTable
	ReturnPortalClaimsTable.ForeignKeys[0].RefTable = ReturnPortalsTable
	ReturnPortalClaimsTable.ForeignKeys[1].RefTable = TenantsTable
	ReturnPortalClaimsTable.ForeignKeys[2].RefTable = LocationsTable
	SeatGroupsTable.ForeignKeys[0].RefTable = TenantsTable
	SeatGroupAccessRightsTable.ForeignKeys[0].RefTable = TenantsTable
	SeatGroupAccessRightsTable.ForeignKeys[1].RefTable = AccessRightsTable
	SeatGroupAccessRightsTable.ForeignKeys[2].RefTable = SeatGroupsTable
	ShipmentsTable.ForeignKeys[0].RefTable = TenantsTable
	ShipmentsTable.ForeignKeys[1].RefTable = CarriersTable
	ShipmentBringsTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentBringsTable.ForeignKeys[1].RefTable = TenantsTable
	ShipmentDaOsTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentDaOsTable.ForeignKeys[1].RefTable = TenantsTable
	ShipmentDfsTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentDfsTable.ForeignKeys[1].RefTable = TenantsTable
	ShipmentDsVsTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentDsVsTable.ForeignKeys[1].RefTable = TenantsTable
	ShipmentEasyPostsTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentEasyPostsTable.ForeignKeys[1].RefTable = TenantsTable
	ShipmentGlSsTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentGlSsTable.ForeignKeys[1].RefTable = TenantsTable
	ShipmentHistoriesTable.ForeignKeys[0].RefTable = ChangeHistoriesTable
	ShipmentHistoriesTable.ForeignKeys[1].RefTable = ShipmentsTable
	ShipmentHistoriesTable.ForeignKeys[2].RefTable = TenantsTable
	ShipmentPalletsTable.ForeignKeys[0].RefTable = PalletsTable
	ShipmentPalletsTable.ForeignKeys[1].RefTable = ShipmentsTable
	ShipmentPalletsTable.ForeignKeys[2].RefTable = TenantsTable
	ShipmentParcelsTable.ForeignKeys[0].RefTable = CollisTable
	ShipmentParcelsTable.ForeignKeys[1].RefTable = ShipmentsTable
	ShipmentParcelsTable.ForeignKeys[2].RefTable = TenantsTable
	ShipmentParcelsTable.ForeignKeys[3].RefTable = PackagingsTable
	ShipmentPostNordsTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentPostNordsTable.ForeignKeys[1].RefTable = TenantsTable
	ShipmentUspSsTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentUspSsTable.ForeignKeys[1].RefTable = TenantsTable
	SignupOptionsTable.ForeignKeys[0].RefTable = UsersTable
	SystemEventsTable.ForeignKeys[0].RefTable = TenantsTable
	TenantsTable.ForeignKeys[0].RefTable = PlansTable
	TenantsTable.ForeignKeys[1].RefTable = AddressesTable
	TenantsTable.ForeignKeys[2].RefTable = LanguagesTable
	TenantsTable.ForeignKeys[3].RefTable = ContactsTable
	TenantsTable.ForeignKeys[4].RefTable = ContactsTable
	UsersTable.ForeignKeys[0].RefTable = SeatGroupsTable
	UsersTable.ForeignKeys[1].RefTable = TenantsTable
	UsersTable.ForeignKeys[2].RefTable = LanguagesTable
	UserSeatsTable.ForeignKeys[0].RefTable = TenantsTable
	WorkspaceRecentScansTable.ForeignKeys[0].RefTable = TenantsTable
	WorkspaceRecentScansTable.ForeignKeys[1].RefTable = ShipmentParcelsTable
	WorkspaceRecentScansTable.ForeignKeys[2].RefTable = UsersTable
	WorkstationsTable.ForeignKeys[0].RefTable = UsersTable
	WorkstationsTable.ForeignKeys[1].RefTable = TenantsTable
	WorkstationsTable.ForeignKeys[2].RefTable = UsersTable
	CarrierAdditionalServiceGLSCountriesConsigneeTable.ForeignKeys[0].RefTable = CarrierAdditionalServiceGlSsTable
	CarrierAdditionalServiceGLSCountriesConsigneeTable.ForeignKeys[1].RefTable = CountriesTable
	CarrierAdditionalServiceGLSCountriesConsignorTable.ForeignKeys[0].RefTable = CarrierAdditionalServiceGlSsTable
	CarrierAdditionalServiceGLSCountriesConsignorTable.ForeignKeys[1].RefTable = CountriesTable
	CarrierAdditionalServicePostNordCountriesConsigneeTable.ForeignKeys[0].RefTable = CarrierAdditionalServicePostNordsTable
	CarrierAdditionalServicePostNordCountriesConsigneeTable.ForeignKeys[1].RefTable = CountriesTable
	CarrierAdditionalServicePostNordCountriesConsignorTable.ForeignKeys[0].RefTable = CarrierAdditionalServicePostNordsTable
	CarrierAdditionalServicePostNordCountriesConsignorTable.ForeignKeys[1].RefTable = CountriesTable
	CarrierServiceDAOCarrierAdditionalServiceDAOTable.ForeignKeys[0].RefTable = CarrierServiceDaOsTable
	CarrierServiceDAOCarrierAdditionalServiceDAOTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceDaOsTable
	CarrierServiceDFCarrierAdditionalServiceDFTable.ForeignKeys[0].RefTable = CarrierServiceDfsTable
	CarrierServiceDFCarrierAdditionalServiceDFTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceDfsTable
	CarrierServiceDSVCarrierAdditionalServiceDSVTable.ForeignKeys[0].RefTable = CarrierServiceDsVsTable
	CarrierServiceDSVCarrierAdditionalServiceDSVTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceDsVsTable
	CarrierServiceEasyPostCarrierAddServEasyPostTable.ForeignKeys[0].RefTable = CarrierServiceEasyPostsTable
	CarrierServiceEasyPostCarrierAddServEasyPostTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceEasyPostsTable
	ColliCancelledShipmentParcelTable.ForeignKeys[0].RefTable = CollisTable
	ColliCancelledShipmentParcelTable.ForeignKeys[1].RefTable = ShipmentParcelsTable
	CountryDeliveryRuleTable.ForeignKeys[0].RefTable = CountriesTable
	CountryDeliveryRuleTable.ForeignKeys[1].RefTable = DeliveryRulesTable
	DeliveryOptionClickCollectLocationTable.ForeignKeys[0].RefTable = DeliveryOptionsTable
	DeliveryOptionClickCollectLocationTable.ForeignKeys[1].RefTable = LocationsTable
	DeliveryOptionBringCarrierAdditionalServiceBringTable.ForeignKeys[0].RefTable = DeliveryOptionBringsTable
	DeliveryOptionBringCarrierAdditionalServiceBringTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceBringsTable
	DeliveryOptionDAOCarrierAdditionalServiceDAOTable.ForeignKeys[0].RefTable = DeliveryOptionDaOsTable
	DeliveryOptionDAOCarrierAdditionalServiceDAOTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceDaOsTable
	DeliveryOptionDFCarrierAdditionalServiceDFTable.ForeignKeys[0].RefTable = DeliveryOptionDfsTable
	DeliveryOptionDFCarrierAdditionalServiceDFTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceDfsTable
	DeliveryOptionDSVCarrierAdditionalServiceDSVTable.ForeignKeys[0].RefTable = DeliveryOptionDsVsTable
	DeliveryOptionDSVCarrierAdditionalServiceDSVTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceDsVsTable
	DeliveryOptionEasyPostCarrierAddServEasyPostTable.ForeignKeys[0].RefTable = DeliveryOptionEasyPostsTable
	DeliveryOptionEasyPostCarrierAddServEasyPostTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceEasyPostsTable
	DeliveryOptionGLSCarrierAdditionalServiceGLSTable.ForeignKeys[0].RefTable = DeliveryOptionGlSsTable
	DeliveryOptionGLSCarrierAdditionalServiceGLSTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceGlSsTable
	DeliveryOptionPostNordCarrierAddServPostNordTable.ForeignKeys[0].RefTable = DeliveryOptionPostNordsTable
	DeliveryOptionPostNordCarrierAddServPostNordTable.ForeignKeys[1].RefTable = CarrierAdditionalServicePostNordsTable
	DeliveryOptionUSPSCarrierAdditionalServiceUSPSTable.ForeignKeys[0].RefTable = DeliveryOptionUspSsTable
	DeliveryOptionUSPSCarrierAdditionalServiceUSPSTable.ForeignKeys[1].RefTable = CarrierAdditionalServiceUspSsTable
	HypothesisTestDeliveryOptionDeliveryOptionGroupOneTable.ForeignKeys[0].RefTable = HypothesisTestDeliveryOptionsTable
	HypothesisTestDeliveryOptionDeliveryOptionGroupOneTable.ForeignKeys[1].RefTable = DeliveryOptionsTable
	HypothesisTestDeliveryOptionDeliveryOptionGroupTwoTable.ForeignKeys[0].RefTable = HypothesisTestDeliveryOptionsTable
	HypothesisTestDeliveryOptionDeliveryOptionGroupTwoTable.ForeignKeys[1].RefTable = DeliveryOptionsTable
	LocationLocationTagsTable.ForeignKeys[0].RefTable = LocationsTable
	LocationLocationTagsTable.ForeignKeys[1].RefTable = LocationTagsTable
	PalletCancelledShipmentPalletTable.ForeignKeys[0].RefTable = PalletsTable
	PalletCancelledShipmentPalletTable.ForeignKeys[1].RefTable = ShipmentPalletsTable
	ProductImageProductVariantTable.ForeignKeys[0].RefTable = ProductImagesTable
	ProductImageProductVariantTable.ForeignKeys[1].RefTable = ProductVariantsTable
	ProductTagProductsTable.ForeignKeys[0].RefTable = ProductTagsTable
	ProductTagProductsTable.ForeignKeys[1].RefTable = ProductsTable
	ReturnPortalReturnLocationTable.ForeignKeys[0].RefTable = ReturnPortalsTable
	ReturnPortalReturnLocationTable.ForeignKeys[1].RefTable = LocationsTable
	ReturnPortalDeliveryOptionsTable.ForeignKeys[0].RefTable = ReturnPortalsTable
	ReturnPortalDeliveryOptionsTable.ForeignKeys[1].RefTable = DeliveryOptionsTable
	ShipmentOldConsolidationTable.ForeignKeys[0].RefTable = ShipmentsTable
	ShipmentOldConsolidationTable.ForeignKeys[1].RefTable = ConsolidationsTable
	TenantConnectOptionCarriersTable.ForeignKeys[0].RefTable = TenantsTable
	TenantConnectOptionCarriersTable.ForeignKeys[1].RefTable = ConnectOptionCarriersTable
	TenantConnectOptionPlatformsTable.ForeignKeys[0].RefTable = TenantsTable
	TenantConnectOptionPlatformsTable.ForeignKeys[1].RefTable = ConnectOptionPlatformsTable
}
