// Code generated by ent, DO NOT EDIT.

package hypothesistestdeliveryoptionrequest

import (
	"time"

	"delivrio.io/go/ent/predicate"
	"delivrio.io/shared-utils/pulid"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldTenantID, v))
}

// OrderHash applies equality check predicate on the "order_hash" field. It's identical to OrderHashEQ.
func OrderHash(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldOrderHash, v))
}

// ShippingAddressHash applies equality check predicate on the "shipping_address_hash" field. It's identical to ShippingAddressHashEQ.
func ShippingAddressHash(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldShippingAddressHash, v))
}

// IsControlGroup applies equality check predicate on the "is_control_group" field. It's identical to IsControlGroupEQ.
func IsControlGroup(v bool) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldIsControlGroup, v))
}

// RequestCount applies equality check predicate on the "request_count" field. It's identical to RequestCountEQ.
func RequestCount(v uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldRequestCount, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldCreatedAt, v))
}

// LastRequestedAt applies equality check predicate on the "last_requested_at" field. It's identical to LastRequestedAtEQ.
func LastRequestedAt(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldLastRequestedAt, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	vc := string(v)
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldContains(FieldTenantID, vc))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	vc := string(v)
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldHasPrefix(FieldTenantID, vc))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	vc := string(v)
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldHasSuffix(FieldTenantID, vc))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	vc := string(v)
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEqualFold(FieldTenantID, vc))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v pulid.ID) predicate.HypothesisTestDeliveryOptionRequest {
	vc := string(v)
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldContainsFold(FieldTenantID, vc))
}

// OrderHashEQ applies the EQ predicate on the "order_hash" field.
func OrderHashEQ(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldOrderHash, v))
}

// OrderHashNEQ applies the NEQ predicate on the "order_hash" field.
func OrderHashNEQ(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNEQ(FieldOrderHash, v))
}

// OrderHashIn applies the In predicate on the "order_hash" field.
func OrderHashIn(vs ...string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldIn(FieldOrderHash, vs...))
}

// OrderHashNotIn applies the NotIn predicate on the "order_hash" field.
func OrderHashNotIn(vs ...string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNotIn(FieldOrderHash, vs...))
}

// OrderHashGT applies the GT predicate on the "order_hash" field.
func OrderHashGT(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGT(FieldOrderHash, v))
}

// OrderHashGTE applies the GTE predicate on the "order_hash" field.
func OrderHashGTE(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGTE(FieldOrderHash, v))
}

// OrderHashLT applies the LT predicate on the "order_hash" field.
func OrderHashLT(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLT(FieldOrderHash, v))
}

// OrderHashLTE applies the LTE predicate on the "order_hash" field.
func OrderHashLTE(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLTE(FieldOrderHash, v))
}

// OrderHashContains applies the Contains predicate on the "order_hash" field.
func OrderHashContains(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldContains(FieldOrderHash, v))
}

// OrderHashHasPrefix applies the HasPrefix predicate on the "order_hash" field.
func OrderHashHasPrefix(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldHasPrefix(FieldOrderHash, v))
}

// OrderHashHasSuffix applies the HasSuffix predicate on the "order_hash" field.
func OrderHashHasSuffix(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldHasSuffix(FieldOrderHash, v))
}

// OrderHashEqualFold applies the EqualFold predicate on the "order_hash" field.
func OrderHashEqualFold(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEqualFold(FieldOrderHash, v))
}

// OrderHashContainsFold applies the ContainsFold predicate on the "order_hash" field.
func OrderHashContainsFold(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldContainsFold(FieldOrderHash, v))
}

// ShippingAddressHashEQ applies the EQ predicate on the "shipping_address_hash" field.
func ShippingAddressHashEQ(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldShippingAddressHash, v))
}

// ShippingAddressHashNEQ applies the NEQ predicate on the "shipping_address_hash" field.
func ShippingAddressHashNEQ(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNEQ(FieldShippingAddressHash, v))
}

// ShippingAddressHashIn applies the In predicate on the "shipping_address_hash" field.
func ShippingAddressHashIn(vs ...string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldIn(FieldShippingAddressHash, vs...))
}

// ShippingAddressHashNotIn applies the NotIn predicate on the "shipping_address_hash" field.
func ShippingAddressHashNotIn(vs ...string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNotIn(FieldShippingAddressHash, vs...))
}

// ShippingAddressHashGT applies the GT predicate on the "shipping_address_hash" field.
func ShippingAddressHashGT(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGT(FieldShippingAddressHash, v))
}

// ShippingAddressHashGTE applies the GTE predicate on the "shipping_address_hash" field.
func ShippingAddressHashGTE(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGTE(FieldShippingAddressHash, v))
}

// ShippingAddressHashLT applies the LT predicate on the "shipping_address_hash" field.
func ShippingAddressHashLT(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLT(FieldShippingAddressHash, v))
}

// ShippingAddressHashLTE applies the LTE predicate on the "shipping_address_hash" field.
func ShippingAddressHashLTE(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLTE(FieldShippingAddressHash, v))
}

// ShippingAddressHashContains applies the Contains predicate on the "shipping_address_hash" field.
func ShippingAddressHashContains(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldContains(FieldShippingAddressHash, v))
}

// ShippingAddressHashHasPrefix applies the HasPrefix predicate on the "shipping_address_hash" field.
func ShippingAddressHashHasPrefix(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldHasPrefix(FieldShippingAddressHash, v))
}

// ShippingAddressHashHasSuffix applies the HasSuffix predicate on the "shipping_address_hash" field.
func ShippingAddressHashHasSuffix(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldHasSuffix(FieldShippingAddressHash, v))
}

// ShippingAddressHashEqualFold applies the EqualFold predicate on the "shipping_address_hash" field.
func ShippingAddressHashEqualFold(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEqualFold(FieldShippingAddressHash, v))
}

// ShippingAddressHashContainsFold applies the ContainsFold predicate on the "shipping_address_hash" field.
func ShippingAddressHashContainsFold(v string) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldContainsFold(FieldShippingAddressHash, v))
}

// IsControlGroupEQ applies the EQ predicate on the "is_control_group" field.
func IsControlGroupEQ(v bool) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldIsControlGroup, v))
}

// IsControlGroupNEQ applies the NEQ predicate on the "is_control_group" field.
func IsControlGroupNEQ(v bool) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNEQ(FieldIsControlGroup, v))
}

// RequestCountEQ applies the EQ predicate on the "request_count" field.
func RequestCountEQ(v uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldRequestCount, v))
}

// RequestCountNEQ applies the NEQ predicate on the "request_count" field.
func RequestCountNEQ(v uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNEQ(FieldRequestCount, v))
}

// RequestCountIn applies the In predicate on the "request_count" field.
func RequestCountIn(vs ...uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldIn(FieldRequestCount, vs...))
}

// RequestCountNotIn applies the NotIn predicate on the "request_count" field.
func RequestCountNotIn(vs ...uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNotIn(FieldRequestCount, vs...))
}

// RequestCountGT applies the GT predicate on the "request_count" field.
func RequestCountGT(v uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGT(FieldRequestCount, v))
}

// RequestCountGTE applies the GTE predicate on the "request_count" field.
func RequestCountGTE(v uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGTE(FieldRequestCount, v))
}

// RequestCountLT applies the LT predicate on the "request_count" field.
func RequestCountLT(v uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLT(FieldRequestCount, v))
}

// RequestCountLTE applies the LTE predicate on the "request_count" field.
func RequestCountLTE(v uint) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLTE(FieldRequestCount, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLTE(FieldCreatedAt, v))
}

// LastRequestedAtEQ applies the EQ predicate on the "last_requested_at" field.
func LastRequestedAtEQ(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldEQ(FieldLastRequestedAt, v))
}

// LastRequestedAtNEQ applies the NEQ predicate on the "last_requested_at" field.
func LastRequestedAtNEQ(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNEQ(FieldLastRequestedAt, v))
}

// LastRequestedAtIn applies the In predicate on the "last_requested_at" field.
func LastRequestedAtIn(vs ...time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldIn(FieldLastRequestedAt, vs...))
}

// LastRequestedAtNotIn applies the NotIn predicate on the "last_requested_at" field.
func LastRequestedAtNotIn(vs ...time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldNotIn(FieldLastRequestedAt, vs...))
}

// LastRequestedAtGT applies the GT predicate on the "last_requested_at" field.
func LastRequestedAtGT(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGT(FieldLastRequestedAt, v))
}

// LastRequestedAtGTE applies the GTE predicate on the "last_requested_at" field.
func LastRequestedAtGTE(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldGTE(FieldLastRequestedAt, v))
}

// LastRequestedAtLT applies the LT predicate on the "last_requested_at" field.
func LastRequestedAtLT(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLT(FieldLastRequestedAt, v))
}

// LastRequestedAtLTE applies the LTE predicate on the "last_requested_at" field.
func LastRequestedAtLTE(v time.Time) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.FieldLTE(FieldLastRequestedAt, v))
}

// HasTenant applies the HasEdge predicate on the "tenant" edge.
func HasTenant() predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, TenantTable, TenantColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTenantWith applies the HasEdge predicate on the "tenant" edge with a given conditions (other predicates).
func HasTenantWith(preds ...predicate.Tenant) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(func(s *sql.Selector) {
		step := newTenantStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasHypothesisTestDeliveryOption applies the HasEdge predicate on the "hypothesis_test_delivery_option" edge.
func HasHypothesisTestDeliveryOption() predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, HypothesisTestDeliveryOptionTable, HypothesisTestDeliveryOptionColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHypothesisTestDeliveryOptionWith applies the HasEdge predicate on the "hypothesis_test_delivery_option" edge with a given conditions (other predicates).
func HasHypothesisTestDeliveryOptionWith(preds ...predicate.HypothesisTestDeliveryOption) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(func(s *sql.Selector) {
		step := newHypothesisTestDeliveryOptionStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasOrder applies the HasEdge predicate on the "order" edge.
func HasOrder() predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, false, OrderTable, OrderColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOrderWith applies the HasEdge predicate on the "order" edge with a given conditions (other predicates).
func HasOrderWith(preds ...predicate.Order) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(func(s *sql.Selector) {
		step := newOrderStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasHypothesisTestDeliveryOptionLookup applies the HasEdge predicate on the "hypothesis_test_delivery_option_lookup" edge.
func HasHypothesisTestDeliveryOptionLookup() predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, HypothesisTestDeliveryOptionLookupTable, HypothesisTestDeliveryOptionLookupColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasHypothesisTestDeliveryOptionLookupWith applies the HasEdge predicate on the "hypothesis_test_delivery_option_lookup" edge with a given conditions (other predicates).
func HasHypothesisTestDeliveryOptionLookupWith(preds ...predicate.HypothesisTestDeliveryOptionLookup) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(func(s *sql.Selector) {
		step := newHypothesisTestDeliveryOptionLookupStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.HypothesisTestDeliveryOptionRequest) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.HypothesisTestDeliveryOptionRequest) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.HypothesisTestDeliveryOptionRequest) predicate.HypothesisTestDeliveryOptionRequest {
	return predicate.HypothesisTestDeliveryOptionRequest(sql.NotPredicates(p))
}
