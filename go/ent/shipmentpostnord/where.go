// Code generated by ent, DO NOT EDIT.

package shipmentpostnord

import (
	"delivrio.io/go/ent/predicate"
	"delivrio.io/shared-utils/pulid"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldTenantID, v))
}

// BookingID applies equality check predicate on the "booking_id" field. It's identical to BookingIDEQ.
func BookingID(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldBookingID, v))
}

// ItemID applies equality check predicate on the "item_id" field. It's identical to ItemIDEQ.
func ItemID(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldItemID, v))
}

// ShipmentReferenceNo applies equality check predicate on the "shipment_reference_no" field. It's identical to ShipmentReferenceNoEQ.
func ShipmentReferenceNo(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldShipmentReferenceNo, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v pulid.ID) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v pulid.ID) predicate.ShipmentPostNord {
	vc := string(v)
	return predicate.ShipmentPostNord(sql.FieldContains(FieldTenantID, vc))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v pulid.ID) predicate.ShipmentPostNord {
	vc := string(v)
	return predicate.ShipmentPostNord(sql.FieldHasPrefix(FieldTenantID, vc))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v pulid.ID) predicate.ShipmentPostNord {
	vc := string(v)
	return predicate.ShipmentPostNord(sql.FieldHasSuffix(FieldTenantID, vc))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v pulid.ID) predicate.ShipmentPostNord {
	vc := string(v)
	return predicate.ShipmentPostNord(sql.FieldEqualFold(FieldTenantID, vc))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v pulid.ID) predicate.ShipmentPostNord {
	vc := string(v)
	return predicate.ShipmentPostNord(sql.FieldContainsFold(FieldTenantID, vc))
}

// BookingIDEQ applies the EQ predicate on the "booking_id" field.
func BookingIDEQ(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldBookingID, v))
}

// BookingIDNEQ applies the NEQ predicate on the "booking_id" field.
func BookingIDNEQ(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNEQ(FieldBookingID, v))
}

// BookingIDIn applies the In predicate on the "booking_id" field.
func BookingIDIn(vs ...string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldIn(FieldBookingID, vs...))
}

// BookingIDNotIn applies the NotIn predicate on the "booking_id" field.
func BookingIDNotIn(vs ...string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNotIn(FieldBookingID, vs...))
}

// BookingIDGT applies the GT predicate on the "booking_id" field.
func BookingIDGT(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGT(FieldBookingID, v))
}

// BookingIDGTE applies the GTE predicate on the "booking_id" field.
func BookingIDGTE(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGTE(FieldBookingID, v))
}

// BookingIDLT applies the LT predicate on the "booking_id" field.
func BookingIDLT(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLT(FieldBookingID, v))
}

// BookingIDLTE applies the LTE predicate on the "booking_id" field.
func BookingIDLTE(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLTE(FieldBookingID, v))
}

// BookingIDContains applies the Contains predicate on the "booking_id" field.
func BookingIDContains(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldContains(FieldBookingID, v))
}

// BookingIDHasPrefix applies the HasPrefix predicate on the "booking_id" field.
func BookingIDHasPrefix(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldHasPrefix(FieldBookingID, v))
}

// BookingIDHasSuffix applies the HasSuffix predicate on the "booking_id" field.
func BookingIDHasSuffix(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldHasSuffix(FieldBookingID, v))
}

// BookingIDEqualFold applies the EqualFold predicate on the "booking_id" field.
func BookingIDEqualFold(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEqualFold(FieldBookingID, v))
}

// BookingIDContainsFold applies the ContainsFold predicate on the "booking_id" field.
func BookingIDContainsFold(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldContainsFold(FieldBookingID, v))
}

// ItemIDEQ applies the EQ predicate on the "item_id" field.
func ItemIDEQ(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldItemID, v))
}

// ItemIDNEQ applies the NEQ predicate on the "item_id" field.
func ItemIDNEQ(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNEQ(FieldItemID, v))
}

// ItemIDIn applies the In predicate on the "item_id" field.
func ItemIDIn(vs ...string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldIn(FieldItemID, vs...))
}

// ItemIDNotIn applies the NotIn predicate on the "item_id" field.
func ItemIDNotIn(vs ...string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNotIn(FieldItemID, vs...))
}

// ItemIDGT applies the GT predicate on the "item_id" field.
func ItemIDGT(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGT(FieldItemID, v))
}

// ItemIDGTE applies the GTE predicate on the "item_id" field.
func ItemIDGTE(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGTE(FieldItemID, v))
}

// ItemIDLT applies the LT predicate on the "item_id" field.
func ItemIDLT(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLT(FieldItemID, v))
}

// ItemIDLTE applies the LTE predicate on the "item_id" field.
func ItemIDLTE(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLTE(FieldItemID, v))
}

// ItemIDContains applies the Contains predicate on the "item_id" field.
func ItemIDContains(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldContains(FieldItemID, v))
}

// ItemIDHasPrefix applies the HasPrefix predicate on the "item_id" field.
func ItemIDHasPrefix(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldHasPrefix(FieldItemID, v))
}

// ItemIDHasSuffix applies the HasSuffix predicate on the "item_id" field.
func ItemIDHasSuffix(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldHasSuffix(FieldItemID, v))
}

// ItemIDEqualFold applies the EqualFold predicate on the "item_id" field.
func ItemIDEqualFold(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEqualFold(FieldItemID, v))
}

// ItemIDContainsFold applies the ContainsFold predicate on the "item_id" field.
func ItemIDContainsFold(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldContainsFold(FieldItemID, v))
}

// ShipmentReferenceNoEQ applies the EQ predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoEQ(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEQ(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoNEQ applies the NEQ predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoNEQ(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNEQ(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoIn applies the In predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoIn(vs ...string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldIn(FieldShipmentReferenceNo, vs...))
}

// ShipmentReferenceNoNotIn applies the NotIn predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoNotIn(vs ...string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldNotIn(FieldShipmentReferenceNo, vs...))
}

// ShipmentReferenceNoGT applies the GT predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoGT(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGT(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoGTE applies the GTE predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoGTE(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldGTE(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoLT applies the LT predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoLT(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLT(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoLTE applies the LTE predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoLTE(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldLTE(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoContains applies the Contains predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoContains(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldContains(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoHasPrefix applies the HasPrefix predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoHasPrefix(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldHasPrefix(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoHasSuffix applies the HasSuffix predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoHasSuffix(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldHasSuffix(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoEqualFold applies the EqualFold predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoEqualFold(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldEqualFold(FieldShipmentReferenceNo, v))
}

// ShipmentReferenceNoContainsFold applies the ContainsFold predicate on the "shipment_reference_no" field.
func ShipmentReferenceNoContainsFold(v string) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.FieldContainsFold(FieldShipmentReferenceNo, v))
}

// HasTenant applies the HasEdge predicate on the "tenant" edge.
func HasTenant() predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, TenantTable, TenantColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTenantWith applies the HasEdge predicate on the "tenant" edge with a given conditions (other predicates).
func HasTenantWith(preds ...predicate.Tenant) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(func(s *sql.Selector) {
		step := newTenantStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasShipment applies the HasEdge predicate on the "shipment" edge.
func HasShipment() predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, ShipmentTable, ShipmentColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasShipmentWith applies the HasEdge predicate on the "shipment" edge with a given conditions (other predicates).
func HasShipmentWith(preds ...predicate.Shipment) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(func(s *sql.Selector) {
		step := newShipmentStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ShipmentPostNord) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ShipmentPostNord) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ShipmentPostNord) predicate.ShipmentPostNord {
	return predicate.ShipmentPostNord(sql.NotPredicates(p))
}
