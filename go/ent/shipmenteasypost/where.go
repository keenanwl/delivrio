// Code generated by ent, DO NOT EDIT.

package shipmenteasypost

import (
	"time"

	"delivrio.io/go/ent/predicate"
	"delivrio.io/shared-utils/pulid"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldTenantID, v))
}

// TrackingNumber applies equality check predicate on the "tracking_number" field. It's identical to TrackingNumberEQ.
func TrackingNumber(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldTrackingNumber, v))
}

// EpShipmentID applies equality check predicate on the "ep_shipment_id" field. It's identical to EpShipmentIDEQ.
func EpShipmentID(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldEpShipmentID, v))
}

// Rate applies equality check predicate on the "rate" field. It's identical to RateEQ.
func Rate(v float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldRate, v))
}

// EstDeliveryDate applies equality check predicate on the "est_delivery_date" field. It's identical to EstDeliveryDateEQ.
func EstDeliveryDate(v time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldEstDeliveryDate, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v pulid.ID) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v pulid.ID) predicate.ShipmentEasyPost {
	vc := string(v)
	return predicate.ShipmentEasyPost(sql.FieldContains(FieldTenantID, vc))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v pulid.ID) predicate.ShipmentEasyPost {
	vc := string(v)
	return predicate.ShipmentEasyPost(sql.FieldHasPrefix(FieldTenantID, vc))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v pulid.ID) predicate.ShipmentEasyPost {
	vc := string(v)
	return predicate.ShipmentEasyPost(sql.FieldHasSuffix(FieldTenantID, vc))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v pulid.ID) predicate.ShipmentEasyPost {
	vc := string(v)
	return predicate.ShipmentEasyPost(sql.FieldEqualFold(FieldTenantID, vc))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v pulid.ID) predicate.ShipmentEasyPost {
	vc := string(v)
	return predicate.ShipmentEasyPost(sql.FieldContainsFold(FieldTenantID, vc))
}

// TrackingNumberEQ applies the EQ predicate on the "tracking_number" field.
func TrackingNumberEQ(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldTrackingNumber, v))
}

// TrackingNumberNEQ applies the NEQ predicate on the "tracking_number" field.
func TrackingNumberNEQ(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNEQ(FieldTrackingNumber, v))
}

// TrackingNumberIn applies the In predicate on the "tracking_number" field.
func TrackingNumberIn(vs ...string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIn(FieldTrackingNumber, vs...))
}

// TrackingNumberNotIn applies the NotIn predicate on the "tracking_number" field.
func TrackingNumberNotIn(vs ...string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotIn(FieldTrackingNumber, vs...))
}

// TrackingNumberGT applies the GT predicate on the "tracking_number" field.
func TrackingNumberGT(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGT(FieldTrackingNumber, v))
}

// TrackingNumberGTE applies the GTE predicate on the "tracking_number" field.
func TrackingNumberGTE(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGTE(FieldTrackingNumber, v))
}

// TrackingNumberLT applies the LT predicate on the "tracking_number" field.
func TrackingNumberLT(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLT(FieldTrackingNumber, v))
}

// TrackingNumberLTE applies the LTE predicate on the "tracking_number" field.
func TrackingNumberLTE(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLTE(FieldTrackingNumber, v))
}

// TrackingNumberContains applies the Contains predicate on the "tracking_number" field.
func TrackingNumberContains(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldContains(FieldTrackingNumber, v))
}

// TrackingNumberHasPrefix applies the HasPrefix predicate on the "tracking_number" field.
func TrackingNumberHasPrefix(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldHasPrefix(FieldTrackingNumber, v))
}

// TrackingNumberHasSuffix applies the HasSuffix predicate on the "tracking_number" field.
func TrackingNumberHasSuffix(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldHasSuffix(FieldTrackingNumber, v))
}

// TrackingNumberIsNil applies the IsNil predicate on the "tracking_number" field.
func TrackingNumberIsNil() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIsNull(FieldTrackingNumber))
}

// TrackingNumberNotNil applies the NotNil predicate on the "tracking_number" field.
func TrackingNumberNotNil() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotNull(FieldTrackingNumber))
}

// TrackingNumberEqualFold applies the EqualFold predicate on the "tracking_number" field.
func TrackingNumberEqualFold(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEqualFold(FieldTrackingNumber, v))
}

// TrackingNumberContainsFold applies the ContainsFold predicate on the "tracking_number" field.
func TrackingNumberContainsFold(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldContainsFold(FieldTrackingNumber, v))
}

// EpShipmentIDEQ applies the EQ predicate on the "ep_shipment_id" field.
func EpShipmentIDEQ(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldEpShipmentID, v))
}

// EpShipmentIDNEQ applies the NEQ predicate on the "ep_shipment_id" field.
func EpShipmentIDNEQ(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNEQ(FieldEpShipmentID, v))
}

// EpShipmentIDIn applies the In predicate on the "ep_shipment_id" field.
func EpShipmentIDIn(vs ...string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIn(FieldEpShipmentID, vs...))
}

// EpShipmentIDNotIn applies the NotIn predicate on the "ep_shipment_id" field.
func EpShipmentIDNotIn(vs ...string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotIn(FieldEpShipmentID, vs...))
}

// EpShipmentIDGT applies the GT predicate on the "ep_shipment_id" field.
func EpShipmentIDGT(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGT(FieldEpShipmentID, v))
}

// EpShipmentIDGTE applies the GTE predicate on the "ep_shipment_id" field.
func EpShipmentIDGTE(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGTE(FieldEpShipmentID, v))
}

// EpShipmentIDLT applies the LT predicate on the "ep_shipment_id" field.
func EpShipmentIDLT(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLT(FieldEpShipmentID, v))
}

// EpShipmentIDLTE applies the LTE predicate on the "ep_shipment_id" field.
func EpShipmentIDLTE(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLTE(FieldEpShipmentID, v))
}

// EpShipmentIDContains applies the Contains predicate on the "ep_shipment_id" field.
func EpShipmentIDContains(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldContains(FieldEpShipmentID, v))
}

// EpShipmentIDHasPrefix applies the HasPrefix predicate on the "ep_shipment_id" field.
func EpShipmentIDHasPrefix(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldHasPrefix(FieldEpShipmentID, v))
}

// EpShipmentIDHasSuffix applies the HasSuffix predicate on the "ep_shipment_id" field.
func EpShipmentIDHasSuffix(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldHasSuffix(FieldEpShipmentID, v))
}

// EpShipmentIDIsNil applies the IsNil predicate on the "ep_shipment_id" field.
func EpShipmentIDIsNil() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIsNull(FieldEpShipmentID))
}

// EpShipmentIDNotNil applies the NotNil predicate on the "ep_shipment_id" field.
func EpShipmentIDNotNil() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotNull(FieldEpShipmentID))
}

// EpShipmentIDEqualFold applies the EqualFold predicate on the "ep_shipment_id" field.
func EpShipmentIDEqualFold(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEqualFold(FieldEpShipmentID, v))
}

// EpShipmentIDContainsFold applies the ContainsFold predicate on the "ep_shipment_id" field.
func EpShipmentIDContainsFold(v string) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldContainsFold(FieldEpShipmentID, v))
}

// RateEQ applies the EQ predicate on the "rate" field.
func RateEQ(v float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldRate, v))
}

// RateNEQ applies the NEQ predicate on the "rate" field.
func RateNEQ(v float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNEQ(FieldRate, v))
}

// RateIn applies the In predicate on the "rate" field.
func RateIn(vs ...float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIn(FieldRate, vs...))
}

// RateNotIn applies the NotIn predicate on the "rate" field.
func RateNotIn(vs ...float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotIn(FieldRate, vs...))
}

// RateGT applies the GT predicate on the "rate" field.
func RateGT(v float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGT(FieldRate, v))
}

// RateGTE applies the GTE predicate on the "rate" field.
func RateGTE(v float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGTE(FieldRate, v))
}

// RateLT applies the LT predicate on the "rate" field.
func RateLT(v float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLT(FieldRate, v))
}

// RateLTE applies the LTE predicate on the "rate" field.
func RateLTE(v float64) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLTE(FieldRate, v))
}

// RateIsNil applies the IsNil predicate on the "rate" field.
func RateIsNil() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIsNull(FieldRate))
}

// RateNotNil applies the NotNil predicate on the "rate" field.
func RateNotNil() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotNull(FieldRate))
}

// EstDeliveryDateEQ applies the EQ predicate on the "est_delivery_date" field.
func EstDeliveryDateEQ(v time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldEQ(FieldEstDeliveryDate, v))
}

// EstDeliveryDateNEQ applies the NEQ predicate on the "est_delivery_date" field.
func EstDeliveryDateNEQ(v time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNEQ(FieldEstDeliveryDate, v))
}

// EstDeliveryDateIn applies the In predicate on the "est_delivery_date" field.
func EstDeliveryDateIn(vs ...time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIn(FieldEstDeliveryDate, vs...))
}

// EstDeliveryDateNotIn applies the NotIn predicate on the "est_delivery_date" field.
func EstDeliveryDateNotIn(vs ...time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotIn(FieldEstDeliveryDate, vs...))
}

// EstDeliveryDateGT applies the GT predicate on the "est_delivery_date" field.
func EstDeliveryDateGT(v time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGT(FieldEstDeliveryDate, v))
}

// EstDeliveryDateGTE applies the GTE predicate on the "est_delivery_date" field.
func EstDeliveryDateGTE(v time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldGTE(FieldEstDeliveryDate, v))
}

// EstDeliveryDateLT applies the LT predicate on the "est_delivery_date" field.
func EstDeliveryDateLT(v time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLT(FieldEstDeliveryDate, v))
}

// EstDeliveryDateLTE applies the LTE predicate on the "est_delivery_date" field.
func EstDeliveryDateLTE(v time.Time) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldLTE(FieldEstDeliveryDate, v))
}

// EstDeliveryDateIsNil applies the IsNil predicate on the "est_delivery_date" field.
func EstDeliveryDateIsNil() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldIsNull(FieldEstDeliveryDate))
}

// EstDeliveryDateNotNil applies the NotNil predicate on the "est_delivery_date" field.
func EstDeliveryDateNotNil() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.FieldNotNull(FieldEstDeliveryDate))
}

// HasTenant applies the HasEdge predicate on the "tenant" edge.
func HasTenant() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, TenantTable, TenantColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTenantWith applies the HasEdge predicate on the "tenant" edge with a given conditions (other predicates).
func HasTenantWith(preds ...predicate.Tenant) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(func(s *sql.Selector) {
		step := newTenantStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasShipment applies the HasEdge predicate on the "shipment" edge.
func HasShipment() predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, ShipmentTable, ShipmentColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasShipmentWith applies the HasEdge predicate on the "shipment" edge with a given conditions (other predicates).
func HasShipmentWith(preds ...predicate.Shipment) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(func(s *sql.Selector) {
		step := newShipmentStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ShipmentEasyPost) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ShipmentEasyPost) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ShipmentEasyPost) predicate.ShipmentEasyPost {
	return predicate.ShipmentEasyPost(sql.NotPredicates(p))
}
