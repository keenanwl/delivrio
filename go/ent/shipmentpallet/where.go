// Code generated by ent, DO NOT EDIT.

package shipmentpallet

import (
	"delivrio.io/go/ent/predicate"
	"delivrio.io/shared-utils/pulid"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldTenantID, v))
}

// Barcode applies equality check predicate on the "barcode" field. It's identical to BarcodeEQ.
func Barcode(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldBarcode, v))
}

// ColliNumber applies equality check predicate on the "colli_number" field. It's identical to ColliNumberEQ.
func ColliNumber(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldColliNumber, v))
}

// CarrierID applies equality check predicate on the "carrier_id" field. It's identical to CarrierIDEQ.
func CarrierID(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldCarrierID, v))
}

// LabelPdf applies equality check predicate on the "label_pdf" field. It's identical to LabelPdfEQ.
func LabelPdf(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldLabelPdf, v))
}

// LabelZpl applies equality check predicate on the "label_zpl" field. It's identical to LabelZplEQ.
func LabelZpl(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldLabelZpl, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v pulid.ID) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v pulid.ID) predicate.ShipmentPallet {
	vc := string(v)
	return predicate.ShipmentPallet(sql.FieldContains(FieldTenantID, vc))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v pulid.ID) predicate.ShipmentPallet {
	vc := string(v)
	return predicate.ShipmentPallet(sql.FieldHasPrefix(FieldTenantID, vc))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v pulid.ID) predicate.ShipmentPallet {
	vc := string(v)
	return predicate.ShipmentPallet(sql.FieldHasSuffix(FieldTenantID, vc))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v pulid.ID) predicate.ShipmentPallet {
	vc := string(v)
	return predicate.ShipmentPallet(sql.FieldEqualFold(FieldTenantID, vc))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v pulid.ID) predicate.ShipmentPallet {
	vc := string(v)
	return predicate.ShipmentPallet(sql.FieldContainsFold(FieldTenantID, vc))
}

// BarcodeEQ applies the EQ predicate on the "barcode" field.
func BarcodeEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldBarcode, v))
}

// BarcodeNEQ applies the NEQ predicate on the "barcode" field.
func BarcodeNEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNEQ(FieldBarcode, v))
}

// BarcodeIn applies the In predicate on the "barcode" field.
func BarcodeIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIn(FieldBarcode, vs...))
}

// BarcodeNotIn applies the NotIn predicate on the "barcode" field.
func BarcodeNotIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotIn(FieldBarcode, vs...))
}

// BarcodeGT applies the GT predicate on the "barcode" field.
func BarcodeGT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGT(FieldBarcode, v))
}

// BarcodeGTE applies the GTE predicate on the "barcode" field.
func BarcodeGTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGTE(FieldBarcode, v))
}

// BarcodeLT applies the LT predicate on the "barcode" field.
func BarcodeLT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLT(FieldBarcode, v))
}

// BarcodeLTE applies the LTE predicate on the "barcode" field.
func BarcodeLTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLTE(FieldBarcode, v))
}

// BarcodeContains applies the Contains predicate on the "barcode" field.
func BarcodeContains(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContains(FieldBarcode, v))
}

// BarcodeHasPrefix applies the HasPrefix predicate on the "barcode" field.
func BarcodeHasPrefix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasPrefix(FieldBarcode, v))
}

// BarcodeHasSuffix applies the HasSuffix predicate on the "barcode" field.
func BarcodeHasSuffix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasSuffix(FieldBarcode, v))
}

// BarcodeEqualFold applies the EqualFold predicate on the "barcode" field.
func BarcodeEqualFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEqualFold(FieldBarcode, v))
}

// BarcodeContainsFold applies the ContainsFold predicate on the "barcode" field.
func BarcodeContainsFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContainsFold(FieldBarcode, v))
}

// ColliNumberEQ applies the EQ predicate on the "colli_number" field.
func ColliNumberEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldColliNumber, v))
}

// ColliNumberNEQ applies the NEQ predicate on the "colli_number" field.
func ColliNumberNEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNEQ(FieldColliNumber, v))
}

// ColliNumberIn applies the In predicate on the "colli_number" field.
func ColliNumberIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIn(FieldColliNumber, vs...))
}

// ColliNumberNotIn applies the NotIn predicate on the "colli_number" field.
func ColliNumberNotIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotIn(FieldColliNumber, vs...))
}

// ColliNumberGT applies the GT predicate on the "colli_number" field.
func ColliNumberGT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGT(FieldColliNumber, v))
}

// ColliNumberGTE applies the GTE predicate on the "colli_number" field.
func ColliNumberGTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGTE(FieldColliNumber, v))
}

// ColliNumberLT applies the LT predicate on the "colli_number" field.
func ColliNumberLT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLT(FieldColliNumber, v))
}

// ColliNumberLTE applies the LTE predicate on the "colli_number" field.
func ColliNumberLTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLTE(FieldColliNumber, v))
}

// ColliNumberContains applies the Contains predicate on the "colli_number" field.
func ColliNumberContains(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContains(FieldColliNumber, v))
}

// ColliNumberHasPrefix applies the HasPrefix predicate on the "colli_number" field.
func ColliNumberHasPrefix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasPrefix(FieldColliNumber, v))
}

// ColliNumberHasSuffix applies the HasSuffix predicate on the "colli_number" field.
func ColliNumberHasSuffix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasSuffix(FieldColliNumber, v))
}

// ColliNumberEqualFold applies the EqualFold predicate on the "colli_number" field.
func ColliNumberEqualFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEqualFold(FieldColliNumber, v))
}

// ColliNumberContainsFold applies the ContainsFold predicate on the "colli_number" field.
func ColliNumberContainsFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContainsFold(FieldColliNumber, v))
}

// CarrierIDEQ applies the EQ predicate on the "carrier_id" field.
func CarrierIDEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldCarrierID, v))
}

// CarrierIDNEQ applies the NEQ predicate on the "carrier_id" field.
func CarrierIDNEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNEQ(FieldCarrierID, v))
}

// CarrierIDIn applies the In predicate on the "carrier_id" field.
func CarrierIDIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIn(FieldCarrierID, vs...))
}

// CarrierIDNotIn applies the NotIn predicate on the "carrier_id" field.
func CarrierIDNotIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotIn(FieldCarrierID, vs...))
}

// CarrierIDGT applies the GT predicate on the "carrier_id" field.
func CarrierIDGT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGT(FieldCarrierID, v))
}

// CarrierIDGTE applies the GTE predicate on the "carrier_id" field.
func CarrierIDGTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGTE(FieldCarrierID, v))
}

// CarrierIDLT applies the LT predicate on the "carrier_id" field.
func CarrierIDLT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLT(FieldCarrierID, v))
}

// CarrierIDLTE applies the LTE predicate on the "carrier_id" field.
func CarrierIDLTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLTE(FieldCarrierID, v))
}

// CarrierIDContains applies the Contains predicate on the "carrier_id" field.
func CarrierIDContains(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContains(FieldCarrierID, v))
}

// CarrierIDHasPrefix applies the HasPrefix predicate on the "carrier_id" field.
func CarrierIDHasPrefix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasPrefix(FieldCarrierID, v))
}

// CarrierIDHasSuffix applies the HasSuffix predicate on the "carrier_id" field.
func CarrierIDHasSuffix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasSuffix(FieldCarrierID, v))
}

// CarrierIDEqualFold applies the EqualFold predicate on the "carrier_id" field.
func CarrierIDEqualFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEqualFold(FieldCarrierID, v))
}

// CarrierIDContainsFold applies the ContainsFold predicate on the "carrier_id" field.
func CarrierIDContainsFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContainsFold(FieldCarrierID, v))
}

// LabelPdfEQ applies the EQ predicate on the "label_pdf" field.
func LabelPdfEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldLabelPdf, v))
}

// LabelPdfNEQ applies the NEQ predicate on the "label_pdf" field.
func LabelPdfNEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNEQ(FieldLabelPdf, v))
}

// LabelPdfIn applies the In predicate on the "label_pdf" field.
func LabelPdfIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIn(FieldLabelPdf, vs...))
}

// LabelPdfNotIn applies the NotIn predicate on the "label_pdf" field.
func LabelPdfNotIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotIn(FieldLabelPdf, vs...))
}

// LabelPdfGT applies the GT predicate on the "label_pdf" field.
func LabelPdfGT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGT(FieldLabelPdf, v))
}

// LabelPdfGTE applies the GTE predicate on the "label_pdf" field.
func LabelPdfGTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGTE(FieldLabelPdf, v))
}

// LabelPdfLT applies the LT predicate on the "label_pdf" field.
func LabelPdfLT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLT(FieldLabelPdf, v))
}

// LabelPdfLTE applies the LTE predicate on the "label_pdf" field.
func LabelPdfLTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLTE(FieldLabelPdf, v))
}

// LabelPdfContains applies the Contains predicate on the "label_pdf" field.
func LabelPdfContains(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContains(FieldLabelPdf, v))
}

// LabelPdfHasPrefix applies the HasPrefix predicate on the "label_pdf" field.
func LabelPdfHasPrefix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasPrefix(FieldLabelPdf, v))
}

// LabelPdfHasSuffix applies the HasSuffix predicate on the "label_pdf" field.
func LabelPdfHasSuffix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasSuffix(FieldLabelPdf, v))
}

// LabelPdfIsNil applies the IsNil predicate on the "label_pdf" field.
func LabelPdfIsNil() predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIsNull(FieldLabelPdf))
}

// LabelPdfNotNil applies the NotNil predicate on the "label_pdf" field.
func LabelPdfNotNil() predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotNull(FieldLabelPdf))
}

// LabelPdfEqualFold applies the EqualFold predicate on the "label_pdf" field.
func LabelPdfEqualFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEqualFold(FieldLabelPdf, v))
}

// LabelPdfContainsFold applies the ContainsFold predicate on the "label_pdf" field.
func LabelPdfContainsFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContainsFold(FieldLabelPdf, v))
}

// LabelZplEQ applies the EQ predicate on the "label_zpl" field.
func LabelZplEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldLabelZpl, v))
}

// LabelZplNEQ applies the NEQ predicate on the "label_zpl" field.
func LabelZplNEQ(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNEQ(FieldLabelZpl, v))
}

// LabelZplIn applies the In predicate on the "label_zpl" field.
func LabelZplIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIn(FieldLabelZpl, vs...))
}

// LabelZplNotIn applies the NotIn predicate on the "label_zpl" field.
func LabelZplNotIn(vs ...string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotIn(FieldLabelZpl, vs...))
}

// LabelZplGT applies the GT predicate on the "label_zpl" field.
func LabelZplGT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGT(FieldLabelZpl, v))
}

// LabelZplGTE applies the GTE predicate on the "label_zpl" field.
func LabelZplGTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldGTE(FieldLabelZpl, v))
}

// LabelZplLT applies the LT predicate on the "label_zpl" field.
func LabelZplLT(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLT(FieldLabelZpl, v))
}

// LabelZplLTE applies the LTE predicate on the "label_zpl" field.
func LabelZplLTE(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldLTE(FieldLabelZpl, v))
}

// LabelZplContains applies the Contains predicate on the "label_zpl" field.
func LabelZplContains(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContains(FieldLabelZpl, v))
}

// LabelZplHasPrefix applies the HasPrefix predicate on the "label_zpl" field.
func LabelZplHasPrefix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasPrefix(FieldLabelZpl, v))
}

// LabelZplHasSuffix applies the HasSuffix predicate on the "label_zpl" field.
func LabelZplHasSuffix(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldHasSuffix(FieldLabelZpl, v))
}

// LabelZplIsNil applies the IsNil predicate on the "label_zpl" field.
func LabelZplIsNil() predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIsNull(FieldLabelZpl))
}

// LabelZplNotNil applies the NotNil predicate on the "label_zpl" field.
func LabelZplNotNil() predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotNull(FieldLabelZpl))
}

// LabelZplEqualFold applies the EqualFold predicate on the "label_zpl" field.
func LabelZplEqualFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEqualFold(FieldLabelZpl, v))
}

// LabelZplContainsFold applies the ContainsFold predicate on the "label_zpl" field.
func LabelZplContainsFold(v string) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldContainsFold(FieldLabelZpl, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.FieldNotIn(FieldStatus, vs...))
}

// HasTenant applies the HasEdge predicate on the "tenant" edge.
func HasTenant() predicate.ShipmentPallet {
	return predicate.ShipmentPallet(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, TenantTable, TenantColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTenantWith applies the HasEdge predicate on the "tenant" edge with a given conditions (other predicates).
func HasTenantWith(preds ...predicate.Tenant) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(func(s *sql.Selector) {
		step := newTenantStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasPallet applies the HasEdge predicate on the "pallet" edge.
func HasPallet() predicate.ShipmentPallet {
	return predicate.ShipmentPallet(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, PalletTable, PalletColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasPalletWith applies the HasEdge predicate on the "pallet" edge with a given conditions (other predicates).
func HasPalletWith(preds ...predicate.Pallet) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(func(s *sql.Selector) {
		step := newPalletStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasOldPallet applies the HasEdge predicate on the "old_pallet" edge.
func HasOldPallet() predicate.ShipmentPallet {
	return predicate.ShipmentPallet(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2M, true, OldPalletTable, OldPalletPrimaryKey...),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasOldPalletWith applies the HasEdge predicate on the "old_pallet" edge with a given conditions (other predicates).
func HasOldPalletWith(preds ...predicate.Pallet) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(func(s *sql.Selector) {
		step := newOldPalletStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasShipment applies the HasEdge predicate on the "shipment" edge.
func HasShipment() predicate.ShipmentPallet {
	return predicate.ShipmentPallet(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ShipmentTable, ShipmentColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasShipmentWith applies the HasEdge predicate on the "shipment" edge with a given conditions (other predicates).
func HasShipmentWith(preds ...predicate.Shipment) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(func(s *sql.Selector) {
		step := newShipmentStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ShipmentPallet) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ShipmentPallet) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ShipmentPallet) predicate.ShipmentPallet {
	return predicate.ShipmentPallet(sql.NotPredicates(p))
}
