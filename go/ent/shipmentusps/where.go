// Code generated by ent, DO NOT EDIT.

package shipmentusps

import (
	"time"

	"delivrio.io/go/ent/predicate"
	"delivrio.io/shared-utils/pulid"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldTenantID, v))
}

// TrackingNumber applies equality check predicate on the "tracking_number" field. It's identical to TrackingNumberEQ.
func TrackingNumber(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldTrackingNumber, v))
}

// Postage applies equality check predicate on the "postage" field. It's identical to PostageEQ.
func Postage(v float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldPostage, v))
}

// ScheduledDeliveryDate applies equality check predicate on the "scheduled_delivery_date" field. It's identical to ScheduledDeliveryDateEQ.
func ScheduledDeliveryDate(v time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldScheduledDeliveryDate, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v pulid.ID) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v pulid.ID) predicate.ShipmentUSPS {
	vc := string(v)
	return predicate.ShipmentUSPS(sql.FieldContains(FieldTenantID, vc))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v pulid.ID) predicate.ShipmentUSPS {
	vc := string(v)
	return predicate.ShipmentUSPS(sql.FieldHasPrefix(FieldTenantID, vc))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v pulid.ID) predicate.ShipmentUSPS {
	vc := string(v)
	return predicate.ShipmentUSPS(sql.FieldHasSuffix(FieldTenantID, vc))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v pulid.ID) predicate.ShipmentUSPS {
	vc := string(v)
	return predicate.ShipmentUSPS(sql.FieldEqualFold(FieldTenantID, vc))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v pulid.ID) predicate.ShipmentUSPS {
	vc := string(v)
	return predicate.ShipmentUSPS(sql.FieldContainsFold(FieldTenantID, vc))
}

// TrackingNumberEQ applies the EQ predicate on the "tracking_number" field.
func TrackingNumberEQ(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldTrackingNumber, v))
}

// TrackingNumberNEQ applies the NEQ predicate on the "tracking_number" field.
func TrackingNumberNEQ(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNEQ(FieldTrackingNumber, v))
}

// TrackingNumberIn applies the In predicate on the "tracking_number" field.
func TrackingNumberIn(vs ...string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldIn(FieldTrackingNumber, vs...))
}

// TrackingNumberNotIn applies the NotIn predicate on the "tracking_number" field.
func TrackingNumberNotIn(vs ...string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNotIn(FieldTrackingNumber, vs...))
}

// TrackingNumberGT applies the GT predicate on the "tracking_number" field.
func TrackingNumberGT(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGT(FieldTrackingNumber, v))
}

// TrackingNumberGTE applies the GTE predicate on the "tracking_number" field.
func TrackingNumberGTE(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGTE(FieldTrackingNumber, v))
}

// TrackingNumberLT applies the LT predicate on the "tracking_number" field.
func TrackingNumberLT(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLT(FieldTrackingNumber, v))
}

// TrackingNumberLTE applies the LTE predicate on the "tracking_number" field.
func TrackingNumberLTE(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLTE(FieldTrackingNumber, v))
}

// TrackingNumberContains applies the Contains predicate on the "tracking_number" field.
func TrackingNumberContains(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldContains(FieldTrackingNumber, v))
}

// TrackingNumberHasPrefix applies the HasPrefix predicate on the "tracking_number" field.
func TrackingNumberHasPrefix(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldHasPrefix(FieldTrackingNumber, v))
}

// TrackingNumberHasSuffix applies the HasSuffix predicate on the "tracking_number" field.
func TrackingNumberHasSuffix(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldHasSuffix(FieldTrackingNumber, v))
}

// TrackingNumberIsNil applies the IsNil predicate on the "tracking_number" field.
func TrackingNumberIsNil() predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldIsNull(FieldTrackingNumber))
}

// TrackingNumberNotNil applies the NotNil predicate on the "tracking_number" field.
func TrackingNumberNotNil() predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNotNull(FieldTrackingNumber))
}

// TrackingNumberEqualFold applies the EqualFold predicate on the "tracking_number" field.
func TrackingNumberEqualFold(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEqualFold(FieldTrackingNumber, v))
}

// TrackingNumberContainsFold applies the ContainsFold predicate on the "tracking_number" field.
func TrackingNumberContainsFold(v string) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldContainsFold(FieldTrackingNumber, v))
}

// PostageEQ applies the EQ predicate on the "postage" field.
func PostageEQ(v float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldPostage, v))
}

// PostageNEQ applies the NEQ predicate on the "postage" field.
func PostageNEQ(v float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNEQ(FieldPostage, v))
}

// PostageIn applies the In predicate on the "postage" field.
func PostageIn(vs ...float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldIn(FieldPostage, vs...))
}

// PostageNotIn applies the NotIn predicate on the "postage" field.
func PostageNotIn(vs ...float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNotIn(FieldPostage, vs...))
}

// PostageGT applies the GT predicate on the "postage" field.
func PostageGT(v float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGT(FieldPostage, v))
}

// PostageGTE applies the GTE predicate on the "postage" field.
func PostageGTE(v float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGTE(FieldPostage, v))
}

// PostageLT applies the LT predicate on the "postage" field.
func PostageLT(v float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLT(FieldPostage, v))
}

// PostageLTE applies the LTE predicate on the "postage" field.
func PostageLTE(v float64) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLTE(FieldPostage, v))
}

// PostageIsNil applies the IsNil predicate on the "postage" field.
func PostageIsNil() predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldIsNull(FieldPostage))
}

// PostageNotNil applies the NotNil predicate on the "postage" field.
func PostageNotNil() predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNotNull(FieldPostage))
}

// ScheduledDeliveryDateEQ applies the EQ predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateEQ(v time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldEQ(FieldScheduledDeliveryDate, v))
}

// ScheduledDeliveryDateNEQ applies the NEQ predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateNEQ(v time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNEQ(FieldScheduledDeliveryDate, v))
}

// ScheduledDeliveryDateIn applies the In predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateIn(vs ...time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldIn(FieldScheduledDeliveryDate, vs...))
}

// ScheduledDeliveryDateNotIn applies the NotIn predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateNotIn(vs ...time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNotIn(FieldScheduledDeliveryDate, vs...))
}

// ScheduledDeliveryDateGT applies the GT predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateGT(v time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGT(FieldScheduledDeliveryDate, v))
}

// ScheduledDeliveryDateGTE applies the GTE predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateGTE(v time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldGTE(FieldScheduledDeliveryDate, v))
}

// ScheduledDeliveryDateLT applies the LT predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateLT(v time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLT(FieldScheduledDeliveryDate, v))
}

// ScheduledDeliveryDateLTE applies the LTE predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateLTE(v time.Time) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldLTE(FieldScheduledDeliveryDate, v))
}

// ScheduledDeliveryDateIsNil applies the IsNil predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateIsNil() predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldIsNull(FieldScheduledDeliveryDate))
}

// ScheduledDeliveryDateNotNil applies the NotNil predicate on the "scheduled_delivery_date" field.
func ScheduledDeliveryDateNotNil() predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.FieldNotNull(FieldScheduledDeliveryDate))
}

// HasTenant applies the HasEdge predicate on the "tenant" edge.
func HasTenant() predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, TenantTable, TenantColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTenantWith applies the HasEdge predicate on the "tenant" edge with a given conditions (other predicates).
func HasTenantWith(preds ...predicate.Tenant) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(func(s *sql.Selector) {
		step := newTenantStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasShipment applies the HasEdge predicate on the "shipment" edge.
func HasShipment() predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2O, true, ShipmentTable, ShipmentColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasShipmentWith applies the HasEdge predicate on the "shipment" edge with a given conditions (other predicates).
func HasShipmentWith(preds ...predicate.Shipment) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(func(s *sql.Selector) {
		step := newShipmentStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ShipmentUSPS) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ShipmentUSPS) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ShipmentUSPS) predicate.ShipmentUSPS {
	return predicate.ShipmentUSPS(sql.NotPredicates(p))
}
