// Code generated by ent, DO NOT EDIT.

package ordersender

import (
	"delivrio.io/go/ent/predicate"
	"delivrio.io/shared-utils/pulid"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLTE(FieldID, id))
}

// TenantID applies equality check predicate on the "tenant_id" field. It's identical to TenantIDEQ.
func TenantID(v pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldTenantID, v))
}

// UniquenessID applies equality check predicate on the "uniqueness_id" field. It's identical to UniquenessIDEQ.
func UniquenessID(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldUniquenessID, v))
}

// FirstName applies equality check predicate on the "first_name" field. It's identical to FirstNameEQ.
func FirstName(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldFirstName, v))
}

// LastName applies equality check predicate on the "last_name" field. It's identical to LastNameEQ.
func LastName(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldLastName, v))
}

// Email applies equality check predicate on the "email" field. It's identical to EmailEQ.
func Email(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldEmail, v))
}

// PhoneNumber applies equality check predicate on the "phone_number" field. It's identical to PhoneNumberEQ.
func PhoneNumber(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldPhoneNumber, v))
}

// VatNumber applies equality check predicate on the "vat_number" field. It's identical to VatNumberEQ.
func VatNumber(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldVatNumber, v))
}

// TenantIDEQ applies the EQ predicate on the "tenant_id" field.
func TenantIDEQ(v pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldTenantID, v))
}

// TenantIDNEQ applies the NEQ predicate on the "tenant_id" field.
func TenantIDNEQ(v pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNEQ(FieldTenantID, v))
}

// TenantIDIn applies the In predicate on the "tenant_id" field.
func TenantIDIn(vs ...pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIn(FieldTenantID, vs...))
}

// TenantIDNotIn applies the NotIn predicate on the "tenant_id" field.
func TenantIDNotIn(vs ...pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotIn(FieldTenantID, vs...))
}

// TenantIDGT applies the GT predicate on the "tenant_id" field.
func TenantIDGT(v pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGT(FieldTenantID, v))
}

// TenantIDGTE applies the GTE predicate on the "tenant_id" field.
func TenantIDGTE(v pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGTE(FieldTenantID, v))
}

// TenantIDLT applies the LT predicate on the "tenant_id" field.
func TenantIDLT(v pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLT(FieldTenantID, v))
}

// TenantIDLTE applies the LTE predicate on the "tenant_id" field.
func TenantIDLTE(v pulid.ID) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLTE(FieldTenantID, v))
}

// TenantIDContains applies the Contains predicate on the "tenant_id" field.
func TenantIDContains(v pulid.ID) predicate.OrderSender {
	vc := string(v)
	return predicate.OrderSender(sql.FieldContains(FieldTenantID, vc))
}

// TenantIDHasPrefix applies the HasPrefix predicate on the "tenant_id" field.
func TenantIDHasPrefix(v pulid.ID) predicate.OrderSender {
	vc := string(v)
	return predicate.OrderSender(sql.FieldHasPrefix(FieldTenantID, vc))
}

// TenantIDHasSuffix applies the HasSuffix predicate on the "tenant_id" field.
func TenantIDHasSuffix(v pulid.ID) predicate.OrderSender {
	vc := string(v)
	return predicate.OrderSender(sql.FieldHasSuffix(FieldTenantID, vc))
}

// TenantIDEqualFold applies the EqualFold predicate on the "tenant_id" field.
func TenantIDEqualFold(v pulid.ID) predicate.OrderSender {
	vc := string(v)
	return predicate.OrderSender(sql.FieldEqualFold(FieldTenantID, vc))
}

// TenantIDContainsFold applies the ContainsFold predicate on the "tenant_id" field.
func TenantIDContainsFold(v pulid.ID) predicate.OrderSender {
	vc := string(v)
	return predicate.OrderSender(sql.FieldContainsFold(FieldTenantID, vc))
}

// UniquenessIDEQ applies the EQ predicate on the "uniqueness_id" field.
func UniquenessIDEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldUniquenessID, v))
}

// UniquenessIDNEQ applies the NEQ predicate on the "uniqueness_id" field.
func UniquenessIDNEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNEQ(FieldUniquenessID, v))
}

// UniquenessIDIn applies the In predicate on the "uniqueness_id" field.
func UniquenessIDIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIn(FieldUniquenessID, vs...))
}

// UniquenessIDNotIn applies the NotIn predicate on the "uniqueness_id" field.
func UniquenessIDNotIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotIn(FieldUniquenessID, vs...))
}

// UniquenessIDGT applies the GT predicate on the "uniqueness_id" field.
func UniquenessIDGT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGT(FieldUniquenessID, v))
}

// UniquenessIDGTE applies the GTE predicate on the "uniqueness_id" field.
func UniquenessIDGTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGTE(FieldUniquenessID, v))
}

// UniquenessIDLT applies the LT predicate on the "uniqueness_id" field.
func UniquenessIDLT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLT(FieldUniquenessID, v))
}

// UniquenessIDLTE applies the LTE predicate on the "uniqueness_id" field.
func UniquenessIDLTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLTE(FieldUniquenessID, v))
}

// UniquenessIDContains applies the Contains predicate on the "uniqueness_id" field.
func UniquenessIDContains(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContains(FieldUniquenessID, v))
}

// UniquenessIDHasPrefix applies the HasPrefix predicate on the "uniqueness_id" field.
func UniquenessIDHasPrefix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasPrefix(FieldUniquenessID, v))
}

// UniquenessIDHasSuffix applies the HasSuffix predicate on the "uniqueness_id" field.
func UniquenessIDHasSuffix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasSuffix(FieldUniquenessID, v))
}

// UniquenessIDIsNil applies the IsNil predicate on the "uniqueness_id" field.
func UniquenessIDIsNil() predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIsNull(FieldUniquenessID))
}

// UniquenessIDNotNil applies the NotNil predicate on the "uniqueness_id" field.
func UniquenessIDNotNil() predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotNull(FieldUniquenessID))
}

// UniquenessIDEqualFold applies the EqualFold predicate on the "uniqueness_id" field.
func UniquenessIDEqualFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEqualFold(FieldUniquenessID, v))
}

// UniquenessIDContainsFold applies the ContainsFold predicate on the "uniqueness_id" field.
func UniquenessIDContainsFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContainsFold(FieldUniquenessID, v))
}

// FirstNameEQ applies the EQ predicate on the "first_name" field.
func FirstNameEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldFirstName, v))
}

// FirstNameNEQ applies the NEQ predicate on the "first_name" field.
func FirstNameNEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNEQ(FieldFirstName, v))
}

// FirstNameIn applies the In predicate on the "first_name" field.
func FirstNameIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIn(FieldFirstName, vs...))
}

// FirstNameNotIn applies the NotIn predicate on the "first_name" field.
func FirstNameNotIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotIn(FieldFirstName, vs...))
}

// FirstNameGT applies the GT predicate on the "first_name" field.
func FirstNameGT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGT(FieldFirstName, v))
}

// FirstNameGTE applies the GTE predicate on the "first_name" field.
func FirstNameGTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGTE(FieldFirstName, v))
}

// FirstNameLT applies the LT predicate on the "first_name" field.
func FirstNameLT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLT(FieldFirstName, v))
}

// FirstNameLTE applies the LTE predicate on the "first_name" field.
func FirstNameLTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLTE(FieldFirstName, v))
}

// FirstNameContains applies the Contains predicate on the "first_name" field.
func FirstNameContains(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContains(FieldFirstName, v))
}

// FirstNameHasPrefix applies the HasPrefix predicate on the "first_name" field.
func FirstNameHasPrefix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasPrefix(FieldFirstName, v))
}

// FirstNameHasSuffix applies the HasSuffix predicate on the "first_name" field.
func FirstNameHasSuffix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasSuffix(FieldFirstName, v))
}

// FirstNameEqualFold applies the EqualFold predicate on the "first_name" field.
func FirstNameEqualFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEqualFold(FieldFirstName, v))
}

// FirstNameContainsFold applies the ContainsFold predicate on the "first_name" field.
func FirstNameContainsFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContainsFold(FieldFirstName, v))
}

// LastNameEQ applies the EQ predicate on the "last_name" field.
func LastNameEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldLastName, v))
}

// LastNameNEQ applies the NEQ predicate on the "last_name" field.
func LastNameNEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNEQ(FieldLastName, v))
}

// LastNameIn applies the In predicate on the "last_name" field.
func LastNameIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIn(FieldLastName, vs...))
}

// LastNameNotIn applies the NotIn predicate on the "last_name" field.
func LastNameNotIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotIn(FieldLastName, vs...))
}

// LastNameGT applies the GT predicate on the "last_name" field.
func LastNameGT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGT(FieldLastName, v))
}

// LastNameGTE applies the GTE predicate on the "last_name" field.
func LastNameGTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGTE(FieldLastName, v))
}

// LastNameLT applies the LT predicate on the "last_name" field.
func LastNameLT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLT(FieldLastName, v))
}

// LastNameLTE applies the LTE predicate on the "last_name" field.
func LastNameLTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLTE(FieldLastName, v))
}

// LastNameContains applies the Contains predicate on the "last_name" field.
func LastNameContains(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContains(FieldLastName, v))
}

// LastNameHasPrefix applies the HasPrefix predicate on the "last_name" field.
func LastNameHasPrefix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasPrefix(FieldLastName, v))
}

// LastNameHasSuffix applies the HasSuffix predicate on the "last_name" field.
func LastNameHasSuffix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasSuffix(FieldLastName, v))
}

// LastNameEqualFold applies the EqualFold predicate on the "last_name" field.
func LastNameEqualFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEqualFold(FieldLastName, v))
}

// LastNameContainsFold applies the ContainsFold predicate on the "last_name" field.
func LastNameContainsFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContainsFold(FieldLastName, v))
}

// EmailEQ applies the EQ predicate on the "email" field.
func EmailEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldEmail, v))
}

// EmailNEQ applies the NEQ predicate on the "email" field.
func EmailNEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNEQ(FieldEmail, v))
}

// EmailIn applies the In predicate on the "email" field.
func EmailIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIn(FieldEmail, vs...))
}

// EmailNotIn applies the NotIn predicate on the "email" field.
func EmailNotIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotIn(FieldEmail, vs...))
}

// EmailGT applies the GT predicate on the "email" field.
func EmailGT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGT(FieldEmail, v))
}

// EmailGTE applies the GTE predicate on the "email" field.
func EmailGTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGTE(FieldEmail, v))
}

// EmailLT applies the LT predicate on the "email" field.
func EmailLT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLT(FieldEmail, v))
}

// EmailLTE applies the LTE predicate on the "email" field.
func EmailLTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLTE(FieldEmail, v))
}

// EmailContains applies the Contains predicate on the "email" field.
func EmailContains(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContains(FieldEmail, v))
}

// EmailHasPrefix applies the HasPrefix predicate on the "email" field.
func EmailHasPrefix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasPrefix(FieldEmail, v))
}

// EmailHasSuffix applies the HasSuffix predicate on the "email" field.
func EmailHasSuffix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasSuffix(FieldEmail, v))
}

// EmailEqualFold applies the EqualFold predicate on the "email" field.
func EmailEqualFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEqualFold(FieldEmail, v))
}

// EmailContainsFold applies the ContainsFold predicate on the "email" field.
func EmailContainsFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContainsFold(FieldEmail, v))
}

// PhoneNumberEQ applies the EQ predicate on the "phone_number" field.
func PhoneNumberEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldPhoneNumber, v))
}

// PhoneNumberNEQ applies the NEQ predicate on the "phone_number" field.
func PhoneNumberNEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNEQ(FieldPhoneNumber, v))
}

// PhoneNumberIn applies the In predicate on the "phone_number" field.
func PhoneNumberIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIn(FieldPhoneNumber, vs...))
}

// PhoneNumberNotIn applies the NotIn predicate on the "phone_number" field.
func PhoneNumberNotIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotIn(FieldPhoneNumber, vs...))
}

// PhoneNumberGT applies the GT predicate on the "phone_number" field.
func PhoneNumberGT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGT(FieldPhoneNumber, v))
}

// PhoneNumberGTE applies the GTE predicate on the "phone_number" field.
func PhoneNumberGTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGTE(FieldPhoneNumber, v))
}

// PhoneNumberLT applies the LT predicate on the "phone_number" field.
func PhoneNumberLT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLT(FieldPhoneNumber, v))
}

// PhoneNumberLTE applies the LTE predicate on the "phone_number" field.
func PhoneNumberLTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLTE(FieldPhoneNumber, v))
}

// PhoneNumberContains applies the Contains predicate on the "phone_number" field.
func PhoneNumberContains(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContains(FieldPhoneNumber, v))
}

// PhoneNumberHasPrefix applies the HasPrefix predicate on the "phone_number" field.
func PhoneNumberHasPrefix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasPrefix(FieldPhoneNumber, v))
}

// PhoneNumberHasSuffix applies the HasSuffix predicate on the "phone_number" field.
func PhoneNumberHasSuffix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasSuffix(FieldPhoneNumber, v))
}

// PhoneNumberEqualFold applies the EqualFold predicate on the "phone_number" field.
func PhoneNumberEqualFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEqualFold(FieldPhoneNumber, v))
}

// PhoneNumberContainsFold applies the ContainsFold predicate on the "phone_number" field.
func PhoneNumberContainsFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContainsFold(FieldPhoneNumber, v))
}

// VatNumberEQ applies the EQ predicate on the "vat_number" field.
func VatNumberEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEQ(FieldVatNumber, v))
}

// VatNumberNEQ applies the NEQ predicate on the "vat_number" field.
func VatNumberNEQ(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNEQ(FieldVatNumber, v))
}

// VatNumberIn applies the In predicate on the "vat_number" field.
func VatNumberIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldIn(FieldVatNumber, vs...))
}

// VatNumberNotIn applies the NotIn predicate on the "vat_number" field.
func VatNumberNotIn(vs ...string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldNotIn(FieldVatNumber, vs...))
}

// VatNumberGT applies the GT predicate on the "vat_number" field.
func VatNumberGT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGT(FieldVatNumber, v))
}

// VatNumberGTE applies the GTE predicate on the "vat_number" field.
func VatNumberGTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldGTE(FieldVatNumber, v))
}

// VatNumberLT applies the LT predicate on the "vat_number" field.
func VatNumberLT(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLT(FieldVatNumber, v))
}

// VatNumberLTE applies the LTE predicate on the "vat_number" field.
func VatNumberLTE(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldLTE(FieldVatNumber, v))
}

// VatNumberContains applies the Contains predicate on the "vat_number" field.
func VatNumberContains(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContains(FieldVatNumber, v))
}

// VatNumberHasPrefix applies the HasPrefix predicate on the "vat_number" field.
func VatNumberHasPrefix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasPrefix(FieldVatNumber, v))
}

// VatNumberHasSuffix applies the HasSuffix predicate on the "vat_number" field.
func VatNumberHasSuffix(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldHasSuffix(FieldVatNumber, v))
}

// VatNumberEqualFold applies the EqualFold predicate on the "vat_number" field.
func VatNumberEqualFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldEqualFold(FieldVatNumber, v))
}

// VatNumberContainsFold applies the ContainsFold predicate on the "vat_number" field.
func VatNumberContainsFold(v string) predicate.OrderSender {
	return predicate.OrderSender(sql.FieldContainsFold(FieldVatNumber, v))
}

// HasTenant applies the HasEdge predicate on the "tenant" edge.
func HasTenant() predicate.OrderSender {
	return predicate.OrderSender(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, false, TenantTable, TenantColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTenantWith applies the HasEdge predicate on the "tenant" edge with a given conditions (other predicates).
func HasTenantWith(preds ...predicate.Tenant) predicate.OrderSender {
	return predicate.OrderSender(func(s *sql.Selector) {
		step := newTenantStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.OrderSender) predicate.OrderSender {
	return predicate.OrderSender(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.OrderSender) predicate.OrderSender {
	return predicate.OrderSender(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.OrderSender) predicate.OrderSender {
	return predicate.OrderSender(sql.NotPredicates(p))
}
